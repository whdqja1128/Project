
mini_bt_dht.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005e7c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000190  0800601c  0800601c  0000701c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080061ac  080061ac  00008068  2**0
                  CONTENTS
  4 .ARM          00000008  080061ac  080061ac  000071ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080061b4  080061b4  00008068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080061b4  080061b4  000071b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080061b8  080061b8  000071b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000068  20000000  080061bc  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000890  20000068  08006224  00008068  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200008f8  08006224  000088f8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00008068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00012cf2  00000000  00000000  00008098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002bc2  00000000  00000000  0001ad8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001220  00000000  00000000  0001d950  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000e41  00000000  00000000  0001eb70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000439f  00000000  00000000  0001f9b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000161af  00000000  00000000  00023d50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009ec79  00000000  00000000  00039eff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000d8b78  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005744  00000000  00000000  000d8bbc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000b4  00000000  00000000  000de300  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000068 	.word	0x20000068
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08006004 	.word	0x08006004

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000006c 	.word	0x2000006c
 80001dc:	08006004 	.word	0x08006004

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b96a 	b.w	800057c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	460c      	mov	r4, r1
 80002c8:	2b00      	cmp	r3, #0
 80002ca:	d14e      	bne.n	800036a <__udivmoddi4+0xaa>
 80002cc:	4694      	mov	ip, r2
 80002ce:	458c      	cmp	ip, r1
 80002d0:	4686      	mov	lr, r0
 80002d2:	fab2 f282 	clz	r2, r2
 80002d6:	d962      	bls.n	800039e <__udivmoddi4+0xde>
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0320 	rsb	r3, r2, #32
 80002de:	4091      	lsls	r1, r2
 80002e0:	fa20 f303 	lsr.w	r3, r0, r3
 80002e4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002e8:	4319      	orrs	r1, r3
 80002ea:	fa00 fe02 	lsl.w	lr, r0, r2
 80002ee:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80002f2:	fa1f f68c 	uxth.w	r6, ip
 80002f6:	fbb1 f4f7 	udiv	r4, r1, r7
 80002fa:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002fe:	fb07 1114 	mls	r1, r7, r4, r1
 8000302:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000306:	fb04 f106 	mul.w	r1, r4, r6
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f104 30ff 	add.w	r0, r4, #4294967295
 8000316:	f080 8112 	bcs.w	800053e <__udivmoddi4+0x27e>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 810f 	bls.w	800053e <__udivmoddi4+0x27e>
 8000320:	3c02      	subs	r4, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a59      	subs	r1, r3, r1
 8000326:	fa1f f38e 	uxth.w	r3, lr
 800032a:	fbb1 f0f7 	udiv	r0, r1, r7
 800032e:	fb07 1110 	mls	r1, r7, r0, r1
 8000332:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000336:	fb00 f606 	mul.w	r6, r0, r6
 800033a:	429e      	cmp	r6, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x94>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f100 31ff 	add.w	r1, r0, #4294967295
 8000346:	f080 80fc 	bcs.w	8000542 <__udivmoddi4+0x282>
 800034a:	429e      	cmp	r6, r3
 800034c:	f240 80f9 	bls.w	8000542 <__udivmoddi4+0x282>
 8000350:	4463      	add	r3, ip
 8000352:	3802      	subs	r0, #2
 8000354:	1b9b      	subs	r3, r3, r6
 8000356:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800035a:	2100      	movs	r1, #0
 800035c:	b11d      	cbz	r5, 8000366 <__udivmoddi4+0xa6>
 800035e:	40d3      	lsrs	r3, r2
 8000360:	2200      	movs	r2, #0
 8000362:	e9c5 3200 	strd	r3, r2, [r5]
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d905      	bls.n	800037a <__udivmoddi4+0xba>
 800036e:	b10d      	cbz	r5, 8000374 <__udivmoddi4+0xb4>
 8000370:	e9c5 0100 	strd	r0, r1, [r5]
 8000374:	2100      	movs	r1, #0
 8000376:	4608      	mov	r0, r1
 8000378:	e7f5      	b.n	8000366 <__udivmoddi4+0xa6>
 800037a:	fab3 f183 	clz	r1, r3
 800037e:	2900      	cmp	r1, #0
 8000380:	d146      	bne.n	8000410 <__udivmoddi4+0x150>
 8000382:	42a3      	cmp	r3, r4
 8000384:	d302      	bcc.n	800038c <__udivmoddi4+0xcc>
 8000386:	4290      	cmp	r0, r2
 8000388:	f0c0 80f0 	bcc.w	800056c <__udivmoddi4+0x2ac>
 800038c:	1a86      	subs	r6, r0, r2
 800038e:	eb64 0303 	sbc.w	r3, r4, r3
 8000392:	2001      	movs	r0, #1
 8000394:	2d00      	cmp	r5, #0
 8000396:	d0e6      	beq.n	8000366 <__udivmoddi4+0xa6>
 8000398:	e9c5 6300 	strd	r6, r3, [r5]
 800039c:	e7e3      	b.n	8000366 <__udivmoddi4+0xa6>
 800039e:	2a00      	cmp	r2, #0
 80003a0:	f040 8090 	bne.w	80004c4 <__udivmoddi4+0x204>
 80003a4:	eba1 040c 	sub.w	r4, r1, ip
 80003a8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003ac:	fa1f f78c 	uxth.w	r7, ip
 80003b0:	2101      	movs	r1, #1
 80003b2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003b6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003ba:	fb08 4416 	mls	r4, r8, r6, r4
 80003be:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003c2:	fb07 f006 	mul.w	r0, r7, r6
 80003c6:	4298      	cmp	r0, r3
 80003c8:	d908      	bls.n	80003dc <__udivmoddi4+0x11c>
 80003ca:	eb1c 0303 	adds.w	r3, ip, r3
 80003ce:	f106 34ff 	add.w	r4, r6, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x11a>
 80003d4:	4298      	cmp	r0, r3
 80003d6:	f200 80cd 	bhi.w	8000574 <__udivmoddi4+0x2b4>
 80003da:	4626      	mov	r6, r4
 80003dc:	1a1c      	subs	r4, r3, r0
 80003de:	fa1f f38e 	uxth.w	r3, lr
 80003e2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003e6:	fb08 4410 	mls	r4, r8, r0, r4
 80003ea:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003ee:	fb00 f707 	mul.w	r7, r0, r7
 80003f2:	429f      	cmp	r7, r3
 80003f4:	d908      	bls.n	8000408 <__udivmoddi4+0x148>
 80003f6:	eb1c 0303 	adds.w	r3, ip, r3
 80003fa:	f100 34ff 	add.w	r4, r0, #4294967295
 80003fe:	d202      	bcs.n	8000406 <__udivmoddi4+0x146>
 8000400:	429f      	cmp	r7, r3
 8000402:	f200 80b0 	bhi.w	8000566 <__udivmoddi4+0x2a6>
 8000406:	4620      	mov	r0, r4
 8000408:	1bdb      	subs	r3, r3, r7
 800040a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800040e:	e7a5      	b.n	800035c <__udivmoddi4+0x9c>
 8000410:	f1c1 0620 	rsb	r6, r1, #32
 8000414:	408b      	lsls	r3, r1
 8000416:	fa22 f706 	lsr.w	r7, r2, r6
 800041a:	431f      	orrs	r7, r3
 800041c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000420:	fa04 f301 	lsl.w	r3, r4, r1
 8000424:	ea43 030c 	orr.w	r3, r3, ip
 8000428:	40f4      	lsrs	r4, r6
 800042a:	fa00 f801 	lsl.w	r8, r0, r1
 800042e:	0c38      	lsrs	r0, r7, #16
 8000430:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000434:	fbb4 fef0 	udiv	lr, r4, r0
 8000438:	fa1f fc87 	uxth.w	ip, r7
 800043c:	fb00 441e 	mls	r4, r0, lr, r4
 8000440:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000444:	fb0e f90c 	mul.w	r9, lr, ip
 8000448:	45a1      	cmp	r9, r4
 800044a:	fa02 f201 	lsl.w	r2, r2, r1
 800044e:	d90a      	bls.n	8000466 <__udivmoddi4+0x1a6>
 8000450:	193c      	adds	r4, r7, r4
 8000452:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000456:	f080 8084 	bcs.w	8000562 <__udivmoddi4+0x2a2>
 800045a:	45a1      	cmp	r9, r4
 800045c:	f240 8081 	bls.w	8000562 <__udivmoddi4+0x2a2>
 8000460:	f1ae 0e02 	sub.w	lr, lr, #2
 8000464:	443c      	add	r4, r7
 8000466:	eba4 0409 	sub.w	r4, r4, r9
 800046a:	fa1f f983 	uxth.w	r9, r3
 800046e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000472:	fb00 4413 	mls	r4, r0, r3, r4
 8000476:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800047a:	fb03 fc0c 	mul.w	ip, r3, ip
 800047e:	45a4      	cmp	ip, r4
 8000480:	d907      	bls.n	8000492 <__udivmoddi4+0x1d2>
 8000482:	193c      	adds	r4, r7, r4
 8000484:	f103 30ff 	add.w	r0, r3, #4294967295
 8000488:	d267      	bcs.n	800055a <__udivmoddi4+0x29a>
 800048a:	45a4      	cmp	ip, r4
 800048c:	d965      	bls.n	800055a <__udivmoddi4+0x29a>
 800048e:	3b02      	subs	r3, #2
 8000490:	443c      	add	r4, r7
 8000492:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000496:	fba0 9302 	umull	r9, r3, r0, r2
 800049a:	eba4 040c 	sub.w	r4, r4, ip
 800049e:	429c      	cmp	r4, r3
 80004a0:	46ce      	mov	lr, r9
 80004a2:	469c      	mov	ip, r3
 80004a4:	d351      	bcc.n	800054a <__udivmoddi4+0x28a>
 80004a6:	d04e      	beq.n	8000546 <__udivmoddi4+0x286>
 80004a8:	b155      	cbz	r5, 80004c0 <__udivmoddi4+0x200>
 80004aa:	ebb8 030e 	subs.w	r3, r8, lr
 80004ae:	eb64 040c 	sbc.w	r4, r4, ip
 80004b2:	fa04 f606 	lsl.w	r6, r4, r6
 80004b6:	40cb      	lsrs	r3, r1
 80004b8:	431e      	orrs	r6, r3
 80004ba:	40cc      	lsrs	r4, r1
 80004bc:	e9c5 6400 	strd	r6, r4, [r5]
 80004c0:	2100      	movs	r1, #0
 80004c2:	e750      	b.n	8000366 <__udivmoddi4+0xa6>
 80004c4:	f1c2 0320 	rsb	r3, r2, #32
 80004c8:	fa20 f103 	lsr.w	r1, r0, r3
 80004cc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004d0:	fa24 f303 	lsr.w	r3, r4, r3
 80004d4:	4094      	lsls	r4, r2
 80004d6:	430c      	orrs	r4, r1
 80004d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004dc:	fa00 fe02 	lsl.w	lr, r0, r2
 80004e0:	fa1f f78c 	uxth.w	r7, ip
 80004e4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004e8:	fb08 3110 	mls	r1, r8, r0, r3
 80004ec:	0c23      	lsrs	r3, r4, #16
 80004ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80004f2:	fb00 f107 	mul.w	r1, r0, r7
 80004f6:	4299      	cmp	r1, r3
 80004f8:	d908      	bls.n	800050c <__udivmoddi4+0x24c>
 80004fa:	eb1c 0303 	adds.w	r3, ip, r3
 80004fe:	f100 36ff 	add.w	r6, r0, #4294967295
 8000502:	d22c      	bcs.n	800055e <__udivmoddi4+0x29e>
 8000504:	4299      	cmp	r1, r3
 8000506:	d92a      	bls.n	800055e <__udivmoddi4+0x29e>
 8000508:	3802      	subs	r0, #2
 800050a:	4463      	add	r3, ip
 800050c:	1a5b      	subs	r3, r3, r1
 800050e:	b2a4      	uxth	r4, r4
 8000510:	fbb3 f1f8 	udiv	r1, r3, r8
 8000514:	fb08 3311 	mls	r3, r8, r1, r3
 8000518:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800051c:	fb01 f307 	mul.w	r3, r1, r7
 8000520:	42a3      	cmp	r3, r4
 8000522:	d908      	bls.n	8000536 <__udivmoddi4+0x276>
 8000524:	eb1c 0404 	adds.w	r4, ip, r4
 8000528:	f101 36ff 	add.w	r6, r1, #4294967295
 800052c:	d213      	bcs.n	8000556 <__udivmoddi4+0x296>
 800052e:	42a3      	cmp	r3, r4
 8000530:	d911      	bls.n	8000556 <__udivmoddi4+0x296>
 8000532:	3902      	subs	r1, #2
 8000534:	4464      	add	r4, ip
 8000536:	1ae4      	subs	r4, r4, r3
 8000538:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800053c:	e739      	b.n	80003b2 <__udivmoddi4+0xf2>
 800053e:	4604      	mov	r4, r0
 8000540:	e6f0      	b.n	8000324 <__udivmoddi4+0x64>
 8000542:	4608      	mov	r0, r1
 8000544:	e706      	b.n	8000354 <__udivmoddi4+0x94>
 8000546:	45c8      	cmp	r8, r9
 8000548:	d2ae      	bcs.n	80004a8 <__udivmoddi4+0x1e8>
 800054a:	ebb9 0e02 	subs.w	lr, r9, r2
 800054e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000552:	3801      	subs	r0, #1
 8000554:	e7a8      	b.n	80004a8 <__udivmoddi4+0x1e8>
 8000556:	4631      	mov	r1, r6
 8000558:	e7ed      	b.n	8000536 <__udivmoddi4+0x276>
 800055a:	4603      	mov	r3, r0
 800055c:	e799      	b.n	8000492 <__udivmoddi4+0x1d2>
 800055e:	4630      	mov	r0, r6
 8000560:	e7d4      	b.n	800050c <__udivmoddi4+0x24c>
 8000562:	46d6      	mov	lr, sl
 8000564:	e77f      	b.n	8000466 <__udivmoddi4+0x1a6>
 8000566:	4463      	add	r3, ip
 8000568:	3802      	subs	r0, #2
 800056a:	e74d      	b.n	8000408 <__udivmoddi4+0x148>
 800056c:	4606      	mov	r6, r0
 800056e:	4623      	mov	r3, r4
 8000570:	4608      	mov	r0, r1
 8000572:	e70f      	b.n	8000394 <__udivmoddi4+0xd4>
 8000574:	3e02      	subs	r6, #2
 8000576:	4463      	add	r3, ip
 8000578:	e730      	b.n	80003dc <__udivmoddi4+0x11c>
 800057a:	bf00      	nop

0800057c <__aeabi_idiv0>:
 800057c:	4770      	bx	lr
 800057e:	bf00      	nop

08000580 <DWT_Delay_Init>:
 *      Author: IoT Main
 */

#include "DHT.h"
uint32_t DWT_Delay_Init(void)
{
 8000580:	b480      	push	{r7}
 8000582:	af00      	add	r7, sp, #0
  /* Disable TRC */
  CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk; // ~0x01000000;
 8000584:	4b14      	ldr	r3, [pc, #80]	@ (80005d8 <DWT_Delay_Init+0x58>)
 8000586:	68db      	ldr	r3, [r3, #12]
 8000588:	4a13      	ldr	r2, [pc, #76]	@ (80005d8 <DWT_Delay_Init+0x58>)
 800058a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800058e:	60d3      	str	r3, [r2, #12]
  /* Enable TRC */
  CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
 8000590:	4b11      	ldr	r3, [pc, #68]	@ (80005d8 <DWT_Delay_Init+0x58>)
 8000592:	68db      	ldr	r3, [r3, #12]
 8000594:	4a10      	ldr	r2, [pc, #64]	@ (80005d8 <DWT_Delay_Init+0x58>)
 8000596:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800059a:	60d3      	str	r3, [r2, #12]

  /* Disable clock cycle counter */
  DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 800059c:	4b0f      	ldr	r3, [pc, #60]	@ (80005dc <DWT_Delay_Init+0x5c>)
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	4a0e      	ldr	r2, [pc, #56]	@ (80005dc <DWT_Delay_Init+0x5c>)
 80005a2:	f023 0301 	bic.w	r3, r3, #1
 80005a6:	6013      	str	r3, [r2, #0]
  /* Enable  clock cycle counter */
  DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 80005a8:	4b0c      	ldr	r3, [pc, #48]	@ (80005dc <DWT_Delay_Init+0x5c>)
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	4a0b      	ldr	r2, [pc, #44]	@ (80005dc <DWT_Delay_Init+0x5c>)
 80005ae:	f043 0301 	orr.w	r3, r3, #1
 80005b2:	6013      	str	r3, [r2, #0]

  /* Reset the clock cycle counter value */
  DWT->CYCCNT = 0;
 80005b4:	4b09      	ldr	r3, [pc, #36]	@ (80005dc <DWT_Delay_Init+0x5c>)
 80005b6:	2200      	movs	r2, #0
 80005b8:	605a      	str	r2, [r3, #4]

     /* 3 NO OPERATION instructions */
  __ASM volatile ("NOP");
 80005ba:	bf00      	nop
  __ASM volatile ("NOP");
 80005bc:	bf00      	nop
  __ASM volatile ("NOP");
 80005be:	bf00      	nop

  /* Check if clock cycle counter has started */
  if(DWT->CYCCNT)
 80005c0:	4b06      	ldr	r3, [pc, #24]	@ (80005dc <DWT_Delay_Init+0x5c>)
 80005c2:	685b      	ldr	r3, [r3, #4]
 80005c4:	2b00      	cmp	r3, #0
 80005c6:	d001      	beq.n	80005cc <DWT_Delay_Init+0x4c>
  {
    return 0; /*clock cycle counter started*/
 80005c8:	2300      	movs	r3, #0
 80005ca:	e000      	b.n	80005ce <DWT_Delay_Init+0x4e>
  }
  else
  {
     return 1; /*clock cycle counter not started*/
 80005cc:	2301      	movs	r3, #1
  }

}
 80005ce:	4618      	mov	r0, r3
 80005d0:	46bd      	mov	sp, r7
 80005d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d6:	4770      	bx	lr
 80005d8:	e000edf0 	.word	0xe000edf0
 80005dc:	e0001000 	.word	0xe0001000

080005e0 <DWT_Delay_us>:

void DWT_Delay_us(volatile uint32_t microseconds)
{
 80005e0:	b580      	push	{r7, lr}
 80005e2:	b084      	sub	sp, #16
 80005e4:	af00      	add	r7, sp, #0
 80005e6:	6078      	str	r0, [r7, #4]
  uint32_t clk_cycle_start = DWT->CYCCNT;
 80005e8:	4b0d      	ldr	r3, [pc, #52]	@ (8000620 <DWT_Delay_us+0x40>)
 80005ea:	685b      	ldr	r3, [r3, #4]
 80005ec:	60fb      	str	r3, [r7, #12]

  /* Go to number of cycles for system */
  microseconds *= (HAL_RCC_GetHCLKFreq() / 1000000);
 80005ee:	f002 fe7b 	bl	80032e8 <HAL_RCC_GetHCLKFreq>
 80005f2:	4603      	mov	r3, r0
 80005f4:	4a0b      	ldr	r2, [pc, #44]	@ (8000624 <DWT_Delay_us+0x44>)
 80005f6:	fba2 2303 	umull	r2, r3, r2, r3
 80005fa:	0c9b      	lsrs	r3, r3, #18
 80005fc:	687a      	ldr	r2, [r7, #4]
 80005fe:	fb02 f303 	mul.w	r3, r2, r3
 8000602:	607b      	str	r3, [r7, #4]

  /* Delay till end */
  while ((DWT->CYCCNT - clk_cycle_start) < microseconds);
 8000604:	bf00      	nop
 8000606:	4b06      	ldr	r3, [pc, #24]	@ (8000620 <DWT_Delay_us+0x40>)
 8000608:	685a      	ldr	r2, [r3, #4]
 800060a:	68fb      	ldr	r3, [r7, #12]
 800060c:	1ad2      	subs	r2, r2, r3
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	429a      	cmp	r2, r3
 8000612:	d3f8      	bcc.n	8000606 <DWT_Delay_us+0x26>
}
 8000614:	bf00      	nop
 8000616:	bf00      	nop
 8000618:	3710      	adds	r7, #16
 800061a:	46bd      	mov	sp, r7
 800061c:	bd80      	pop	{r7, pc}
 800061e:	bf00      	nop
 8000620:	e0001000 	.word	0xe0001000
 8000624:	431bde83 	.word	0x431bde83

08000628 <Set_Pin_Output>:

void Set_Pin_Output (GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8000628:	b580      	push	{r7, lr}
 800062a:	b088      	sub	sp, #32
 800062c:	af00      	add	r7, sp, #0
 800062e:	6078      	str	r0, [r7, #4]
 8000630:	460b      	mov	r3, r1
 8000632:	807b      	strh	r3, [r7, #2]
   GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000634:	f107 030c 	add.w	r3, r7, #12
 8000638:	2200      	movs	r2, #0
 800063a:	601a      	str	r2, [r3, #0]
 800063c:	605a      	str	r2, [r3, #4]
 800063e:	609a      	str	r2, [r3, #8]
 8000640:	60da      	str	r2, [r3, #12]
 8000642:	611a      	str	r2, [r3, #16]
   GPIO_InitStruct.Pin = GPIO_Pin;
 8000644:	887b      	ldrh	r3, [r7, #2]
 8000646:	60fb      	str	r3, [r7, #12]
   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000648:	2301      	movs	r3, #1
 800064a:	613b      	str	r3, [r7, #16]
   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800064c:	2300      	movs	r3, #0
 800064e:	61bb      	str	r3, [r7, #24]
   HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
 8000650:	f107 030c 	add.w	r3, r7, #12
 8000654:	4619      	mov	r1, r3
 8000656:	6878      	ldr	r0, [r7, #4]
 8000658:	f001 fee8 	bl	800242c <HAL_GPIO_Init>
}
 800065c:	bf00      	nop
 800065e:	3720      	adds	r7, #32
 8000660:	46bd      	mov	sp, r7
 8000662:	bd80      	pop	{r7, pc}

08000664 <Set_Pin_Input>:

void Set_Pin_Input (GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8000664:	b580      	push	{r7, lr}
 8000666:	b088      	sub	sp, #32
 8000668:	af00      	add	r7, sp, #0
 800066a:	6078      	str	r0, [r7, #4]
 800066c:	460b      	mov	r3, r1
 800066e:	807b      	strh	r3, [r7, #2]
   GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000670:	f107 030c 	add.w	r3, r7, #12
 8000674:	2200      	movs	r2, #0
 8000676:	601a      	str	r2, [r3, #0]
 8000678:	605a      	str	r2, [r3, #4]
 800067a:	609a      	str	r2, [r3, #8]
 800067c:	60da      	str	r2, [r3, #12]
 800067e:	611a      	str	r2, [r3, #16]
   GPIO_InitStruct.Pin = GPIO_Pin;
 8000680:	887b      	ldrh	r3, [r7, #2]
 8000682:	60fb      	str	r3, [r7, #12]
   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000684:	2300      	movs	r3, #0
 8000686:	613b      	str	r3, [r7, #16]
   //GPIO_InitStruct.Pull = GPIO_PULLUP;
   HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
 8000688:	f107 030c 	add.w	r3, r7, #12
 800068c:	4619      	mov	r1, r3
 800068e:	6878      	ldr	r0, [r7, #4]
 8000690:	f001 fecc 	bl	800242c <HAL_GPIO_Init>
}
 8000694:	bf00      	nop
 8000696:	3720      	adds	r7, #32
 8000698:	46bd      	mov	sp, r7
 800069a:	bd80      	pop	{r7, pc}

0800069c <DHT11_Init>:

/*********************************** DHT11 FUNCTIONS ********************************************/

void DHT11_Init(void)
{
 800069c:	b580      	push	{r7, lr}
 800069e:	af00      	add	r7, sp, #0
   DWT_Delay_Init();
 80006a0:	f7ff ff6e 	bl	8000580 <DWT_Delay_Init>
   Set_Pin_Output (DHT11_PORT, DHT11_PIN);  // set the pin as output
 80006a4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80006a8:	4807      	ldr	r0, [pc, #28]	@ (80006c8 <DHT11_Init+0x2c>)
 80006aa:	f7ff ffbd 	bl	8000628 <Set_Pin_Output>
   HAL_GPIO_WritePin (DHT11_PORT, DHT11_PIN, 1);   // pull the pin high
 80006ae:	2201      	movs	r2, #1
 80006b0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80006b4:	4804      	ldr	r0, [pc, #16]	@ (80006c8 <DHT11_Init+0x2c>)
 80006b6:	f002 f855 	bl	8002764 <HAL_GPIO_WritePin>
   HAL_Delay(1000);
 80006ba:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80006be:	f001 f8fb 	bl	80018b8 <HAL_Delay>
}
 80006c2:	bf00      	nop
 80006c4:	bd80      	pop	{r7, pc}
 80006c6:	bf00      	nop
 80006c8:	40020800 	.word	0x40020800

080006cc <DHT11_Start>:

void DHT11_Start (void)
{
 80006cc:	b580      	push	{r7, lr}
 80006ce:	af00      	add	r7, sp, #0
   Set_Pin_Output (DHT11_PORT, DHT11_PIN);  // set the pin as output
 80006d0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80006d4:	4811      	ldr	r0, [pc, #68]	@ (800071c <DHT11_Start+0x50>)
 80006d6:	f7ff ffa7 	bl	8000628 <Set_Pin_Output>
   HAL_GPIO_WritePin (DHT11_PORT, DHT11_PIN, 1);   // pull the pin high
 80006da:	2201      	movs	r2, #1
 80006dc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80006e0:	480e      	ldr	r0, [pc, #56]	@ (800071c <DHT11_Start+0x50>)
 80006e2:	f002 f83f 	bl	8002764 <HAL_GPIO_WritePin>
   HAL_GPIO_WritePin (DHT11_PORT, DHT11_PIN, 0);   // pull the pin low
 80006e6:	2200      	movs	r2, #0
 80006e8:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80006ec:	480b      	ldr	r0, [pc, #44]	@ (800071c <DHT11_Start+0x50>)
 80006ee:	f002 f839 	bl	8002764 <HAL_GPIO_WritePin>
   DWT_Delay_us(18000);
 80006f2:	f244 6050 	movw	r0, #18000	@ 0x4650
 80006f6:	f7ff ff73 	bl	80005e0 <DWT_Delay_us>
   //delay_us (18000);   // wait for 18ms
   HAL_GPIO_WritePin (DHT11_PORT, DHT11_PIN, 1);   // pull the pin high
 80006fa:	2201      	movs	r2, #1
 80006fc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000700:	4806      	ldr	r0, [pc, #24]	@ (800071c <DHT11_Start+0x50>)
 8000702:	f002 f82f 	bl	8002764 <HAL_GPIO_WritePin>
   DWT_Delay_us(20);
 8000706:	2014      	movs	r0, #20
 8000708:	f7ff ff6a 	bl	80005e0 <DWT_Delay_us>
   //delay_us (20);   // wait for 20us
   Set_Pin_Input(DHT11_PORT, DHT11_PIN);    // set as input
 800070c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000710:	4802      	ldr	r0, [pc, #8]	@ (800071c <DHT11_Start+0x50>)
 8000712:	f7ff ffa7 	bl	8000664 <Set_Pin_Input>
}
 8000716:	bf00      	nop
 8000718:	bd80      	pop	{r7, pc}
 800071a:	bf00      	nop
 800071c:	40020800 	.word	0x40020800

08000720 <DHT11_Stop>:

void DHT11_Stop (void)
{
 8000720:	b580      	push	{r7, lr}
 8000722:	af00      	add	r7, sp, #0
   Set_Pin_Output (DHT11_PORT, DHT11_PIN);  // set the pin as output
 8000724:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000728:	4805      	ldr	r0, [pc, #20]	@ (8000740 <DHT11_Stop+0x20>)
 800072a:	f7ff ff7d 	bl	8000628 <Set_Pin_Output>
   HAL_GPIO_WritePin (DHT11_PORT, DHT11_PIN, 1);   // pull the pin high
 800072e:	2201      	movs	r2, #1
 8000730:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000734:	4802      	ldr	r0, [pc, #8]	@ (8000740 <DHT11_Stop+0x20>)
 8000736:	f002 f815 	bl	8002764 <HAL_GPIO_WritePin>
}
 800073a:	bf00      	nop
 800073c:	bd80      	pop	{r7, pc}
 800073e:	bf00      	nop
 8000740:	40020800 	.word	0x40020800

08000744 <DHT11_Check_Response>:

uint8_t DHT11_Check_Response (void)
{
 8000744:	b580      	push	{r7, lr}
 8000746:	b082      	sub	sp, #8
 8000748:	af00      	add	r7, sp, #0
   uint8_t Response = 0;
 800074a:	2300      	movs	r3, #0
 800074c:	71fb      	strb	r3, [r7, #7]

   if (!(HAL_GPIO_ReadPin (DHT11_PORT, DHT11_PIN)))
 800074e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000752:	4812      	ldr	r0, [pc, #72]	@ (800079c <DHT11_Check_Response+0x58>)
 8000754:	f001 ffee 	bl	8002734 <HAL_GPIO_ReadPin>
 8000758:	4603      	mov	r3, r0
 800075a:	2b00      	cmp	r3, #0
 800075c:	d10f      	bne.n	800077e <DHT11_Check_Response+0x3a>
   {
      DWT_Delay_us(80);
 800075e:	2050      	movs	r0, #80	@ 0x50
 8000760:	f7ff ff3e 	bl	80005e0 <DWT_Delay_us>
      //delay_us (80);
      if ((HAL_GPIO_ReadPin (DHT11_PORT, DHT11_PIN))) Response = 1;
 8000764:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000768:	480c      	ldr	r0, [pc, #48]	@ (800079c <DHT11_Check_Response+0x58>)
 800076a:	f001 ffe3 	bl	8002734 <HAL_GPIO_ReadPin>
 800076e:	4603      	mov	r3, r0
 8000770:	2b00      	cmp	r3, #0
 8000772:	d002      	beq.n	800077a <DHT11_Check_Response+0x36>
 8000774:	2301      	movs	r3, #1
 8000776:	71fb      	strb	r3, [r7, #7]
 8000778:	e001      	b.n	800077e <DHT11_Check_Response+0x3a>
      else Response = -1; // 255
 800077a:	23ff      	movs	r3, #255	@ 0xff
 800077c:	71fb      	strb	r3, [r7, #7]
   }
   while ((HAL_GPIO_ReadPin (DHT11_PORT, DHT11_PIN)));
 800077e:	bf00      	nop
 8000780:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000784:	4805      	ldr	r0, [pc, #20]	@ (800079c <DHT11_Check_Response+0x58>)
 8000786:	f001 ffd5 	bl	8002734 <HAL_GPIO_ReadPin>
 800078a:	4603      	mov	r3, r0
 800078c:	2b00      	cmp	r3, #0
 800078e:	d1f7      	bne.n	8000780 <DHT11_Check_Response+0x3c>

   return Response;
 8000790:	79fb      	ldrb	r3, [r7, #7]
}
 8000792:	4618      	mov	r0, r3
 8000794:	3708      	adds	r7, #8
 8000796:	46bd      	mov	sp, r7
 8000798:	bd80      	pop	{r7, pc}
 800079a:	bf00      	nop
 800079c:	40020800 	.word	0x40020800

080007a0 <DHT11_Read>:

uint8_t DHT11_Read (void)
{
 80007a0:	b580      	push	{r7, lr}
 80007a2:	b082      	sub	sp, #8
 80007a4:	af00      	add	r7, sp, #0
   uint8_t i,j;
   for (j=0;j<8;j++)
 80007a6:	2300      	movs	r3, #0
 80007a8:	71bb      	strb	r3, [r7, #6]
 80007aa:	e03a      	b.n	8000822 <DHT11_Read+0x82>
   {
      while (!(HAL_GPIO_ReadPin (DHT11_PORT, DHT11_PIN)));   // wait for the pin to go high
 80007ac:	bf00      	nop
 80007ae:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80007b2:	4820      	ldr	r0, [pc, #128]	@ (8000834 <DHT11_Read+0x94>)
 80007b4:	f001 ffbe 	bl	8002734 <HAL_GPIO_ReadPin>
 80007b8:	4603      	mov	r3, r0
 80007ba:	2b00      	cmp	r3, #0
 80007bc:	d0f7      	beq.n	80007ae <DHT11_Read+0xe>
      DWT_Delay_us(40);
 80007be:	2028      	movs	r0, #40	@ 0x28
 80007c0:	f7ff ff0e 	bl	80005e0 <DWT_Delay_us>
      //delay_us (40);   // wait for 40 us
      if (!(HAL_GPIO_ReadPin (DHT11_PORT, DHT11_PIN)))   // if the pin is low
 80007c4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80007c8:	481a      	ldr	r0, [pc, #104]	@ (8000834 <DHT11_Read+0x94>)
 80007ca:	f001 ffb3 	bl	8002734 <HAL_GPIO_ReadPin>
 80007ce:	4603      	mov	r3, r0
 80007d0:	2b00      	cmp	r3, #0
 80007d2:	d10e      	bne.n	80007f2 <DHT11_Read+0x52>
      {
         i&= ~(1<<(7-j));   // write 0
 80007d4:	79bb      	ldrb	r3, [r7, #6]
 80007d6:	f1c3 0307 	rsb	r3, r3, #7
 80007da:	2201      	movs	r2, #1
 80007dc:	fa02 f303 	lsl.w	r3, r2, r3
 80007e0:	b25b      	sxtb	r3, r3
 80007e2:	43db      	mvns	r3, r3
 80007e4:	b25a      	sxtb	r2, r3
 80007e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80007ea:	4013      	ands	r3, r2
 80007ec:	b25b      	sxtb	r3, r3
 80007ee:	71fb      	strb	r3, [r7, #7]
 80007f0:	e00b      	b.n	800080a <DHT11_Read+0x6a>
      }
      else i|= (1<<(7-j));  // if the pin is high, write 1
 80007f2:	79bb      	ldrb	r3, [r7, #6]
 80007f4:	f1c3 0307 	rsb	r3, r3, #7
 80007f8:	2201      	movs	r2, #1
 80007fa:	fa02 f303 	lsl.w	r3, r2, r3
 80007fe:	b25a      	sxtb	r2, r3
 8000800:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000804:	4313      	orrs	r3, r2
 8000806:	b25b      	sxtb	r3, r3
 8000808:	71fb      	strb	r3, [r7, #7]
      while ((HAL_GPIO_ReadPin (DHT11_PORT, DHT11_PIN)));  // wait for the pin to go low
 800080a:	bf00      	nop
 800080c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000810:	4808      	ldr	r0, [pc, #32]	@ (8000834 <DHT11_Read+0x94>)
 8000812:	f001 ff8f 	bl	8002734 <HAL_GPIO_ReadPin>
 8000816:	4603      	mov	r3, r0
 8000818:	2b00      	cmp	r3, #0
 800081a:	d1f7      	bne.n	800080c <DHT11_Read+0x6c>
   for (j=0;j<8;j++)
 800081c:	79bb      	ldrb	r3, [r7, #6]
 800081e:	3301      	adds	r3, #1
 8000820:	71bb      	strb	r3, [r7, #6]
 8000822:	79bb      	ldrb	r3, [r7, #6]
 8000824:	2b07      	cmp	r3, #7
 8000826:	d9c1      	bls.n	80007ac <DHT11_Read+0xc>
   }
   return i;
 8000828:	79fb      	ldrb	r3, [r7, #7]
}
 800082a:	4618      	mov	r0, r3
 800082c:	3708      	adds	r7, #8
 800082e:	46bd      	mov	sp, r7
 8000830:	bd80      	pop	{r7, pc}
 8000832:	bf00      	nop
 8000834:	40020800 	.word	0x40020800

08000838 <DHT11_readData>:

DHT11_TypeDef DHT11_readData() // 온습도에서 읽을 데이터들
{
 8000838:	b580      	push	{r7, lr}
 800083a:	b084      	sub	sp, #16
 800083c:	af00      	add	r7, sp, #0
 800083e:	6078      	str	r0, [r7, #4]
   DHT11_TypeDef dht11;
   DHT11_Start();
 8000840:	f7ff ff44 	bl	80006cc <DHT11_Start>
   if ((dht11.status = DHT11_Check_Response()) < 0) return dht11;
 8000844:	f7ff ff7e 	bl	8000744 <DHT11_Check_Response>
 8000848:	4603      	mov	r3, r0
 800084a:	737b      	strb	r3, [r7, #13]
   dht11.rh_byte1 = DHT11_Read ();
 800084c:	f7ff ffa8 	bl	80007a0 <DHT11_Read>
 8000850:	4603      	mov	r3, r0
 8000852:	723b      	strb	r3, [r7, #8]
   dht11.rh_byte2 = DHT11_Read ();
 8000854:	f7ff ffa4 	bl	80007a0 <DHT11_Read>
 8000858:	4603      	mov	r3, r0
 800085a:	727b      	strb	r3, [r7, #9]
   dht11.temp_byte1 = DHT11_Read ();
 800085c:	f7ff ffa0 	bl	80007a0 <DHT11_Read>
 8000860:	4603      	mov	r3, r0
 8000862:	72bb      	strb	r3, [r7, #10]
   dht11.temp_byte2 = DHT11_Read ();
 8000864:	f7ff ff9c 	bl	80007a0 <DHT11_Read>
 8000868:	4603      	mov	r3, r0
 800086a:	72fb      	strb	r3, [r7, #11]
   dht11.checksum = DHT11_Read();
 800086c:	f7ff ff98 	bl	80007a0 <DHT11_Read>
 8000870:	4603      	mov	r3, r0
 8000872:	733b      	strb	r3, [r7, #12]
   DHT11_Stop();
 8000874:	f7ff ff54 	bl	8000720 <DHT11_Stop>
   return dht11;
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	461a      	mov	r2, r3
 800087c:	f107 0308 	add.w	r3, r7, #8
 8000880:	6818      	ldr	r0, [r3, #0]
 8000882:	6010      	str	r0, [r2, #0]
 8000884:	889b      	ldrh	r3, [r3, #4]
 8000886:	8093      	strh	r3, [r2, #4]
}
 8000888:	6878      	ldr	r0, [r7, #4]
 800088a:	3710      	adds	r7, #16
 800088c:	46bd      	mov	sp, r7
 800088e:	bd80      	pop	{r7, pc}

08000890 <HAL_UART_RxCpltCallback>:

    return 0;
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8000890:	b580      	push	{r7, lr}
 8000892:	b082      	sub	sp, #8
 8000894:	af00      	add	r7, sp, #0
 8000896:	6078      	str	r0, [r7, #4]
    if (huart->Instance == USART6)
 8000898:	687b      	ldr	r3, [r7, #4]
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	4a27      	ldr	r2, [pc, #156]	@ (800093c <HAL_UART_RxCpltCallback+0xac>)
 800089e:	4293      	cmp	r3, r2
 80008a0:	d11f      	bne.n	80008e2 <HAL_UART_RxCpltCallback+0x52>
    {
        if (cb_data.length < sizeof(cb_data.buf) - 1)
 80008a2:	4b27      	ldr	r3, [pc, #156]	@ (8000940 <HAL_UART_RxCpltCallback+0xb0>)
 80008a4:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	@ 0x400
 80008a8:	f240 32fe 	movw	r2, #1022	@ 0x3fe
 80008ac:	4293      	cmp	r3, r2
 80008ae:	d813      	bhi.n	80008d8 <HAL_UART_RxCpltCallback+0x48>
        {
            cb_data.buf[cb_data.length++] = data;
 80008b0:	4b23      	ldr	r3, [pc, #140]	@ (8000940 <HAL_UART_RxCpltCallback+0xb0>)
 80008b2:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	@ 0x400
 80008b6:	1c5a      	adds	r2, r3, #1
 80008b8:	b291      	uxth	r1, r2
 80008ba:	4a21      	ldr	r2, [pc, #132]	@ (8000940 <HAL_UART_RxCpltCallback+0xb0>)
 80008bc:	f8a2 1400 	strh.w	r1, [r2, #1024]	@ 0x400
 80008c0:	461a      	mov	r2, r3
 80008c2:	4b20      	ldr	r3, [pc, #128]	@ (8000944 <HAL_UART_RxCpltCallback+0xb4>)
 80008c4:	7819      	ldrb	r1, [r3, #0]
 80008c6:	4b1e      	ldr	r3, [pc, #120]	@ (8000940 <HAL_UART_RxCpltCallback+0xb0>)
 80008c8:	5499      	strb	r1, [r3, r2]
            cb_data.buf[cb_data.length] = '\0';  // NULL 종료
 80008ca:	4b1d      	ldr	r3, [pc, #116]	@ (8000940 <HAL_UART_RxCpltCallback+0xb0>)
 80008cc:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	@ 0x400
 80008d0:	461a      	mov	r2, r3
 80008d2:	4b1b      	ldr	r3, [pc, #108]	@ (8000940 <HAL_UART_RxCpltCallback+0xb0>)
 80008d4:	2100      	movs	r1, #0
 80008d6:	5499      	strb	r1, [r3, r2]
        }

        HAL_UART_Receive_IT(huart, &data, 1);  // 다시 수신
 80008d8:	2201      	movs	r2, #1
 80008da:	491a      	ldr	r1, [pc, #104]	@ (8000944 <HAL_UART_RxCpltCallback+0xb4>)
 80008dc:	6878      	ldr	r0, [r7, #4]
 80008de:	f003 fa41 	bl	8003d64 <HAL_UART_Receive_IT>
    }

    if (huart->Instance == USART2)
 80008e2:	687b      	ldr	r3, [r7, #4]
 80008e4:	681b      	ldr	r3, [r3, #0]
 80008e6:	4a18      	ldr	r2, [pc, #96]	@ (8000948 <HAL_UART_RxCpltCallback+0xb8>)
 80008e8:	4293      	cmp	r3, r2
 80008ea:	d122      	bne.n	8000932 <HAL_UART_RxCpltCallback+0xa2>
    {
        static int i = 0;
        rx2Data[i] = cdata;
 80008ec:	4b17      	ldr	r3, [pc, #92]	@ (800094c <HAL_UART_RxCpltCallback+0xbc>)
 80008ee:	681b      	ldr	r3, [r3, #0]
 80008f0:	4a17      	ldr	r2, [pc, #92]	@ (8000950 <HAL_UART_RxCpltCallback+0xc0>)
 80008f2:	7811      	ldrb	r1, [r2, #0]
 80008f4:	4a17      	ldr	r2, [pc, #92]	@ (8000954 <HAL_UART_RxCpltCallback+0xc4>)
 80008f6:	54d1      	strb	r1, [r2, r3]

        if (rx2Data[i] == '\r')
 80008f8:	4b14      	ldr	r3, [pc, #80]	@ (800094c <HAL_UART_RxCpltCallback+0xbc>)
 80008fa:	681b      	ldr	r3, [r3, #0]
 80008fc:	4a15      	ldr	r2, [pc, #84]	@ (8000954 <HAL_UART_RxCpltCallback+0xc4>)
 80008fe:	5cd3      	ldrb	r3, [r2, r3]
 8000900:	b2db      	uxtb	r3, r3
 8000902:	2b0d      	cmp	r3, #13
 8000904:	d10b      	bne.n	800091e <HAL_UART_RxCpltCallback+0x8e>
        {
            rx2Data[i] = '\0';
 8000906:	4b11      	ldr	r3, [pc, #68]	@ (800094c <HAL_UART_RxCpltCallback+0xbc>)
 8000908:	681b      	ldr	r3, [r3, #0]
 800090a:	4a12      	ldr	r2, [pc, #72]	@ (8000954 <HAL_UART_RxCpltCallback+0xc4>)
 800090c:	2100      	movs	r1, #0
 800090e:	54d1      	strb	r1, [r2, r3]
            rx2Flag = 1;
 8000910:	4b11      	ldr	r3, [pc, #68]	@ (8000958 <HAL_UART_RxCpltCallback+0xc8>)
 8000912:	2201      	movs	r2, #1
 8000914:	701a      	strb	r2, [r3, #0]
            i = 0;
 8000916:	4b0d      	ldr	r3, [pc, #52]	@ (800094c <HAL_UART_RxCpltCallback+0xbc>)
 8000918:	2200      	movs	r2, #0
 800091a:	601a      	str	r2, [r3, #0]
 800091c:	e004      	b.n	8000928 <HAL_UART_RxCpltCallback+0x98>
        }
        else
        {
            i++;
 800091e:	4b0b      	ldr	r3, [pc, #44]	@ (800094c <HAL_UART_RxCpltCallback+0xbc>)
 8000920:	681b      	ldr	r3, [r3, #0]
 8000922:	3301      	adds	r3, #1
 8000924:	4a09      	ldr	r2, [pc, #36]	@ (800094c <HAL_UART_RxCpltCallback+0xbc>)
 8000926:	6013      	str	r3, [r2, #0]
        }

        HAL_UART_Receive_IT(huart, &cdata, 1);  // 다시 수신
 8000928:	2201      	movs	r2, #1
 800092a:	4909      	ldr	r1, [pc, #36]	@ (8000950 <HAL_UART_RxCpltCallback+0xc0>)
 800092c:	6878      	ldr	r0, [r7, #4]
 800092e:	f003 fa19 	bl	8003d64 <HAL_UART_Receive_IT>
    }
}
 8000932:	bf00      	nop
 8000934:	3708      	adds	r7, #8
 8000936:	46bd      	mov	sp, r7
 8000938:	bd80      	pop	{r7, pc}
 800093a:	bf00      	nop
 800093c:	40011400 	.word	0x40011400
 8000940:	20000104 	.word	0x20000104
 8000944:	20000103 	.word	0x20000103
 8000948:	40004400 	.word	0x40004400
 800094c:	20000550 	.word	0x20000550
 8000950:	20000102 	.word	0x20000102
 8000954:	200000d0 	.word	0x200000d0
 8000958:	200000cc 	.word	0x200000cc

0800095c <__io_putchar>:
        return -1;

    return 0;
}
int __io_putchar(int ch)
{
 800095c:	b580      	push	{r7, lr}
 800095e:	b082      	sub	sp, #8
 8000960:	af00      	add	r7, sp, #0
 8000962:	6078      	str	r0, [r7, #4]
    if(HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, 10) == HAL_OK)
 8000964:	1d39      	adds	r1, r7, #4
 8000966:	230a      	movs	r3, #10
 8000968:	2201      	movs	r2, #1
 800096a:	4807      	ldr	r0, [pc, #28]	@ (8000988 <__io_putchar+0x2c>)
 800096c:	f003 f8d8 	bl	8003b20 <HAL_UART_Transmit>
 8000970:	4603      	mov	r3, r0
 8000972:	2b00      	cmp	r3, #0
 8000974:	d101      	bne.n	800097a <__io_putchar+0x1e>
        return ch;
 8000976:	687b      	ldr	r3, [r7, #4]
 8000978:	e001      	b.n	800097e <__io_putchar+0x22>
    return -1;
 800097a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800097e:	4618      	mov	r0, r3
 8000980:	3708      	adds	r7, #8
 8000982:	46bd      	mov	sp, r7
 8000984:	bd80      	pop	{r7, pc}
 8000986:	bf00      	nop
 8000988:	20000084 	.word	0x20000084

0800098c <poll_uart6_input>:
void handle_server_command(char *cmd);
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void poll_uart6_input() {
 800098c:	b580      	push	{r7, lr}
 800098e:	b082      	sub	sp, #8
 8000990:	af00      	add	r7, sp, #0
    uint8_t ch;
    while (HAL_UART_Receive(&huart6, &ch, 1, 10) == HAL_OK) {
 8000992:	e021      	b.n	80009d8 <poll_uart6_input+0x4c>
        if (ch == '\n') {
 8000994:	79fb      	ldrb	r3, [r7, #7]
 8000996:	2b0a      	cmp	r3, #10
 8000998:	d110      	bne.n	80009bc <poll_uart6_input+0x30>
            recv_line[idx] = '\0';
 800099a:	4b16      	ldr	r3, [pc, #88]	@ (80009f4 <poll_uart6_input+0x68>)
 800099c:	781b      	ldrb	r3, [r3, #0]
 800099e:	461a      	mov	r2, r3
 80009a0:	4b15      	ldr	r3, [pc, #84]	@ (80009f8 <poll_uart6_input+0x6c>)
 80009a2:	2100      	movs	r1, #0
 80009a4:	5499      	strb	r1, [r3, r2]
            printf("📥 STM32 수신: %s\r\n", recv_line);
 80009a6:	4914      	ldr	r1, [pc, #80]	@ (80009f8 <poll_uart6_input+0x6c>)
 80009a8:	4814      	ldr	r0, [pc, #80]	@ (80009fc <poll_uart6_input+0x70>)
 80009aa:	f004 fa19 	bl	8004de0 <iprintf>
            handle_server_command(recv_line);
 80009ae:	4812      	ldr	r0, [pc, #72]	@ (80009f8 <poll_uart6_input+0x6c>)
 80009b0:	f000 fb26 	bl	8001000 <handle_server_command>
            idx = 0;
 80009b4:	4b0f      	ldr	r3, [pc, #60]	@ (80009f4 <poll_uart6_input+0x68>)
 80009b6:	2200      	movs	r2, #0
 80009b8:	701a      	strb	r2, [r3, #0]
 80009ba:	e00d      	b.n	80009d8 <poll_uart6_input+0x4c>
        } else if (idx < sizeof(recv_line) - 1) {
 80009bc:	4b0d      	ldr	r3, [pc, #52]	@ (80009f4 <poll_uart6_input+0x68>)
 80009be:	781b      	ldrb	r3, [r3, #0]
 80009c0:	2b62      	cmp	r3, #98	@ 0x62
 80009c2:	d809      	bhi.n	80009d8 <poll_uart6_input+0x4c>
            recv_line[idx++] = ch;
 80009c4:	4b0b      	ldr	r3, [pc, #44]	@ (80009f4 <poll_uart6_input+0x68>)
 80009c6:	781b      	ldrb	r3, [r3, #0]
 80009c8:	1c5a      	adds	r2, r3, #1
 80009ca:	b2d1      	uxtb	r1, r2
 80009cc:	4a09      	ldr	r2, [pc, #36]	@ (80009f4 <poll_uart6_input+0x68>)
 80009ce:	7011      	strb	r1, [r2, #0]
 80009d0:	461a      	mov	r2, r3
 80009d2:	79f9      	ldrb	r1, [r7, #7]
 80009d4:	4b08      	ldr	r3, [pc, #32]	@ (80009f8 <poll_uart6_input+0x6c>)
 80009d6:	5499      	strb	r1, [r3, r2]
    while (HAL_UART_Receive(&huart6, &ch, 1, 10) == HAL_OK) {
 80009d8:	1df9      	adds	r1, r7, #7
 80009da:	230a      	movs	r3, #10
 80009dc:	2201      	movs	r2, #1
 80009de:	4808      	ldr	r0, [pc, #32]	@ (8000a00 <poll_uart6_input+0x74>)
 80009e0:	f003 f929 	bl	8003c36 <HAL_UART_Receive>
 80009e4:	4603      	mov	r3, r0
 80009e6:	2b00      	cmp	r3, #0
 80009e8:	d0d4      	beq.n	8000994 <poll_uart6_input+0x8>
        }
    }
}
 80009ea:	bf00      	nop
 80009ec:	bf00      	nop
 80009ee:	3708      	adds	r7, #8
 80009f0:	46bd      	mov	sp, r7
 80009f2:	bd80      	pop	{r7, pc}
 80009f4:	2000079c 	.word	0x2000079c
 80009f8:	20000738 	.word	0x20000738
 80009fc:	0800601c 	.word	0x0800601c
 8000a00:	20000508 	.word	0x20000508

08000a04 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000a04:	b580      	push	{r7, lr}
 8000a06:	b082      	sub	sp, #8
 8000a08:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000a0a:	f000 fee3 	bl	80017d4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000a0e:	f000 f895 	bl	8000b3c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000a12:	f000 fa2b 	bl	8000e6c <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000a16:	f000 f9d5 	bl	8000dc4 <MX_USART2_UART_Init>
  MX_USART6_UART_Init();
 8000a1a:	f000 f9fd 	bl	8000e18 <MX_USART6_UART_Init>
  MX_I2C1_Init();
 8000a1e:	f000 f949 	bl	8000cb4 <MX_I2C1_Init>
  MX_TIM4_Init();
 8000a22:	f000 f975 	bl	8000d10 <MX_TIM4_Init>
  MX_ADC1_Init();
 8000a26:	f000 f8f3 	bl	8000c10 <MX_ADC1_Init>
  /* USER CODE BEGIN 2 */
  int ret = 0;
 8000a2a:	2300      	movs	r3, #0
 8000a2c:	607b      	str	r3, [r7, #4]
  static uint32_t last_time = 0;  // 마지막으로 실행한 시간 저장
  if(ret != 0) Error_Handler();
 8000a2e:	687b      	ldr	r3, [r7, #4]
 8000a30:	2b00      	cmp	r3, #0
 8000a32:	d001      	beq.n	8000a38 <main+0x34>
 8000a34:	f000 fbca 	bl	80011cc <Error_Handler>
  printf("Start main() - wifi\r\n");
 8000a38:	4837      	ldr	r0, [pc, #220]	@ (8000b18 <main+0x114>)
 8000a3a:	f004 fa39 	bl	8004eb0 <puts>
  DHT11_Init();
 8000a3e:	f7ff fe2d 	bl	800069c <DHT11_Init>
  printf("start main() dht & water sensor\r\n");
 8000a42:	4836      	ldr	r0, [pc, #216]	@ (8000b1c <main+0x118>)
 8000a44:	f004 fa34 	bl	8004eb0 <puts>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
      if (HAL_GetTick() - last_time >= 5000) {  // 5초(5000ms) 경과 여부 확인
 8000a48:	f000 ff2a 	bl	80018a0 <HAL_GetTick>
 8000a4c:	4602      	mov	r2, r0
 8000a4e:	4b34      	ldr	r3, [pc, #208]	@ (8000b20 <main+0x11c>)
 8000a50:	681b      	ldr	r3, [r3, #0]
 8000a52:	1ad3      	subs	r3, r2, r3
 8000a54:	f241 3287 	movw	r2, #4999	@ 0x1387
 8000a58:	4293      	cmp	r3, r2
 8000a5a:	d906      	bls.n	8000a6a <main+0x66>
	      last_time = HAL_GetTick();  // 현재 시간 업데이트
 8000a5c:	f000 ff20 	bl	80018a0 <HAL_GetTick>
 8000a60:	4603      	mov	r3, r0
 8000a62:	4a2f      	ldr	r2, [pc, #188]	@ (8000b20 <main+0x11c>)
 8000a64:	6013      	str	r3, [r2, #0]
	      Send_Sensor_Data();  // 센서 데이터 전송
 8000a66:	f000 fb69 	bl	800113c <Send_Sensor_Data>
	  }
	  if (strstr(cb_data.buf, "[USR_STM32]") && strchr(cb_data.buf, '\n') != NULL) {
 8000a6a:	492e      	ldr	r1, [pc, #184]	@ (8000b24 <main+0x120>)
 8000a6c:	482e      	ldr	r0, [pc, #184]	@ (8000b28 <main+0x124>)
 8000a6e:	f004 fb79 	bl	8005164 <strstr>
 8000a72:	4603      	mov	r3, r0
 8000a74:	2b00      	cmp	r3, #0
 8000a76:	d020      	beq.n	8000aba <main+0xb6>
 8000a78:	210a      	movs	r1, #10
 8000a7a:	482b      	ldr	r0, [pc, #172]	@ (8000b28 <main+0x124>)
 8000a7c:	f004 fb54 	bl	8005128 <strchr>
 8000a80:	4603      	mov	r3, r0
 8000a82:	2b00      	cmp	r3, #0
 8000a84:	d019      	beq.n	8000aba <main+0xb6>
	      printf("📥 수신 감지됨! %s\r\n", cb_data.buf);
 8000a86:	4928      	ldr	r1, [pc, #160]	@ (8000b28 <main+0x124>)
 8000a88:	4828      	ldr	r0, [pc, #160]	@ (8000b2c <main+0x128>)
 8000a8a:	f004 f9a9 	bl	8004de0 <iprintf>
	      strcpy(strBuff, strchr((char *)cb_data.buf, '['));  // [부터 잘라내기
 8000a8e:	215b      	movs	r1, #91	@ 0x5b
 8000a90:	4825      	ldr	r0, [pc, #148]	@ (8000b28 <main+0x124>)
 8000a92:	f004 fb49 	bl	8005128 <strchr>
 8000a96:	4603      	mov	r3, r0
 8000a98:	4619      	mov	r1, r3
 8000a9a:	4825      	ldr	r0, [pc, #148]	@ (8000b30 <main+0x12c>)
 8000a9c:	f004 fbeb 	bl	8005276 <strcpy>
	      memset(cb_data.buf, '\0', sizeof(cb_data.buf));
 8000aa0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000aa4:	2100      	movs	r1, #0
 8000aa6:	4820      	ldr	r0, [pc, #128]	@ (8000b28 <main+0x124>)
 8000aa8:	f004 fb36 	bl	8005118 <memset>
	      cb_data.length = 0;
 8000aac:	4b1e      	ldr	r3, [pc, #120]	@ (8000b28 <main+0x124>)
 8000aae:	2200      	movs	r2, #0
 8000ab0:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
	      esp_event(strBuff);  // 서버 명령 처리 진입
 8000ab4:	481e      	ldr	r0, [pc, #120]	@ (8000b30 <main+0x12c>)
 8000ab6:	f000 fb1b 	bl	80010f0 <esp_event>
	  }
	  if (strstr(cb_data.buf, "[USR_AND]") && strchr(cb_data.buf, '\n') != NULL) {
 8000aba:	491e      	ldr	r1, [pc, #120]	@ (8000b34 <main+0x130>)
 8000abc:	481a      	ldr	r0, [pc, #104]	@ (8000b28 <main+0x124>)
 8000abe:	f004 fb51 	bl	8005164 <strstr>
 8000ac2:	4603      	mov	r3, r0
 8000ac4:	2b00      	cmp	r3, #0
 8000ac6:	d024      	beq.n	8000b12 <main+0x10e>
 8000ac8:	210a      	movs	r1, #10
 8000aca:	4817      	ldr	r0, [pc, #92]	@ (8000b28 <main+0x124>)
 8000acc:	f004 fb2c 	bl	8005128 <strchr>
 8000ad0:	4603      	mov	r3, r0
 8000ad2:	2b00      	cmp	r3, #0
 8000ad4:	d01d      	beq.n	8000b12 <main+0x10e>
	  	  printf("📥 수신 감지됨! %s\r\n", cb_data.buf);
 8000ad6:	4914      	ldr	r1, [pc, #80]	@ (8000b28 <main+0x124>)
 8000ad8:	4814      	ldr	r0, [pc, #80]	@ (8000b2c <main+0x128>)
 8000ada:	f004 f981 	bl	8004de0 <iprintf>
	  	  strcpy(strBuff, strchr((char *)cb_data.buf, '['));  // [부터 잘라내기
 8000ade:	215b      	movs	r1, #91	@ 0x5b
 8000ae0:	4811      	ldr	r0, [pc, #68]	@ (8000b28 <main+0x124>)
 8000ae2:	f004 fb21 	bl	8005128 <strchr>
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	4619      	mov	r1, r3
 8000aea:	4811      	ldr	r0, [pc, #68]	@ (8000b30 <main+0x12c>)
 8000aec:	f004 fbc3 	bl	8005276 <strcpy>
	  	  printf("%s\r\n", strBuff);
 8000af0:	490f      	ldr	r1, [pc, #60]	@ (8000b30 <main+0x12c>)
 8000af2:	4811      	ldr	r0, [pc, #68]	@ (8000b38 <main+0x134>)
 8000af4:	f004 f974 	bl	8004de0 <iprintf>
	  	  memset(cb_data.buf, 0x0, sizeof(cb_data.buf));
 8000af8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000afc:	2100      	movs	r1, #0
 8000afe:	480a      	ldr	r0, [pc, #40]	@ (8000b28 <main+0x124>)
 8000b00:	f004 fb0a 	bl	8005118 <memset>
	  	  cb_data.length = 0;
 8000b04:	4b08      	ldr	r3, [pc, #32]	@ (8000b28 <main+0x124>)
 8000b06:	2200      	movs	r2, #0
 8000b08:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
	  	  esp_event(strBuff);  // 서버 명령 처리 진입
 8000b0c:	4808      	ldr	r0, [pc, #32]	@ (8000b30 <main+0x12c>)
 8000b0e:	f000 faef 	bl	80010f0 <esp_event>
	  }
	  poll_uart6_input();
 8000b12:	f7ff ff3b 	bl	800098c <poll_uart6_input>
      if (HAL_GetTick() - last_time >= 5000) {  // 5초(5000ms) 경과 여부 확인
 8000b16:	e797      	b.n	8000a48 <main+0x44>
 8000b18:	08006034 	.word	0x08006034
 8000b1c:	0800604c 	.word	0x0800604c
 8000b20:	200007a0 	.word	0x200007a0
 8000b24:	08006070 	.word	0x08006070
 8000b28:	20000104 	.word	0x20000104
 8000b2c:	0800607c 	.word	0x0800607c
 8000b30:	20000638 	.word	0x20000638
 8000b34:	08006098 	.word	0x08006098
 8000b38:	080060a4 	.word	0x080060a4

08000b3c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000b3c:	b580      	push	{r7, lr}
 8000b3e:	b094      	sub	sp, #80	@ 0x50
 8000b40:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000b42:	f107 0320 	add.w	r3, r7, #32
 8000b46:	2230      	movs	r2, #48	@ 0x30
 8000b48:	2100      	movs	r1, #0
 8000b4a:	4618      	mov	r0, r3
 8000b4c:	f004 fae4 	bl	8005118 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000b50:	f107 030c 	add.w	r3, r7, #12
 8000b54:	2200      	movs	r2, #0
 8000b56:	601a      	str	r2, [r3, #0]
 8000b58:	605a      	str	r2, [r3, #4]
 8000b5a:	609a      	str	r2, [r3, #8]
 8000b5c:	60da      	str	r2, [r3, #12]
 8000b5e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000b60:	2300      	movs	r3, #0
 8000b62:	60bb      	str	r3, [r7, #8]
 8000b64:	4b28      	ldr	r3, [pc, #160]	@ (8000c08 <SystemClock_Config+0xcc>)
 8000b66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000b68:	4a27      	ldr	r2, [pc, #156]	@ (8000c08 <SystemClock_Config+0xcc>)
 8000b6a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000b6e:	6413      	str	r3, [r2, #64]	@ 0x40
 8000b70:	4b25      	ldr	r3, [pc, #148]	@ (8000c08 <SystemClock_Config+0xcc>)
 8000b72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000b74:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000b78:	60bb      	str	r3, [r7, #8]
 8000b7a:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b7c:	2300      	movs	r3, #0
 8000b7e:	607b      	str	r3, [r7, #4]
 8000b80:	4b22      	ldr	r3, [pc, #136]	@ (8000c0c <SystemClock_Config+0xd0>)
 8000b82:	681b      	ldr	r3, [r3, #0]
 8000b84:	4a21      	ldr	r2, [pc, #132]	@ (8000c0c <SystemClock_Config+0xd0>)
 8000b86:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000b8a:	6013      	str	r3, [r2, #0]
 8000b8c:	4b1f      	ldr	r3, [pc, #124]	@ (8000c0c <SystemClock_Config+0xd0>)
 8000b8e:	681b      	ldr	r3, [r3, #0]
 8000b90:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000b94:	607b      	str	r3, [r7, #4]
 8000b96:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000b98:	2301      	movs	r3, #1
 8000b9a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000b9c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000ba0:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000ba2:	2302      	movs	r3, #2
 8000ba4:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000ba6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000baa:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000bac:	2308      	movs	r3, #8
 8000bae:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000bb0:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 8000bb4:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 8000bb6:	2304      	movs	r3, #4
 8000bb8:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000bba:	2304      	movs	r3, #4
 8000bbc:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000bbe:	f107 0320 	add.w	r3, r7, #32
 8000bc2:	4618      	mov	r0, r3
 8000bc4:	f001 ff2c 	bl	8002a20 <HAL_RCC_OscConfig>
 8000bc8:	4603      	mov	r3, r0
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	d001      	beq.n	8000bd2 <SystemClock_Config+0x96>
  {
    Error_Handler();
 8000bce:	f000 fafd 	bl	80011cc <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000bd2:	230f      	movs	r3, #15
 8000bd4:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000bd6:	2302      	movs	r3, #2
 8000bd8:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000bda:	2300      	movs	r3, #0
 8000bdc:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000bde:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000be2:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000be4:	2300      	movs	r3, #0
 8000be6:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000be8:	f107 030c 	add.w	r3, r7, #12
 8000bec:	2102      	movs	r1, #2
 8000bee:	4618      	mov	r0, r3
 8000bf0:	f002 f98e 	bl	8002f10 <HAL_RCC_ClockConfig>
 8000bf4:	4603      	mov	r3, r0
 8000bf6:	2b00      	cmp	r3, #0
 8000bf8:	d001      	beq.n	8000bfe <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000bfa:	f000 fae7 	bl	80011cc <Error_Handler>
  }
}
 8000bfe:	bf00      	nop
 8000c00:	3750      	adds	r7, #80	@ 0x50
 8000c02:	46bd      	mov	sp, r7
 8000c04:	bd80      	pop	{r7, pc}
 8000c06:	bf00      	nop
 8000c08:	40023800 	.word	0x40023800
 8000c0c:	40007000 	.word	0x40007000

08000c10 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000c10:	b580      	push	{r7, lr}
 8000c12:	b084      	sub	sp, #16
 8000c14:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000c16:	463b      	mov	r3, r7
 8000c18:	2200      	movs	r2, #0
 8000c1a:	601a      	str	r2, [r3, #0]
 8000c1c:	605a      	str	r2, [r3, #4]
 8000c1e:	609a      	str	r2, [r3, #8]
 8000c20:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000c22:	4b21      	ldr	r3, [pc, #132]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c24:	4a21      	ldr	r2, [pc, #132]	@ (8000cac <MX_ADC1_Init+0x9c>)
 8000c26:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000c28:	4b1f      	ldr	r3, [pc, #124]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c2a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8000c2e:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000c30:	4b1d      	ldr	r3, [pc, #116]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c32:	2200      	movs	r2, #0
 8000c34:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8000c36:	4b1c      	ldr	r3, [pc, #112]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c38:	2200      	movs	r2, #0
 8000c3a:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000c3c:	4b1a      	ldr	r3, [pc, #104]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c3e:	2200      	movs	r2, #0
 8000c40:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000c42:	4b19      	ldr	r3, [pc, #100]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c44:	2200      	movs	r2, #0
 8000c46:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000c4a:	4b17      	ldr	r3, [pc, #92]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c4c:	2200      	movs	r2, #0
 8000c4e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000c50:	4b15      	ldr	r3, [pc, #84]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c52:	4a17      	ldr	r2, [pc, #92]	@ (8000cb0 <MX_ADC1_Init+0xa0>)
 8000c54:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000c56:	4b14      	ldr	r3, [pc, #80]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c58:	2200      	movs	r2, #0
 8000c5a:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000c5c:	4b12      	ldr	r3, [pc, #72]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c5e:	2201      	movs	r2, #1
 8000c60:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000c62:	4b11      	ldr	r3, [pc, #68]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c64:	2200      	movs	r2, #0
 8000c66:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000c6a:	4b0f      	ldr	r3, [pc, #60]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c6c:	2201      	movs	r2, #1
 8000c6e:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000c70:	480d      	ldr	r0, [pc, #52]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c72:	f000 fe45 	bl	8001900 <HAL_ADC_Init>
 8000c76:	4603      	mov	r3, r0
 8000c78:	2b00      	cmp	r3, #0
 8000c7a:	d001      	beq.n	8000c80 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000c7c:	f000 faa6 	bl	80011cc <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_4;
 8000c80:	2304      	movs	r3, #4
 8000c82:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000c84:	2301      	movs	r3, #1
 8000c86:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000c88:	2300      	movs	r3, #0
 8000c8a:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000c8c:	463b      	mov	r3, r7
 8000c8e:	4619      	mov	r1, r3
 8000c90:	4805      	ldr	r0, [pc, #20]	@ (8000ca8 <MX_ADC1_Init+0x98>)
 8000c92:	f000 fff9 	bl	8001c88 <HAL_ADC_ConfigChannel>
 8000c96:	4603      	mov	r3, r0
 8000c98:	2b00      	cmp	r3, #0
 8000c9a:	d001      	beq.n	8000ca0 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8000c9c:	f000 fa96 	bl	80011cc <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000ca0:	bf00      	nop
 8000ca2:	3710      	adds	r7, #16
 8000ca4:	46bd      	mov	sp, r7
 8000ca6:	bd80      	pop	{r7, pc}
 8000ca8:	20000554 	.word	0x20000554
 8000cac:	40012000 	.word	0x40012000
 8000cb0:	0f000001 	.word	0x0f000001

08000cb4 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000cb4:	b580      	push	{r7, lr}
 8000cb6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000cb8:	4b13      	ldr	r3, [pc, #76]	@ (8000d08 <MX_I2C1_Init+0x54>)
 8000cba:	4a14      	ldr	r2, [pc, #80]	@ (8000d0c <MX_I2C1_Init+0x58>)
 8000cbc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 10000;
 8000cbe:	4b12      	ldr	r3, [pc, #72]	@ (8000d08 <MX_I2C1_Init+0x54>)
 8000cc0:	f242 7210 	movw	r2, #10000	@ 0x2710
 8000cc4:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000cc6:	4b10      	ldr	r3, [pc, #64]	@ (8000d08 <MX_I2C1_Init+0x54>)
 8000cc8:	2200      	movs	r2, #0
 8000cca:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000ccc:	4b0e      	ldr	r3, [pc, #56]	@ (8000d08 <MX_I2C1_Init+0x54>)
 8000cce:	2200      	movs	r2, #0
 8000cd0:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000cd2:	4b0d      	ldr	r3, [pc, #52]	@ (8000d08 <MX_I2C1_Init+0x54>)
 8000cd4:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000cd8:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000cda:	4b0b      	ldr	r3, [pc, #44]	@ (8000d08 <MX_I2C1_Init+0x54>)
 8000cdc:	2200      	movs	r2, #0
 8000cde:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8000ce0:	4b09      	ldr	r3, [pc, #36]	@ (8000d08 <MX_I2C1_Init+0x54>)
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000ce6:	4b08      	ldr	r3, [pc, #32]	@ (8000d08 <MX_I2C1_Init+0x54>)
 8000ce8:	2200      	movs	r2, #0
 8000cea:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000cec:	4b06      	ldr	r3, [pc, #24]	@ (8000d08 <MX_I2C1_Init+0x54>)
 8000cee:	2200      	movs	r2, #0
 8000cf0:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000cf2:	4805      	ldr	r0, [pc, #20]	@ (8000d08 <MX_I2C1_Init+0x54>)
 8000cf4:	f001 fd50 	bl	8002798 <HAL_I2C_Init>
 8000cf8:	4603      	mov	r3, r0
 8000cfa:	2b00      	cmp	r3, #0
 8000cfc:	d001      	beq.n	8000d02 <MX_I2C1_Init+0x4e>
  {
    Error_Handler();
 8000cfe:	f000 fa65 	bl	80011cc <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000d02:	bf00      	nop
 8000d04:	bd80      	pop	{r7, pc}
 8000d06:	bf00      	nop
 8000d08:	2000059c 	.word	0x2000059c
 8000d0c:	40005400 	.word	0x40005400

08000d10 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8000d10:	b580      	push	{r7, lr}
 8000d12:	b08a      	sub	sp, #40	@ 0x28
 8000d14:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000d16:	f107 0320 	add.w	r3, r7, #32
 8000d1a:	2200      	movs	r2, #0
 8000d1c:	601a      	str	r2, [r3, #0]
 8000d1e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000d20:	1d3b      	adds	r3, r7, #4
 8000d22:	2200      	movs	r2, #0
 8000d24:	601a      	str	r2, [r3, #0]
 8000d26:	605a      	str	r2, [r3, #4]
 8000d28:	609a      	str	r2, [r3, #8]
 8000d2a:	60da      	str	r2, [r3, #12]
 8000d2c:	611a      	str	r2, [r3, #16]
 8000d2e:	615a      	str	r2, [r3, #20]
 8000d30:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8000d32:	4b22      	ldr	r3, [pc, #136]	@ (8000dbc <MX_TIM4_Init+0xac>)
 8000d34:	4a22      	ldr	r2, [pc, #136]	@ (8000dc0 <MX_TIM4_Init+0xb0>)
 8000d36:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 84-1;
 8000d38:	4b20      	ldr	r3, [pc, #128]	@ (8000dbc <MX_TIM4_Init+0xac>)
 8000d3a:	2253      	movs	r2, #83	@ 0x53
 8000d3c:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000d3e:	4b1f      	ldr	r3, [pc, #124]	@ (8000dbc <MX_TIM4_Init+0xac>)
 8000d40:	2200      	movs	r2, #0
 8000d42:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 20000-1;
 8000d44:	4b1d      	ldr	r3, [pc, #116]	@ (8000dbc <MX_TIM4_Init+0xac>)
 8000d46:	f644 621f 	movw	r2, #19999	@ 0x4e1f
 8000d4a:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000d4c:	4b1b      	ldr	r3, [pc, #108]	@ (8000dbc <MX_TIM4_Init+0xac>)
 8000d4e:	2200      	movs	r2, #0
 8000d50:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000d52:	4b1a      	ldr	r3, [pc, #104]	@ (8000dbc <MX_TIM4_Init+0xac>)
 8000d54:	2200      	movs	r2, #0
 8000d56:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8000d58:	4818      	ldr	r0, [pc, #96]	@ (8000dbc <MX_TIM4_Init+0xac>)
 8000d5a:	f002 faf9 	bl	8003350 <HAL_TIM_PWM_Init>
 8000d5e:	4603      	mov	r3, r0
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	d001      	beq.n	8000d68 <MX_TIM4_Init+0x58>
  {
    Error_Handler();
 8000d64:	f000 fa32 	bl	80011cc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000d68:	2300      	movs	r3, #0
 8000d6a:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000d6c:	2300      	movs	r3, #0
 8000d6e:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8000d70:	f107 0320 	add.w	r3, r7, #32
 8000d74:	4619      	mov	r1, r3
 8000d76:	4811      	ldr	r0, [pc, #68]	@ (8000dbc <MX_TIM4_Init+0xac>)
 8000d78:	f002 fe14 	bl	80039a4 <HAL_TIMEx_MasterConfigSynchronization>
 8000d7c:	4603      	mov	r3, r0
 8000d7e:	2b00      	cmp	r3, #0
 8000d80:	d001      	beq.n	8000d86 <MX_TIM4_Init+0x76>
  {
    Error_Handler();
 8000d82:	f000 fa23 	bl	80011cc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000d86:	2360      	movs	r3, #96	@ 0x60
 8000d88:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000d8a:	2300      	movs	r3, #0
 8000d8c:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000d8e:	2300      	movs	r3, #0
 8000d90:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000d92:	2300      	movs	r3, #0
 8000d94:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000d96:	1d3b      	adds	r3, r7, #4
 8000d98:	2204      	movs	r2, #4
 8000d9a:	4619      	mov	r1, r3
 8000d9c:	4807      	ldr	r0, [pc, #28]	@ (8000dbc <MX_TIM4_Init+0xac>)
 8000d9e:	f002 fb27 	bl	80033f0 <HAL_TIM_PWM_ConfigChannel>
 8000da2:	4603      	mov	r3, r0
 8000da4:	2b00      	cmp	r3, #0
 8000da6:	d001      	beq.n	8000dac <MX_TIM4_Init+0x9c>
  {
    Error_Handler();
 8000da8:	f000 fa10 	bl	80011cc <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 8000dac:	4803      	ldr	r0, [pc, #12]	@ (8000dbc <MX_TIM4_Init+0xac>)
 8000dae:	f000 fae9 	bl	8001384 <HAL_TIM_MspPostInit>

}
 8000db2:	bf00      	nop
 8000db4:	3728      	adds	r7, #40	@ 0x28
 8000db6:	46bd      	mov	sp, r7
 8000db8:	bd80      	pop	{r7, pc}
 8000dba:	bf00      	nop
 8000dbc:	200005f0 	.word	0x200005f0
 8000dc0:	40000800 	.word	0x40000800

08000dc4 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000dc4:	b580      	push	{r7, lr}
 8000dc6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000dc8:	4b11      	ldr	r3, [pc, #68]	@ (8000e10 <MX_USART2_UART_Init+0x4c>)
 8000dca:	4a12      	ldr	r2, [pc, #72]	@ (8000e14 <MX_USART2_UART_Init+0x50>)
 8000dcc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000dce:	4b10      	ldr	r3, [pc, #64]	@ (8000e10 <MX_USART2_UART_Init+0x4c>)
 8000dd0:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000dd4:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000dd6:	4b0e      	ldr	r3, [pc, #56]	@ (8000e10 <MX_USART2_UART_Init+0x4c>)
 8000dd8:	2200      	movs	r2, #0
 8000dda:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000ddc:	4b0c      	ldr	r3, [pc, #48]	@ (8000e10 <MX_USART2_UART_Init+0x4c>)
 8000dde:	2200      	movs	r2, #0
 8000de0:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000de2:	4b0b      	ldr	r3, [pc, #44]	@ (8000e10 <MX_USART2_UART_Init+0x4c>)
 8000de4:	2200      	movs	r2, #0
 8000de6:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000de8:	4b09      	ldr	r3, [pc, #36]	@ (8000e10 <MX_USART2_UART_Init+0x4c>)
 8000dea:	220c      	movs	r2, #12
 8000dec:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000dee:	4b08      	ldr	r3, [pc, #32]	@ (8000e10 <MX_USART2_UART_Init+0x4c>)
 8000df0:	2200      	movs	r2, #0
 8000df2:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000df4:	4b06      	ldr	r3, [pc, #24]	@ (8000e10 <MX_USART2_UART_Init+0x4c>)
 8000df6:	2200      	movs	r2, #0
 8000df8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000dfa:	4805      	ldr	r0, [pc, #20]	@ (8000e10 <MX_USART2_UART_Init+0x4c>)
 8000dfc:	f002 fe40 	bl	8003a80 <HAL_UART_Init>
 8000e00:	4603      	mov	r3, r0
 8000e02:	2b00      	cmp	r3, #0
 8000e04:	d001      	beq.n	8000e0a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000e06:	f000 f9e1 	bl	80011cc <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000e0a:	bf00      	nop
 8000e0c:	bd80      	pop	{r7, pc}
 8000e0e:	bf00      	nop
 8000e10:	20000084 	.word	0x20000084
 8000e14:	40004400 	.word	0x40004400

08000e18 <MX_USART6_UART_Init>:
  * @brief USART6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART6_UART_Init(void)
{
 8000e18:	b580      	push	{r7, lr}
 8000e1a:	af00      	add	r7, sp, #0
  /* USER CODE END USART6_Init 0 */

  /* USER CODE BEGIN USART6_Init 1 */

  /* USER CODE END USART6_Init 1 */
  huart6.Instance = USART6;
 8000e1c:	4b11      	ldr	r3, [pc, #68]	@ (8000e64 <MX_USART6_UART_Init+0x4c>)
 8000e1e:	4a12      	ldr	r2, [pc, #72]	@ (8000e68 <MX_USART6_UART_Init+0x50>)
 8000e20:	601a      	str	r2, [r3, #0]
  huart6.Init.BaudRate = 38400;
 8000e22:	4b10      	ldr	r3, [pc, #64]	@ (8000e64 <MX_USART6_UART_Init+0x4c>)
 8000e24:	f44f 4216 	mov.w	r2, #38400	@ 0x9600
 8000e28:	605a      	str	r2, [r3, #4]
  huart6.Init.WordLength = UART_WORDLENGTH_8B;
 8000e2a:	4b0e      	ldr	r3, [pc, #56]	@ (8000e64 <MX_USART6_UART_Init+0x4c>)
 8000e2c:	2200      	movs	r2, #0
 8000e2e:	609a      	str	r2, [r3, #8]
  huart6.Init.StopBits = UART_STOPBITS_1;
 8000e30:	4b0c      	ldr	r3, [pc, #48]	@ (8000e64 <MX_USART6_UART_Init+0x4c>)
 8000e32:	2200      	movs	r2, #0
 8000e34:	60da      	str	r2, [r3, #12]
  huart6.Init.Parity = UART_PARITY_NONE;
 8000e36:	4b0b      	ldr	r3, [pc, #44]	@ (8000e64 <MX_USART6_UART_Init+0x4c>)
 8000e38:	2200      	movs	r2, #0
 8000e3a:	611a      	str	r2, [r3, #16]
  huart6.Init.Mode = UART_MODE_TX_RX;
 8000e3c:	4b09      	ldr	r3, [pc, #36]	@ (8000e64 <MX_USART6_UART_Init+0x4c>)
 8000e3e:	220c      	movs	r2, #12
 8000e40:	615a      	str	r2, [r3, #20]
  huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000e42:	4b08      	ldr	r3, [pc, #32]	@ (8000e64 <MX_USART6_UART_Init+0x4c>)
 8000e44:	2200      	movs	r2, #0
 8000e46:	619a      	str	r2, [r3, #24]
  huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 8000e48:	4b06      	ldr	r3, [pc, #24]	@ (8000e64 <MX_USART6_UART_Init+0x4c>)
 8000e4a:	2200      	movs	r2, #0
 8000e4c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart6) != HAL_OK)
 8000e4e:	4805      	ldr	r0, [pc, #20]	@ (8000e64 <MX_USART6_UART_Init+0x4c>)
 8000e50:	f002 fe16 	bl	8003a80 <HAL_UART_Init>
 8000e54:	4603      	mov	r3, r0
 8000e56:	2b00      	cmp	r3, #0
 8000e58:	d001      	beq.n	8000e5e <MX_USART6_UART_Init+0x46>
  {
    Error_Handler();
 8000e5a:	f000 f9b7 	bl	80011cc <Error_Handler>
  }
  /* USER CODE BEGIN USART6_Init 2 */

  /* USER CODE END USART6_Init 2 */

}
 8000e5e:	bf00      	nop
 8000e60:	bd80      	pop	{r7, pc}
 8000e62:	bf00      	nop
 8000e64:	20000508 	.word	0x20000508
 8000e68:	40011400 	.word	0x40011400

08000e6c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000e6c:	b580      	push	{r7, lr}
 8000e6e:	b08a      	sub	sp, #40	@ 0x28
 8000e70:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e72:	f107 0314 	add.w	r3, r7, #20
 8000e76:	2200      	movs	r2, #0
 8000e78:	601a      	str	r2, [r3, #0]
 8000e7a:	605a      	str	r2, [r3, #4]
 8000e7c:	609a      	str	r2, [r3, #8]
 8000e7e:	60da      	str	r2, [r3, #12]
 8000e80:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000e82:	2300      	movs	r3, #0
 8000e84:	613b      	str	r3, [r7, #16]
 8000e86:	4b49      	ldr	r3, [pc, #292]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000e88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e8a:	4a48      	ldr	r2, [pc, #288]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000e8c:	f043 0304 	orr.w	r3, r3, #4
 8000e90:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e92:	4b46      	ldr	r3, [pc, #280]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000e94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e96:	f003 0304 	and.w	r3, r3, #4
 8000e9a:	613b      	str	r3, [r7, #16]
 8000e9c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000e9e:	2300      	movs	r3, #0
 8000ea0:	60fb      	str	r3, [r7, #12]
 8000ea2:	4b42      	ldr	r3, [pc, #264]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000ea4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ea6:	4a41      	ldr	r2, [pc, #260]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000ea8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000eac:	6313      	str	r3, [r2, #48]	@ 0x30
 8000eae:	4b3f      	ldr	r3, [pc, #252]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000eb0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000eb2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000eb6:	60fb      	str	r3, [r7, #12]
 8000eb8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000eba:	2300      	movs	r3, #0
 8000ebc:	60bb      	str	r3, [r7, #8]
 8000ebe:	4b3b      	ldr	r3, [pc, #236]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000ec0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ec2:	4a3a      	ldr	r2, [pc, #232]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000ec4:	f043 0301 	orr.w	r3, r3, #1
 8000ec8:	6313      	str	r3, [r2, #48]	@ 0x30
 8000eca:	4b38      	ldr	r3, [pc, #224]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000ecc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ece:	f003 0301 	and.w	r3, r3, #1
 8000ed2:	60bb      	str	r3, [r7, #8]
 8000ed4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ed6:	2300      	movs	r3, #0
 8000ed8:	607b      	str	r3, [r7, #4]
 8000eda:	4b34      	ldr	r3, [pc, #208]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000edc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ede:	4a33      	ldr	r2, [pc, #204]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000ee0:	f043 0302 	orr.w	r3, r3, #2
 8000ee4:	6313      	str	r3, [r2, #48]	@ 0x30
 8000ee6:	4b31      	ldr	r3, [pc, #196]	@ (8000fac <MX_GPIO_Init+0x140>)
 8000ee8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000eea:	f003 0302 	and.w	r3, r3, #2
 8000eee:	607b      	str	r3, [r7, #4]
 8000ef0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LED_Pin|Boiler_Pin, GPIO_PIN_RESET);
 8000ef2:	2200      	movs	r2, #0
 8000ef4:	f44f 7190 	mov.w	r1, #288	@ 0x120
 8000ef8:	482d      	ldr	r0, [pc, #180]	@ (8000fb0 <MX_GPIO_Init+0x144>)
 8000efa:	f001 fc33 	bl	8002764 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(humidifier_GPIO_Port, humidifier_Pin, GPIO_PIN_RESET);
 8000efe:	2200      	movs	r2, #0
 8000f00:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000f04:	482b      	ldr	r0, [pc, #172]	@ (8000fb4 <MX_GPIO_Init+0x148>)
 8000f06:	f001 fc2d 	bl	8002764 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, DHT11_Pin|TEST_LED_Pin, GPIO_PIN_RESET);
 8000f0a:	2200      	movs	r2, #0
 8000f0c:	f44f 51a0 	mov.w	r1, #5120	@ 0x1400
 8000f10:	4829      	ldr	r0, [pc, #164]	@ (8000fb8 <MX_GPIO_Init+0x14c>)
 8000f12:	f001 fc27 	bl	8002764 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000f16:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000f1a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000f1c:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8000f20:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f22:	2300      	movs	r3, #0
 8000f24:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000f26:	f107 0314 	add.w	r3, r7, #20
 8000f2a:	4619      	mov	r1, r3
 8000f2c:	4822      	ldr	r0, [pc, #136]	@ (8000fb8 <MX_GPIO_Init+0x14c>)
 8000f2e:	f001 fa7d 	bl	800242c <HAL_GPIO_Init>

  /*Configure GPIO pins : LED_Pin Boiler_Pin */
  GPIO_InitStruct.Pin = LED_Pin|Boiler_Pin;
 8000f32:	f44f 7390 	mov.w	r3, #288	@ 0x120
 8000f36:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000f38:	2301      	movs	r3, #1
 8000f3a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f3c:	2300      	movs	r3, #0
 8000f3e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f40:	2300      	movs	r3, #0
 8000f42:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f44:	f107 0314 	add.w	r3, r7, #20
 8000f48:	4619      	mov	r1, r3
 8000f4a:	4819      	ldr	r0, [pc, #100]	@ (8000fb0 <MX_GPIO_Init+0x144>)
 8000f4c:	f001 fa6e 	bl	800242c <HAL_GPIO_Init>

  /*Configure GPIO pin : button_Pin */
  GPIO_InitStruct.Pin = button_Pin;
 8000f50:	2340      	movs	r3, #64	@ 0x40
 8000f52:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000f54:	2300      	movs	r3, #0
 8000f56:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f58:	2300      	movs	r3, #0
 8000f5a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(button_GPIO_Port, &GPIO_InitStruct);
 8000f5c:	f107 0314 	add.w	r3, r7, #20
 8000f60:	4619      	mov	r1, r3
 8000f62:	4813      	ldr	r0, [pc, #76]	@ (8000fb0 <MX_GPIO_Init+0x144>)
 8000f64:	f001 fa62 	bl	800242c <HAL_GPIO_Init>

  /*Configure GPIO pin : humidifier_Pin */
  GPIO_InitStruct.Pin = humidifier_Pin;
 8000f68:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000f6c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000f6e:	2301      	movs	r3, #1
 8000f70:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f72:	2300      	movs	r3, #0
 8000f74:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f76:	2300      	movs	r3, #0
 8000f78:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(humidifier_GPIO_Port, &GPIO_InitStruct);
 8000f7a:	f107 0314 	add.w	r3, r7, #20
 8000f7e:	4619      	mov	r1, r3
 8000f80:	480c      	ldr	r0, [pc, #48]	@ (8000fb4 <MX_GPIO_Init+0x148>)
 8000f82:	f001 fa53 	bl	800242c <HAL_GPIO_Init>

  /*Configure GPIO pins : DHT11_Pin TEST_LED_Pin */
  GPIO_InitStruct.Pin = DHT11_Pin|TEST_LED_Pin;
 8000f86:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8000f8a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000f8c:	2301      	movs	r3, #1
 8000f8e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f90:	2300      	movs	r3, #0
 8000f92:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f94:	2300      	movs	r3, #0
 8000f96:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000f98:	f107 0314 	add.w	r3, r7, #20
 8000f9c:	4619      	mov	r1, r3
 8000f9e:	4806      	ldr	r0, [pc, #24]	@ (8000fb8 <MX_GPIO_Init+0x14c>)
 8000fa0:	f001 fa44 	bl	800242c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000fa4:	bf00      	nop
 8000fa6:	3728      	adds	r7, #40	@ 0x28
 8000fa8:	46bd      	mov	sp, r7
 8000faa:	bd80      	pop	{r7, pc}
 8000fac:	40023800 	.word	0x40023800
 8000fb0:	40020000 	.word	0x40020000
 8000fb4:	40020400 	.word	0x40020400
 8000fb8:	40020800 	.word	0x40020800

08000fbc <send_message_to_server>:

/* USER CODE BEGIN 4 */
void send_message_to_server(char *msg) {
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	b09c      	sub	sp, #112	@ 0x70
 8000fc0:	af00      	add	r7, sp, #0
 8000fc2:	6078      	str	r0, [r7, #4]
    char buffer[100];
    snprintf(buffer, sizeof(buffer), "%s\n", msg); // 줄바꿈 포함
 8000fc4:	f107 000c 	add.w	r0, r7, #12
 8000fc8:	687b      	ldr	r3, [r7, #4]
 8000fca:	4a0b      	ldr	r2, [pc, #44]	@ (8000ff8 <send_message_to_server+0x3c>)
 8000fcc:	2164      	movs	r1, #100	@ 0x64
 8000fce:	f003 ff77 	bl	8004ec0 <sniprintf>
    HAL_UART_Transmit(&huart6, (uint8_t *)buffer, strlen(buffer), HAL_MAX_DELAY);
 8000fd2:	f107 030c 	add.w	r3, r7, #12
 8000fd6:	4618      	mov	r0, r3
 8000fd8:	f7ff f902 	bl	80001e0 <strlen>
 8000fdc:	4603      	mov	r3, r0
 8000fde:	b29a      	uxth	r2, r3
 8000fe0:	f107 010c 	add.w	r1, r7, #12
 8000fe4:	f04f 33ff 	mov.w	r3, #4294967295
 8000fe8:	4804      	ldr	r0, [pc, #16]	@ (8000ffc <send_message_to_server+0x40>)
 8000fea:	f002 fd99 	bl	8003b20 <HAL_UART_Transmit>
}
 8000fee:	bf00      	nop
 8000ff0:	3770      	adds	r7, #112	@ 0x70
 8000ff2:	46bd      	mov	sp, r7
 8000ff4:	bd80      	pop	{r7, pc}
 8000ff6:	bf00      	nop
 8000ff8:	080060ac 	.word	0x080060ac
 8000ffc:	20000508 	.word	0x20000508

08001000 <handle_server_command>:

void handle_server_command(char *cmd)
{
 8001000:	b580      	push	{r7, lr}
 8001002:	b082      	sub	sp, #8
 8001004:	af00      	add	r7, sp, #0
 8001006:	6078      	str	r0, [r7, #4]
    cmd[strcspn(cmd, "\r\n")] = 0; // 개행 제거
 8001008:	492d      	ldr	r1, [pc, #180]	@ (80010c0 <handle_server_command+0xc0>)
 800100a:	6878      	ldr	r0, [r7, #4]
 800100c:	f004 f899 	bl	8005142 <strcspn>
 8001010:	4602      	mov	r2, r0
 8001012:	687b      	ldr	r3, [r7, #4]
 8001014:	4413      	add	r3, r2
 8001016:	2200      	movs	r2, #0
 8001018:	701a      	strb	r2, [r3, #0]
    //printf("[handle_server_command] 명령 수신: %s\r\n", cmd);

    if (strstr(cmd, "SOUNDON") != NULL) {
 800101a:	492a      	ldr	r1, [pc, #168]	@ (80010c4 <handle_server_command+0xc4>)
 800101c:	6878      	ldr	r0, [r7, #4]
 800101e:	f004 f8a1 	bl	8005164 <strstr>
 8001022:	4603      	mov	r3, r0
 8001024:	2b00      	cmp	r3, #0
 8001026:	d008      	beq.n	800103a <handle_server_command+0x3a>
        	HAL_GPIO_WritePin(GPIOA, LED_Pin|Boiler_Pin, GPIO_PIN_SET);
 8001028:	2201      	movs	r2, #1
 800102a:	f44f 7190 	mov.w	r1, #288	@ 0x120
 800102e:	4826      	ldr	r0, [pc, #152]	@ (80010c8 <handle_server_command+0xc8>)
 8001030:	f001 fb98 	bl	8002764 <HAL_GPIO_WritePin>
        	printf("집 안 조명 및 보일러 ON\r\n");
 8001034:	4825      	ldr	r0, [pc, #148]	@ (80010cc <handle_server_command+0xcc>)
 8001036:	f003 ff3b 	bl	8004eb0 <puts>
    }
    if (strstr(cmd, "LEDON") != NULL) {
 800103a:	4925      	ldr	r1, [pc, #148]	@ (80010d0 <handle_server_command+0xd0>)
 800103c:	6878      	ldr	r0, [r7, #4]
 800103e:	f004 f891 	bl	8005164 <strstr>
 8001042:	4603      	mov	r3, r0
 8001044:	2b00      	cmp	r3, #0
 8001046:	d007      	beq.n	8001058 <handle_server_command+0x58>
        	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 8001048:	2201      	movs	r2, #1
 800104a:	2120      	movs	r1, #32
 800104c:	481e      	ldr	r0, [pc, #120]	@ (80010c8 <handle_server_command+0xc8>)
 800104e:	f001 fb89 	bl	8002764 <HAL_GPIO_WritePin>
        	printf("조명 ON\r\n");
 8001052:	4820      	ldr	r0, [pc, #128]	@ (80010d4 <handle_server_command+0xd4>)
 8001054:	f003 ff2c 	bl	8004eb0 <puts>
    }
    if (strstr(cmd, "LEDOFF") != NULL) {
 8001058:	491f      	ldr	r1, [pc, #124]	@ (80010d8 <handle_server_command+0xd8>)
 800105a:	6878      	ldr	r0, [r7, #4]
 800105c:	f004 f882 	bl	8005164 <strstr>
 8001060:	4603      	mov	r3, r0
 8001062:	2b00      	cmp	r3, #0
 8001064:	d007      	beq.n	8001076 <handle_server_command+0x76>
        	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8001066:	2200      	movs	r2, #0
 8001068:	2120      	movs	r1, #32
 800106a:	4817      	ldr	r0, [pc, #92]	@ (80010c8 <handle_server_command+0xc8>)
 800106c:	f001 fb7a 	bl	8002764 <HAL_GPIO_WritePin>
        	printf("조명 OFF\r\n");
 8001070:	481a      	ldr	r0, [pc, #104]	@ (80010dc <handle_server_command+0xdc>)
 8001072:	f003 ff1d 	bl	8004eb0 <puts>
    }
    if (strstr(cmd, "BOILERON") != NULL) {
 8001076:	491a      	ldr	r1, [pc, #104]	@ (80010e0 <handle_server_command+0xe0>)
 8001078:	6878      	ldr	r0, [r7, #4]
 800107a:	f004 f873 	bl	8005164 <strstr>
 800107e:	4603      	mov	r3, r0
 8001080:	2b00      	cmp	r3, #0
 8001082:	d008      	beq.n	8001096 <handle_server_command+0x96>
    		HAL_GPIO_WritePin(Boiler_GPIO_Port, Boiler_Pin, GPIO_PIN_SET);
 8001084:	2201      	movs	r2, #1
 8001086:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800108a:	480f      	ldr	r0, [pc, #60]	@ (80010c8 <handle_server_command+0xc8>)
 800108c:	f001 fb6a 	bl	8002764 <HAL_GPIO_WritePin>
    		printf("보일러 ON\r\n");
 8001090:	4814      	ldr	r0, [pc, #80]	@ (80010e4 <handle_server_command+0xe4>)
 8001092:	f003 ff0d 	bl	8004eb0 <puts>
    }
    if (strstr(cmd, "BOILEROFF") != NULL) {
 8001096:	4914      	ldr	r1, [pc, #80]	@ (80010e8 <handle_server_command+0xe8>)
 8001098:	6878      	ldr	r0, [r7, #4]
 800109a:	f004 f863 	bl	8005164 <strstr>
 800109e:	4603      	mov	r3, r0
 80010a0:	2b00      	cmp	r3, #0
 80010a2:	d008      	beq.n	80010b6 <handle_server_command+0xb6>
    		HAL_GPIO_WritePin(Boiler_GPIO_Port, Boiler_Pin, GPIO_PIN_RESET);
 80010a4:	2200      	movs	r2, #0
 80010a6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80010aa:	4807      	ldr	r0, [pc, #28]	@ (80010c8 <handle_server_command+0xc8>)
 80010ac:	f001 fb5a 	bl	8002764 <HAL_GPIO_WritePin>
    		printf("보일러 OFF\r\n");
 80010b0:	480e      	ldr	r0, [pc, #56]	@ (80010ec <handle_server_command+0xec>)
 80010b2:	f003 fefd 	bl	8004eb0 <puts>
    }
}
 80010b6:	bf00      	nop
 80010b8:	3708      	adds	r7, #8
 80010ba:	46bd      	mov	sp, r7
 80010bc:	bd80      	pop	{r7, pc}
 80010be:	bf00      	nop
 80010c0:	080060b0 	.word	0x080060b0
 80010c4:	080060b4 	.word	0x080060b4
 80010c8:	40020000 	.word	0x40020000
 80010cc:	080060bc 	.word	0x080060bc
 80010d0:	080060e0 	.word	0x080060e0
 80010d4:	080060e8 	.word	0x080060e8
 80010d8:	080060f4 	.word	0x080060f4
 80010dc:	080060fc 	.word	0x080060fc
 80010e0:	08006108 	.word	0x08006108
 80010e4:	08006114 	.word	0x08006114
 80010e8:	08006124 	.word	0x08006124
 80010ec:	08006130 	.word	0x08006130

080010f0 <esp_event>:

void esp_event(char * recvBuf)
{
 80010f0:	b580      	push	{r7, lr}
 80010f2:	b084      	sub	sp, #16
 80010f4:	af00      	add	r7, sp, #0
 80010f6:	6078      	str	r0, [r7, #4]
    size_t len = strlen(recvBuf);
 80010f8:	6878      	ldr	r0, [r7, #4]
 80010fa:	f7ff f871 	bl	80001e0 <strlen>
 80010fe:	60f8      	str	r0, [r7, #12]
    if (len > 0 && (recvBuf[len - 1] == '\n' || recvBuf[len - 1] == '\r')) {
 8001100:	68fb      	ldr	r3, [r7, #12]
 8001102:	2b00      	cmp	r3, #0
 8001104:	d013      	beq.n	800112e <esp_event+0x3e>
 8001106:	68fb      	ldr	r3, [r7, #12]
 8001108:	3b01      	subs	r3, #1
 800110a:	687a      	ldr	r2, [r7, #4]
 800110c:	4413      	add	r3, r2
 800110e:	781b      	ldrb	r3, [r3, #0]
 8001110:	2b0a      	cmp	r3, #10
 8001112:	d006      	beq.n	8001122 <esp_event+0x32>
 8001114:	68fb      	ldr	r3, [r7, #12]
 8001116:	3b01      	subs	r3, #1
 8001118:	687a      	ldr	r2, [r7, #4]
 800111a:	4413      	add	r3, r2
 800111c:	781b      	ldrb	r3, [r3, #0]
 800111e:	2b0d      	cmp	r3, #13
 8001120:	d105      	bne.n	800112e <esp_event+0x3e>
        recvBuf[len - 1] = '\0';
 8001122:	68fb      	ldr	r3, [r7, #12]
 8001124:	3b01      	subs	r3, #1
 8001126:	687a      	ldr	r2, [r7, #4]
 8001128:	4413      	add	r3, r2
 800112a:	2200      	movs	r2, #0
 800112c:	701a      	strb	r2, [r3, #0]
    }
    handle_server_command(recvBuf);
 800112e:	6878      	ldr	r0, [r7, #4]
 8001130:	f7ff ff66 	bl	8001000 <handle_server_command>
}
 8001134:	bf00      	nop
 8001136:	3710      	adds	r7, #16
 8001138:	46bd      	mov	sp, r7
 800113a:	bd80      	pop	{r7, pc}

0800113c <Send_Sensor_Data>:



void Send_Sensor_Data() {
 800113c:	b590      	push	{r4, r7, lr}
 800113e:	b09f      	sub	sp, #124	@ 0x7c
 8001140:	af02      	add	r7, sp, #8

   DHT11_TypeDef dht11Data;
   WATER_Typedef waterData;

   dht11Data = DHT11_readData();
 8001142:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 8001146:	4618      	mov	r0, r3
 8001148:	f7ff fb76 	bl	8000838 <DHT11_readData>
   waterData = WATER_readData();
 800114c:	f000 fb0c 	bl	8001768 <WATER_readData>
 8001150:	4603      	mov	r3, r0
 8001152:	f8a7 3064 	strh.w	r3, [r7, #100]	@ 0x64

   char buff[100];

   sprintf(buff, "[USR_SQL]:SENSOR@%d.%d@%d@%d\n",dht11Data.temp_byte1, dht11Data.temp_byte2, dht11Data.rh_byte1, waterData.water_value);
 8001156:	f897 306a 	ldrb.w	r3, [r7, #106]	@ 0x6a
 800115a:	4619      	mov	r1, r3
 800115c:	f897 306b 	ldrb.w	r3, [r7, #107]	@ 0x6b
 8001160:	461c      	mov	r4, r3
 8001162:	f897 3068 	ldrb.w	r3, [r7, #104]	@ 0x68
 8001166:	f8b7 2064 	ldrh.w	r2, [r7, #100]	@ 0x64
 800116a:	4638      	mov	r0, r7
 800116c:	9201      	str	r2, [sp, #4]
 800116e:	9300      	str	r3, [sp, #0]
 8001170:	4623      	mov	r3, r4
 8001172:	460a      	mov	r2, r1
 8001174:	4913      	ldr	r1, [pc, #76]	@ (80011c4 <Send_Sensor_Data+0x88>)
 8001176:	f003 fed7 	bl	8004f28 <siprintf>
//     sprintf(buff, "[STM:SENSOR@%d.%d@%d]\r\n",
//               dht11Data.temp_byte1, dht11Data.temp_byte2, dht11Data.rh_byte1);


   //printf("전송할 데이터: %s\r\n", buff);
   if (waterData.water_value <= 100 || dht11Data.rh_byte1 > 60)
 800117a:	f8b7 3064 	ldrh.w	r3, [r7, #100]	@ 0x64
 800117e:	2b64      	cmp	r3, #100	@ 0x64
 8001180:	d903      	bls.n	800118a <Send_Sensor_Data+0x4e>
 8001182:	f897 3068 	ldrb.w	r3, [r7, #104]	@ 0x68
 8001186:	2b3c      	cmp	r3, #60	@ 0x3c
 8001188:	d906      	bls.n	8001198 <Send_Sensor_Data+0x5c>
        {
   	   HAL_GPIO_WritePin(humidifier_GPIO_Port, humidifier_Pin, GPIO_PIN_RESET);
 800118a:	2200      	movs	r2, #0
 800118c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001190:	480d      	ldr	r0, [pc, #52]	@ (80011c8 <Send_Sensor_Data+0x8c>)
 8001192:	f001 fae7 	bl	8002764 <HAL_GPIO_WritePin>
 8001196:	e00d      	b.n	80011b4 <Send_Sensor_Data+0x78>
        }
   else if (dht11Data.rh_byte1 < 30 && waterData.water_value > 100)
 8001198:	f897 3068 	ldrb.w	r3, [r7, #104]	@ 0x68
 800119c:	2b1d      	cmp	r3, #29
 800119e:	d809      	bhi.n	80011b4 <Send_Sensor_Data+0x78>
 80011a0:	f8b7 3064 	ldrh.w	r3, [r7, #100]	@ 0x64
 80011a4:	2b64      	cmp	r3, #100	@ 0x64
 80011a6:	d905      	bls.n	80011b4 <Send_Sensor_Data+0x78>
     {
	   HAL_GPIO_WritePin(humidifier_GPIO_Port, humidifier_Pin, GPIO_PIN_SET);
 80011a8:	2201      	movs	r2, #1
 80011aa:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011ae:	4806      	ldr	r0, [pc, #24]	@ (80011c8 <Send_Sensor_Data+0x8c>)
 80011b0:	f001 fad8 	bl	8002764 <HAL_GPIO_WritePin>
     }
    // 데이터 전송`
    send_message_to_server(buff);
 80011b4:	463b      	mov	r3, r7
 80011b6:	4618      	mov	r0, r3
 80011b8:	f7ff ff00 	bl	8000fbc <send_message_to_server>
//    printf("전송 완료?\r\n");
}
 80011bc:	bf00      	nop
 80011be:	3774      	adds	r7, #116	@ 0x74
 80011c0:	46bd      	mov	sp, r7
 80011c2:	bd90      	pop	{r4, r7, pc}
 80011c4:	08006140 	.word	0x08006140
 80011c8:	40020400 	.word	0x40020400

080011cc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80011cc:	b480      	push	{r7}
 80011ce:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80011d0:	b672      	cpsid	i
}
 80011d2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80011d4:	bf00      	nop
 80011d6:	e7fd      	b.n	80011d4 <Error_Handler+0x8>

080011d8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80011d8:	b580      	push	{r7, lr}
 80011da:	b082      	sub	sp, #8
 80011dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80011de:	2300      	movs	r3, #0
 80011e0:	607b      	str	r3, [r7, #4]
 80011e2:	4b10      	ldr	r3, [pc, #64]	@ (8001224 <HAL_MspInit+0x4c>)
 80011e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80011e6:	4a0f      	ldr	r2, [pc, #60]	@ (8001224 <HAL_MspInit+0x4c>)
 80011e8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80011ec:	6453      	str	r3, [r2, #68]	@ 0x44
 80011ee:	4b0d      	ldr	r3, [pc, #52]	@ (8001224 <HAL_MspInit+0x4c>)
 80011f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80011f2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80011f6:	607b      	str	r3, [r7, #4]
 80011f8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80011fa:	2300      	movs	r3, #0
 80011fc:	603b      	str	r3, [r7, #0]
 80011fe:	4b09      	ldr	r3, [pc, #36]	@ (8001224 <HAL_MspInit+0x4c>)
 8001200:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001202:	4a08      	ldr	r2, [pc, #32]	@ (8001224 <HAL_MspInit+0x4c>)
 8001204:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001208:	6413      	str	r3, [r2, #64]	@ 0x40
 800120a:	4b06      	ldr	r3, [pc, #24]	@ (8001224 <HAL_MspInit+0x4c>)
 800120c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800120e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001212:	603b      	str	r3, [r7, #0]
 8001214:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8001216:	2007      	movs	r0, #7
 8001218:	f001 f834 	bl	8002284 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800121c:	bf00      	nop
 800121e:	3708      	adds	r7, #8
 8001220:	46bd      	mov	sp, r7
 8001222:	bd80      	pop	{r7, pc}
 8001224:	40023800 	.word	0x40023800

08001228 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001228:	b580      	push	{r7, lr}
 800122a:	b08a      	sub	sp, #40	@ 0x28
 800122c:	af00      	add	r7, sp, #0
 800122e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001230:	f107 0314 	add.w	r3, r7, #20
 8001234:	2200      	movs	r2, #0
 8001236:	601a      	str	r2, [r3, #0]
 8001238:	605a      	str	r2, [r3, #4]
 800123a:	609a      	str	r2, [r3, #8]
 800123c:	60da      	str	r2, [r3, #12]
 800123e:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001240:	687b      	ldr	r3, [r7, #4]
 8001242:	681b      	ldr	r3, [r3, #0]
 8001244:	4a17      	ldr	r2, [pc, #92]	@ (80012a4 <HAL_ADC_MspInit+0x7c>)
 8001246:	4293      	cmp	r3, r2
 8001248:	d127      	bne.n	800129a <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800124a:	2300      	movs	r3, #0
 800124c:	613b      	str	r3, [r7, #16]
 800124e:	4b16      	ldr	r3, [pc, #88]	@ (80012a8 <HAL_ADC_MspInit+0x80>)
 8001250:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001252:	4a15      	ldr	r2, [pc, #84]	@ (80012a8 <HAL_ADC_MspInit+0x80>)
 8001254:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001258:	6453      	str	r3, [r2, #68]	@ 0x44
 800125a:	4b13      	ldr	r3, [pc, #76]	@ (80012a8 <HAL_ADC_MspInit+0x80>)
 800125c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800125e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001262:	613b      	str	r3, [r7, #16]
 8001264:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001266:	2300      	movs	r3, #0
 8001268:	60fb      	str	r3, [r7, #12]
 800126a:	4b0f      	ldr	r3, [pc, #60]	@ (80012a8 <HAL_ADC_MspInit+0x80>)
 800126c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800126e:	4a0e      	ldr	r2, [pc, #56]	@ (80012a8 <HAL_ADC_MspInit+0x80>)
 8001270:	f043 0301 	orr.w	r3, r3, #1
 8001274:	6313      	str	r3, [r2, #48]	@ 0x30
 8001276:	4b0c      	ldr	r3, [pc, #48]	@ (80012a8 <HAL_ADC_MspInit+0x80>)
 8001278:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800127a:	f003 0301 	and.w	r3, r3, #1
 800127e:	60fb      	str	r3, [r7, #12]
 8001280:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA4     ------> ADC1_IN4
    */
    GPIO_InitStruct.Pin = WATER_Pin;
 8001282:	2310      	movs	r3, #16
 8001284:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001286:	2303      	movs	r3, #3
 8001288:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800128a:	2300      	movs	r3, #0
 800128c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(WATER_GPIO_Port, &GPIO_InitStruct);
 800128e:	f107 0314 	add.w	r3, r7, #20
 8001292:	4619      	mov	r1, r3
 8001294:	4805      	ldr	r0, [pc, #20]	@ (80012ac <HAL_ADC_MspInit+0x84>)
 8001296:	f001 f8c9 	bl	800242c <HAL_GPIO_Init>

  /* USER CODE END ADC1_MspInit 1 */

  }

}
 800129a:	bf00      	nop
 800129c:	3728      	adds	r7, #40	@ 0x28
 800129e:	46bd      	mov	sp, r7
 80012a0:	bd80      	pop	{r7, pc}
 80012a2:	bf00      	nop
 80012a4:	40012000 	.word	0x40012000
 80012a8:	40023800 	.word	0x40023800
 80012ac:	40020000 	.word	0x40020000

080012b0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80012b0:	b580      	push	{r7, lr}
 80012b2:	b08a      	sub	sp, #40	@ 0x28
 80012b4:	af00      	add	r7, sp, #0
 80012b6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012b8:	f107 0314 	add.w	r3, r7, #20
 80012bc:	2200      	movs	r2, #0
 80012be:	601a      	str	r2, [r3, #0]
 80012c0:	605a      	str	r2, [r3, #4]
 80012c2:	609a      	str	r2, [r3, #8]
 80012c4:	60da      	str	r2, [r3, #12]
 80012c6:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	681b      	ldr	r3, [r3, #0]
 80012cc:	4a19      	ldr	r2, [pc, #100]	@ (8001334 <HAL_I2C_MspInit+0x84>)
 80012ce:	4293      	cmp	r3, r2
 80012d0:	d12c      	bne.n	800132c <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80012d2:	2300      	movs	r3, #0
 80012d4:	613b      	str	r3, [r7, #16]
 80012d6:	4b18      	ldr	r3, [pc, #96]	@ (8001338 <HAL_I2C_MspInit+0x88>)
 80012d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012da:	4a17      	ldr	r2, [pc, #92]	@ (8001338 <HAL_I2C_MspInit+0x88>)
 80012dc:	f043 0302 	orr.w	r3, r3, #2
 80012e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80012e2:	4b15      	ldr	r3, [pc, #84]	@ (8001338 <HAL_I2C_MspInit+0x88>)
 80012e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012e6:	f003 0302 	and.w	r3, r3, #2
 80012ea:	613b      	str	r3, [r7, #16]
 80012ec:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80012ee:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80012f2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80012f4:	2312      	movs	r3, #18
 80012f6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012f8:	2300      	movs	r3, #0
 80012fa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012fc:	2303      	movs	r3, #3
 80012fe:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001300:	2304      	movs	r3, #4
 8001302:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001304:	f107 0314 	add.w	r3, r7, #20
 8001308:	4619      	mov	r1, r3
 800130a:	480c      	ldr	r0, [pc, #48]	@ (800133c <HAL_I2C_MspInit+0x8c>)
 800130c:	f001 f88e 	bl	800242c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001310:	2300      	movs	r3, #0
 8001312:	60fb      	str	r3, [r7, #12]
 8001314:	4b08      	ldr	r3, [pc, #32]	@ (8001338 <HAL_I2C_MspInit+0x88>)
 8001316:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001318:	4a07      	ldr	r2, [pc, #28]	@ (8001338 <HAL_I2C_MspInit+0x88>)
 800131a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800131e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001320:	4b05      	ldr	r3, [pc, #20]	@ (8001338 <HAL_I2C_MspInit+0x88>)
 8001322:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001324:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001328:	60fb      	str	r3, [r7, #12]
 800132a:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 800132c:	bf00      	nop
 800132e:	3728      	adds	r7, #40	@ 0x28
 8001330:	46bd      	mov	sp, r7
 8001332:	bd80      	pop	{r7, pc}
 8001334:	40005400 	.word	0x40005400
 8001338:	40023800 	.word	0x40023800
 800133c:	40020400 	.word	0x40020400

08001340 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8001340:	b480      	push	{r7}
 8001342:	b085      	sub	sp, #20
 8001344:	af00      	add	r7, sp, #0
 8001346:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM4)
 8001348:	687b      	ldr	r3, [r7, #4]
 800134a:	681b      	ldr	r3, [r3, #0]
 800134c:	4a0b      	ldr	r2, [pc, #44]	@ (800137c <HAL_TIM_PWM_MspInit+0x3c>)
 800134e:	4293      	cmp	r3, r2
 8001350:	d10d      	bne.n	800136e <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001352:	2300      	movs	r3, #0
 8001354:	60fb      	str	r3, [r7, #12]
 8001356:	4b0a      	ldr	r3, [pc, #40]	@ (8001380 <HAL_TIM_PWM_MspInit+0x40>)
 8001358:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800135a:	4a09      	ldr	r2, [pc, #36]	@ (8001380 <HAL_TIM_PWM_MspInit+0x40>)
 800135c:	f043 0304 	orr.w	r3, r3, #4
 8001360:	6413      	str	r3, [r2, #64]	@ 0x40
 8001362:	4b07      	ldr	r3, [pc, #28]	@ (8001380 <HAL_TIM_PWM_MspInit+0x40>)
 8001364:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001366:	f003 0304 	and.w	r3, r3, #4
 800136a:	60fb      	str	r3, [r7, #12]
 800136c:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END TIM4_MspInit 1 */

  }

}
 800136e:	bf00      	nop
 8001370:	3714      	adds	r7, #20
 8001372:	46bd      	mov	sp, r7
 8001374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001378:	4770      	bx	lr
 800137a:	bf00      	nop
 800137c:	40000800 	.word	0x40000800
 8001380:	40023800 	.word	0x40023800

08001384 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001384:	b580      	push	{r7, lr}
 8001386:	b088      	sub	sp, #32
 8001388:	af00      	add	r7, sp, #0
 800138a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800138c:	f107 030c 	add.w	r3, r7, #12
 8001390:	2200      	movs	r2, #0
 8001392:	601a      	str	r2, [r3, #0]
 8001394:	605a      	str	r2, [r3, #4]
 8001396:	609a      	str	r2, [r3, #8]
 8001398:	60da      	str	r2, [r3, #12]
 800139a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM4)
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	4a12      	ldr	r2, [pc, #72]	@ (80013ec <HAL_TIM_MspPostInit+0x68>)
 80013a2:	4293      	cmp	r3, r2
 80013a4:	d11d      	bne.n	80013e2 <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM4_MspPostInit 0 */

  /* USER CODE END TIM4_MspPostInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80013a6:	2300      	movs	r3, #0
 80013a8:	60bb      	str	r3, [r7, #8]
 80013aa:	4b11      	ldr	r3, [pc, #68]	@ (80013f0 <HAL_TIM_MspPostInit+0x6c>)
 80013ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ae:	4a10      	ldr	r2, [pc, #64]	@ (80013f0 <HAL_TIM_MspPostInit+0x6c>)
 80013b0:	f043 0302 	orr.w	r3, r3, #2
 80013b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80013b6:	4b0e      	ldr	r3, [pc, #56]	@ (80013f0 <HAL_TIM_MspPostInit+0x6c>)
 80013b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ba:	f003 0302 	and.w	r3, r3, #2
 80013be:	60bb      	str	r3, [r7, #8]
 80013c0:	68bb      	ldr	r3, [r7, #8]
    /**TIM4 GPIO Configuration
    PB7     ------> TIM4_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 80013c2:	2380      	movs	r3, #128	@ 0x80
 80013c4:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013c6:	2302      	movs	r3, #2
 80013c8:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013ca:	2300      	movs	r3, #0
 80013cc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013ce:	2300      	movs	r3, #0
 80013d0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 80013d2:	2302      	movs	r3, #2
 80013d4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80013d6:	f107 030c 	add.w	r3, r7, #12
 80013da:	4619      	mov	r1, r3
 80013dc:	4805      	ldr	r0, [pc, #20]	@ (80013f4 <HAL_TIM_MspPostInit+0x70>)
 80013de:	f001 f825 	bl	800242c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 80013e2:	bf00      	nop
 80013e4:	3720      	adds	r7, #32
 80013e6:	46bd      	mov	sp, r7
 80013e8:	bd80      	pop	{r7, pc}
 80013ea:	bf00      	nop
 80013ec:	40000800 	.word	0x40000800
 80013f0:	40023800 	.word	0x40023800
 80013f4:	40020400 	.word	0x40020400

080013f8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80013f8:	b580      	push	{r7, lr}
 80013fa:	b08c      	sub	sp, #48	@ 0x30
 80013fc:	af00      	add	r7, sp, #0
 80013fe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001400:	f107 031c 	add.w	r3, r7, #28
 8001404:	2200      	movs	r2, #0
 8001406:	601a      	str	r2, [r3, #0]
 8001408:	605a      	str	r2, [r3, #4]
 800140a:	609a      	str	r2, [r3, #8]
 800140c:	60da      	str	r2, [r3, #12]
 800140e:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	681b      	ldr	r3, [r3, #0]
 8001414:	4a3a      	ldr	r2, [pc, #232]	@ (8001500 <HAL_UART_MspInit+0x108>)
 8001416:	4293      	cmp	r3, r2
 8001418:	d134      	bne.n	8001484 <HAL_UART_MspInit+0x8c>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 800141a:	2300      	movs	r3, #0
 800141c:	61bb      	str	r3, [r7, #24]
 800141e:	4b39      	ldr	r3, [pc, #228]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 8001420:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001422:	4a38      	ldr	r2, [pc, #224]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 8001424:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001428:	6413      	str	r3, [r2, #64]	@ 0x40
 800142a:	4b36      	ldr	r3, [pc, #216]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 800142c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800142e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001432:	61bb      	str	r3, [r7, #24]
 8001434:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001436:	2300      	movs	r3, #0
 8001438:	617b      	str	r3, [r7, #20]
 800143a:	4b32      	ldr	r3, [pc, #200]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 800143c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800143e:	4a31      	ldr	r2, [pc, #196]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 8001440:	f043 0301 	orr.w	r3, r3, #1
 8001444:	6313      	str	r3, [r2, #48]	@ 0x30
 8001446:	4b2f      	ldr	r3, [pc, #188]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 8001448:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800144a:	f003 0301 	and.w	r3, r3, #1
 800144e:	617b      	str	r3, [r7, #20]
 8001450:	697b      	ldr	r3, [r7, #20]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8001452:	230c      	movs	r3, #12
 8001454:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001456:	2302      	movs	r3, #2
 8001458:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800145a:	2300      	movs	r3, #0
 800145c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800145e:	2303      	movs	r3, #3
 8001460:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001462:	2307      	movs	r3, #7
 8001464:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001466:	f107 031c 	add.w	r3, r7, #28
 800146a:	4619      	mov	r1, r3
 800146c:	4826      	ldr	r0, [pc, #152]	@ (8001508 <HAL_UART_MspInit+0x110>)
 800146e:	f000 ffdd 	bl	800242c <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8001472:	2200      	movs	r2, #0
 8001474:	2100      	movs	r1, #0
 8001476:	2026      	movs	r0, #38	@ 0x26
 8001478:	f000 ff0f 	bl	800229a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 800147c:	2026      	movs	r0, #38	@ 0x26
 800147e:	f000 ff28 	bl	80022d2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART6_MspInit 1 */

  /* USER CODE END USART6_MspInit 1 */
  }

}
 8001482:	e038      	b.n	80014f6 <HAL_UART_MspInit+0xfe>
  else if(huart->Instance==USART6)
 8001484:	687b      	ldr	r3, [r7, #4]
 8001486:	681b      	ldr	r3, [r3, #0]
 8001488:	4a20      	ldr	r2, [pc, #128]	@ (800150c <HAL_UART_MspInit+0x114>)
 800148a:	4293      	cmp	r3, r2
 800148c:	d133      	bne.n	80014f6 <HAL_UART_MspInit+0xfe>
    __HAL_RCC_USART6_CLK_ENABLE();
 800148e:	2300      	movs	r3, #0
 8001490:	613b      	str	r3, [r7, #16]
 8001492:	4b1c      	ldr	r3, [pc, #112]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 8001494:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001496:	4a1b      	ldr	r2, [pc, #108]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 8001498:	f043 0320 	orr.w	r3, r3, #32
 800149c:	6453      	str	r3, [r2, #68]	@ 0x44
 800149e:	4b19      	ldr	r3, [pc, #100]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 80014a0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80014a2:	f003 0320 	and.w	r3, r3, #32
 80014a6:	613b      	str	r3, [r7, #16]
 80014a8:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80014aa:	2300      	movs	r3, #0
 80014ac:	60fb      	str	r3, [r7, #12]
 80014ae:	4b15      	ldr	r3, [pc, #84]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 80014b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014b2:	4a14      	ldr	r2, [pc, #80]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 80014b4:	f043 0304 	orr.w	r3, r3, #4
 80014b8:	6313      	str	r3, [r2, #48]	@ 0x30
 80014ba:	4b12      	ldr	r3, [pc, #72]	@ (8001504 <HAL_UART_MspInit+0x10c>)
 80014bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014be:	f003 0304 	and.w	r3, r3, #4
 80014c2:	60fb      	str	r3, [r7, #12]
 80014c4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80014c6:	23c0      	movs	r3, #192	@ 0xc0
 80014c8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014ca:	2302      	movs	r3, #2
 80014cc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014ce:	2300      	movs	r3, #0
 80014d0:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014d2:	2303      	movs	r3, #3
 80014d4:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 80014d6:	2308      	movs	r3, #8
 80014d8:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014da:	f107 031c 	add.w	r3, r7, #28
 80014de:	4619      	mov	r1, r3
 80014e0:	480b      	ldr	r0, [pc, #44]	@ (8001510 <HAL_UART_MspInit+0x118>)
 80014e2:	f000 ffa3 	bl	800242c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART6_IRQn, 0, 0);
 80014e6:	2200      	movs	r2, #0
 80014e8:	2100      	movs	r1, #0
 80014ea:	2047      	movs	r0, #71	@ 0x47
 80014ec:	f000 fed5 	bl	800229a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART6_IRQn);
 80014f0:	2047      	movs	r0, #71	@ 0x47
 80014f2:	f000 feee 	bl	80022d2 <HAL_NVIC_EnableIRQ>
}
 80014f6:	bf00      	nop
 80014f8:	3730      	adds	r7, #48	@ 0x30
 80014fa:	46bd      	mov	sp, r7
 80014fc:	bd80      	pop	{r7, pc}
 80014fe:	bf00      	nop
 8001500:	40004400 	.word	0x40004400
 8001504:	40023800 	.word	0x40023800
 8001508:	40020000 	.word	0x40020000
 800150c:	40011400 	.word	0x40011400
 8001510:	40020800 	.word	0x40020800

08001514 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001514:	b480      	push	{r7}
 8001516:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001518:	bf00      	nop
 800151a:	e7fd      	b.n	8001518 <NMI_Handler+0x4>

0800151c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800151c:	b480      	push	{r7}
 800151e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001520:	bf00      	nop
 8001522:	e7fd      	b.n	8001520 <HardFault_Handler+0x4>

08001524 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001524:	b480      	push	{r7}
 8001526:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001528:	bf00      	nop
 800152a:	e7fd      	b.n	8001528 <MemManage_Handler+0x4>

0800152c <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800152c:	b480      	push	{r7}
 800152e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001530:	bf00      	nop
 8001532:	e7fd      	b.n	8001530 <BusFault_Handler+0x4>

08001534 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001534:	b480      	push	{r7}
 8001536:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001538:	bf00      	nop
 800153a:	e7fd      	b.n	8001538 <UsageFault_Handler+0x4>

0800153c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800153c:	b480      	push	{r7}
 800153e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001540:	bf00      	nop
 8001542:	46bd      	mov	sp, r7
 8001544:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001548:	4770      	bx	lr

0800154a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800154a:	b480      	push	{r7}
 800154c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800154e:	bf00      	nop
 8001550:	46bd      	mov	sp, r7
 8001552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001556:	4770      	bx	lr

08001558 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001558:	b480      	push	{r7}
 800155a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800155c:	bf00      	nop
 800155e:	46bd      	mov	sp, r7
 8001560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001564:	4770      	bx	lr

08001566 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001566:	b580      	push	{r7, lr}
 8001568:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800156a:	f000 f985 	bl	8001878 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800156e:	bf00      	nop
 8001570:	bd80      	pop	{r7, pc}
	...

08001574 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8001574:	b580      	push	{r7, lr}
 8001576:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8001578:	4802      	ldr	r0, [pc, #8]	@ (8001584 <USART2_IRQHandler+0x10>)
 800157a:	f002 fc19 	bl	8003db0 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 800157e:	bf00      	nop
 8001580:	bd80      	pop	{r7, pc}
 8001582:	bf00      	nop
 8001584:	20000084 	.word	0x20000084

08001588 <USART6_IRQHandler>:

/**
  * @brief This function handles USART6 global interrupt.
  */
void USART6_IRQHandler(void)
{
 8001588:	b580      	push	{r7, lr}
 800158a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART6_IRQn 0 */

  /* USER CODE END USART6_IRQn 0 */
  HAL_UART_IRQHandler(&huart6);
 800158c:	4802      	ldr	r0, [pc, #8]	@ (8001598 <USART6_IRQHandler+0x10>)
 800158e:	f002 fc0f 	bl	8003db0 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART6_IRQn 1 */

  /* USER CODE END USART6_IRQn 1 */
}
 8001592:	bf00      	nop
 8001594:	bd80      	pop	{r7, pc}
 8001596:	bf00      	nop
 8001598:	20000508 	.word	0x20000508

0800159c <_read>:
 800159c:	b580      	push	{r7, lr}
 800159e:	b086      	sub	sp, #24
 80015a0:	af00      	add	r7, sp, #0
 80015a2:	60f8      	str	r0, [r7, #12]
 80015a4:	60b9      	str	r1, [r7, #8]
 80015a6:	607a      	str	r2, [r7, #4]
 80015a8:	2300      	movs	r3, #0
 80015aa:	617b      	str	r3, [r7, #20]
 80015ac:	e00a      	b.n	80015c4 <_read+0x28>
 80015ae:	f3af 8000 	nop.w
 80015b2:	4601      	mov	r1, r0
 80015b4:	68bb      	ldr	r3, [r7, #8]
 80015b6:	1c5a      	adds	r2, r3, #1
 80015b8:	60ba      	str	r2, [r7, #8]
 80015ba:	b2ca      	uxtb	r2, r1
 80015bc:	701a      	strb	r2, [r3, #0]
 80015be:	697b      	ldr	r3, [r7, #20]
 80015c0:	3301      	adds	r3, #1
 80015c2:	617b      	str	r3, [r7, #20]
 80015c4:	697a      	ldr	r2, [r7, #20]
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	429a      	cmp	r2, r3
 80015ca:	dbf0      	blt.n	80015ae <_read+0x12>
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	4618      	mov	r0, r3
 80015d0:	3718      	adds	r7, #24
 80015d2:	46bd      	mov	sp, r7
 80015d4:	bd80      	pop	{r7, pc}

080015d6 <_write>:
 80015d6:	b580      	push	{r7, lr}
 80015d8:	b086      	sub	sp, #24
 80015da:	af00      	add	r7, sp, #0
 80015dc:	60f8      	str	r0, [r7, #12]
 80015de:	60b9      	str	r1, [r7, #8]
 80015e0:	607a      	str	r2, [r7, #4]
 80015e2:	2300      	movs	r3, #0
 80015e4:	617b      	str	r3, [r7, #20]
 80015e6:	e009      	b.n	80015fc <_write+0x26>
 80015e8:	68bb      	ldr	r3, [r7, #8]
 80015ea:	1c5a      	adds	r2, r3, #1
 80015ec:	60ba      	str	r2, [r7, #8]
 80015ee:	781b      	ldrb	r3, [r3, #0]
 80015f0:	4618      	mov	r0, r3
 80015f2:	f7ff f9b3 	bl	800095c <__io_putchar>
 80015f6:	697b      	ldr	r3, [r7, #20]
 80015f8:	3301      	adds	r3, #1
 80015fa:	617b      	str	r3, [r7, #20]
 80015fc:	697a      	ldr	r2, [r7, #20]
 80015fe:	687b      	ldr	r3, [r7, #4]
 8001600:	429a      	cmp	r2, r3
 8001602:	dbf1      	blt.n	80015e8 <_write+0x12>
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	4618      	mov	r0, r3
 8001608:	3718      	adds	r7, #24
 800160a:	46bd      	mov	sp, r7
 800160c:	bd80      	pop	{r7, pc}

0800160e <_close>:
 800160e:	b480      	push	{r7}
 8001610:	b083      	sub	sp, #12
 8001612:	af00      	add	r7, sp, #0
 8001614:	6078      	str	r0, [r7, #4]
 8001616:	f04f 33ff 	mov.w	r3, #4294967295
 800161a:	4618      	mov	r0, r3
 800161c:	370c      	adds	r7, #12
 800161e:	46bd      	mov	sp, r7
 8001620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001624:	4770      	bx	lr

08001626 <_fstat>:
 8001626:	b480      	push	{r7}
 8001628:	b083      	sub	sp, #12
 800162a:	af00      	add	r7, sp, #0
 800162c:	6078      	str	r0, [r7, #4]
 800162e:	6039      	str	r1, [r7, #0]
 8001630:	683b      	ldr	r3, [r7, #0]
 8001632:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001636:	605a      	str	r2, [r3, #4]
 8001638:	2300      	movs	r3, #0
 800163a:	4618      	mov	r0, r3
 800163c:	370c      	adds	r7, #12
 800163e:	46bd      	mov	sp, r7
 8001640:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001644:	4770      	bx	lr

08001646 <_isatty>:
 8001646:	b480      	push	{r7}
 8001648:	b083      	sub	sp, #12
 800164a:	af00      	add	r7, sp, #0
 800164c:	6078      	str	r0, [r7, #4]
 800164e:	2301      	movs	r3, #1
 8001650:	4618      	mov	r0, r3
 8001652:	370c      	adds	r7, #12
 8001654:	46bd      	mov	sp, r7
 8001656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800165a:	4770      	bx	lr

0800165c <_lseek>:
 800165c:	b480      	push	{r7}
 800165e:	b085      	sub	sp, #20
 8001660:	af00      	add	r7, sp, #0
 8001662:	60f8      	str	r0, [r7, #12]
 8001664:	60b9      	str	r1, [r7, #8]
 8001666:	607a      	str	r2, [r7, #4]
 8001668:	2300      	movs	r3, #0
 800166a:	4618      	mov	r0, r3
 800166c:	3714      	adds	r7, #20
 800166e:	46bd      	mov	sp, r7
 8001670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001674:	4770      	bx	lr
	...

08001678 <_sbrk>:
 8001678:	b580      	push	{r7, lr}
 800167a:	b086      	sub	sp, #24
 800167c:	af00      	add	r7, sp, #0
 800167e:	6078      	str	r0, [r7, #4]
 8001680:	4a14      	ldr	r2, [pc, #80]	@ (80016d4 <_sbrk+0x5c>)
 8001682:	4b15      	ldr	r3, [pc, #84]	@ (80016d8 <_sbrk+0x60>)
 8001684:	1ad3      	subs	r3, r2, r3
 8001686:	617b      	str	r3, [r7, #20]
 8001688:	697b      	ldr	r3, [r7, #20]
 800168a:	613b      	str	r3, [r7, #16]
 800168c:	4b13      	ldr	r3, [pc, #76]	@ (80016dc <_sbrk+0x64>)
 800168e:	681b      	ldr	r3, [r3, #0]
 8001690:	2b00      	cmp	r3, #0
 8001692:	d102      	bne.n	800169a <_sbrk+0x22>
 8001694:	4b11      	ldr	r3, [pc, #68]	@ (80016dc <_sbrk+0x64>)
 8001696:	4a12      	ldr	r2, [pc, #72]	@ (80016e0 <_sbrk+0x68>)
 8001698:	601a      	str	r2, [r3, #0]
 800169a:	4b10      	ldr	r3, [pc, #64]	@ (80016dc <_sbrk+0x64>)
 800169c:	681a      	ldr	r2, [r3, #0]
 800169e:	687b      	ldr	r3, [r7, #4]
 80016a0:	4413      	add	r3, r2
 80016a2:	693a      	ldr	r2, [r7, #16]
 80016a4:	429a      	cmp	r2, r3
 80016a6:	d207      	bcs.n	80016b8 <_sbrk+0x40>
 80016a8:	f003 fdb8 	bl	800521c <__errno>
 80016ac:	4603      	mov	r3, r0
 80016ae:	220c      	movs	r2, #12
 80016b0:	601a      	str	r2, [r3, #0]
 80016b2:	f04f 33ff 	mov.w	r3, #4294967295
 80016b6:	e009      	b.n	80016cc <_sbrk+0x54>
 80016b8:	4b08      	ldr	r3, [pc, #32]	@ (80016dc <_sbrk+0x64>)
 80016ba:	681b      	ldr	r3, [r3, #0]
 80016bc:	60fb      	str	r3, [r7, #12]
 80016be:	4b07      	ldr	r3, [pc, #28]	@ (80016dc <_sbrk+0x64>)
 80016c0:	681a      	ldr	r2, [r3, #0]
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	4413      	add	r3, r2
 80016c6:	4a05      	ldr	r2, [pc, #20]	@ (80016dc <_sbrk+0x64>)
 80016c8:	6013      	str	r3, [r2, #0]
 80016ca:	68fb      	ldr	r3, [r7, #12]
 80016cc:	4618      	mov	r0, r3
 80016ce:	3718      	adds	r7, #24
 80016d0:	46bd      	mov	sp, r7
 80016d2:	bd80      	pop	{r7, pc}
 80016d4:	20020000 	.word	0x20020000
 80016d8:	00000400 	.word	0x00000400
 80016dc:	200007a4 	.word	0x200007a4
 80016e0:	200008f8 	.word	0x200008f8

080016e4 <SystemInit>:
 80016e4:	b480      	push	{r7}
 80016e6:	af00      	add	r7, sp, #0
 80016e8:	4b06      	ldr	r3, [pc, #24]	@ (8001704 <SystemInit+0x20>)
 80016ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80016ee:	4a05      	ldr	r2, [pc, #20]	@ (8001704 <SystemInit+0x20>)
 80016f0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80016f4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80016f8:	bf00      	nop
 80016fa:	46bd      	mov	sp, r7
 80016fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001700:	4770      	bx	lr
 8001702:	bf00      	nop
 8001704:	e000ed00 	.word	0xe000ed00

08001708 <WATER_Read>:

#include "water.h"

uint16_t WATER_Read (void)
{
 8001708:	b580      	push	{r7, lr}
 800170a:	b086      	sub	sp, #24
 800170c:	af00      	add	r7, sp, #0
    ADC_ChannelConfTypeDef sConfig = {0};
 800170e:	1d3b      	adds	r3, r7, #4
 8001710:	2200      	movs	r2, #0
 8001712:	601a      	str	r2, [r3, #0]
 8001714:	605a      	str	r2, [r3, #4]
 8001716:	609a      	str	r2, [r3, #8]
 8001718:	60da      	str	r2, [r3, #12]

    // ADC1을 PA4 (Water)용 채널 4로 설정
    sConfig.Channel = ADC_CHANNEL_4;
 800171a:	2304      	movs	r3, #4
 800171c:	607b      	str	r3, [r7, #4]
    sConfig.Rank = 1;
 800171e:	2301      	movs	r3, #1
 8001720:	60bb      	str	r3, [r7, #8]
    sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001722:	2300      	movs	r3, #0
 8001724:	60fb      	str	r3, [r7, #12]
    HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8001726:	1d3b      	adds	r3, r7, #4
 8001728:	4619      	mov	r1, r3
 800172a:	480e      	ldr	r0, [pc, #56]	@ (8001764 <WATER_Read+0x5c>)
 800172c:	f000 faac 	bl	8001c88 <HAL_ADC_ConfigChannel>

    // ADC 변환 시작
    HAL_ADC_Start(&hadc1);
 8001730:	480c      	ldr	r0, [pc, #48]	@ (8001764 <WATER_Read+0x5c>)
 8001732:	f000 f929 	bl	8001988 <HAL_ADC_Start>

    // 변환 완료 대기
    if (HAL_ADC_PollForConversion(&hadc1, 100) == HAL_OK)
 8001736:	2164      	movs	r1, #100	@ 0x64
 8001738:	480a      	ldr	r0, [pc, #40]	@ (8001764 <WATER_Read+0x5c>)
 800173a:	f000 fa0c 	bl	8001b56 <HAL_ADC_PollForConversion>
 800173e:	4603      	mov	r3, r0
 8001740:	2b00      	cmp	r3, #0
 8001742:	d109      	bne.n	8001758 <WATER_Read+0x50>
    {
        // 변환 값 읽기
        uint16_t waterAdc = HAL_ADC_GetValue(&hadc1);
 8001744:	4807      	ldr	r0, [pc, #28]	@ (8001764 <WATER_Read+0x5c>)
 8001746:	f000 fa91 	bl	8001c6c <HAL_ADC_GetValue>
 800174a:	4603      	mov	r3, r0
 800174c:	82fb      	strh	r3, [r7, #22]
        HAL_ADC_Stop(&hadc1);  // ADC 변환 정지
 800174e:	4805      	ldr	r0, [pc, #20]	@ (8001764 <WATER_Read+0x5c>)
 8001750:	f000 f9ce 	bl	8001af0 <HAL_ADC_Stop>
        return waterAdc;
 8001754:	8afb      	ldrh	r3, [r7, #22]
 8001756:	e000      	b.n	800175a <WATER_Read+0x52>
    }
    return 0;
 8001758:	2300      	movs	r3, #0
}
 800175a:	4618      	mov	r0, r3
 800175c:	3718      	adds	r7, #24
 800175e:	46bd      	mov	sp, r7
 8001760:	bd80      	pop	{r7, pc}
 8001762:	bf00      	nop
 8001764:	20000554 	.word	0x20000554

08001768 <WATER_readData>:

WATER_Typedef WATER_readData()
{
 8001768:	b580      	push	{r7, lr}
 800176a:	b082      	sub	sp, #8
 800176c:	af00      	add	r7, sp, #0
	WATER_Typedef water;
	water.water_value = WATER_Read();
 800176e:	f7ff ffcb 	bl	8001708 <WATER_Read>
 8001772:	4603      	mov	r3, r0
 8001774:	80bb      	strh	r3, [r7, #4]
	return water;
 8001776:	88bb      	ldrh	r3, [r7, #4]
}
 8001778:	4618      	mov	r0, r3
 800177a:	3708      	adds	r7, #8
 800177c:	46bd      	mov	sp, r7
 800177e:	bd80      	pop	{r7, pc}

08001780 <Reset_Handler>:
 8001780:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80017b8 <LoopFillZerobss+0xe>
 8001784:	f7ff ffae 	bl	80016e4 <SystemInit>
 8001788:	480c      	ldr	r0, [pc, #48]	@ (80017bc <LoopFillZerobss+0x12>)
 800178a:	490d      	ldr	r1, [pc, #52]	@ (80017c0 <LoopFillZerobss+0x16>)
 800178c:	4a0d      	ldr	r2, [pc, #52]	@ (80017c4 <LoopFillZerobss+0x1a>)
 800178e:	2300      	movs	r3, #0
 8001790:	e002      	b.n	8001798 <LoopCopyDataInit>

08001792 <CopyDataInit>:
 8001792:	58d4      	ldr	r4, [r2, r3]
 8001794:	50c4      	str	r4, [r0, r3]
 8001796:	3304      	adds	r3, #4

08001798 <LoopCopyDataInit>:
 8001798:	18c4      	adds	r4, r0, r3
 800179a:	428c      	cmp	r4, r1
 800179c:	d3f9      	bcc.n	8001792 <CopyDataInit>
 800179e:	4a0a      	ldr	r2, [pc, #40]	@ (80017c8 <LoopFillZerobss+0x1e>)
 80017a0:	4c0a      	ldr	r4, [pc, #40]	@ (80017cc <LoopFillZerobss+0x22>)
 80017a2:	2300      	movs	r3, #0
 80017a4:	e001      	b.n	80017aa <LoopFillZerobss>

080017a6 <FillZerobss>:
 80017a6:	6013      	str	r3, [r2, #0]
 80017a8:	3204      	adds	r2, #4

080017aa <LoopFillZerobss>:
 80017aa:	42a2      	cmp	r2, r4
 80017ac:	d3fb      	bcc.n	80017a6 <FillZerobss>
 80017ae:	f003 fd3b 	bl	8005228 <__libc_init_array>
 80017b2:	f7ff f927 	bl	8000a04 <main>
 80017b6:	4770      	bx	lr
 80017b8:	20020000 	.word	0x20020000
 80017bc:	20000000 	.word	0x20000000
 80017c0:	20000068 	.word	0x20000068
 80017c4:	080061bc 	.word	0x080061bc
 80017c8:	20000068 	.word	0x20000068
 80017cc:	200008f8 	.word	0x200008f8

080017d0 <ADC_IRQHandler>:
 80017d0:	e7fe      	b.n	80017d0 <ADC_IRQHandler>
	...

080017d4 <HAL_Init>:
 80017d4:	b580      	push	{r7, lr}
 80017d6:	af00      	add	r7, sp, #0
 80017d8:	4b0e      	ldr	r3, [pc, #56]	@ (8001814 <HAL_Init+0x40>)
 80017da:	681b      	ldr	r3, [r3, #0]
 80017dc:	4a0d      	ldr	r2, [pc, #52]	@ (8001814 <HAL_Init+0x40>)
 80017de:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80017e2:	6013      	str	r3, [r2, #0]
 80017e4:	4b0b      	ldr	r3, [pc, #44]	@ (8001814 <HAL_Init+0x40>)
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	4a0a      	ldr	r2, [pc, #40]	@ (8001814 <HAL_Init+0x40>)
 80017ea:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80017ee:	6013      	str	r3, [r2, #0]
 80017f0:	4b08      	ldr	r3, [pc, #32]	@ (8001814 <HAL_Init+0x40>)
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	4a07      	ldr	r2, [pc, #28]	@ (8001814 <HAL_Init+0x40>)
 80017f6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80017fa:	6013      	str	r3, [r2, #0]
 80017fc:	2003      	movs	r0, #3
 80017fe:	f000 fd41 	bl	8002284 <HAL_NVIC_SetPriorityGrouping>
 8001802:	2000      	movs	r0, #0
 8001804:	f000 f808 	bl	8001818 <HAL_InitTick>
 8001808:	f7ff fce6 	bl	80011d8 <HAL_MspInit>
 800180c:	2300      	movs	r3, #0
 800180e:	4618      	mov	r0, r3
 8001810:	bd80      	pop	{r7, pc}
 8001812:	bf00      	nop
 8001814:	40023c00 	.word	0x40023c00

08001818 <HAL_InitTick>:
 8001818:	b580      	push	{r7, lr}
 800181a:	b082      	sub	sp, #8
 800181c:	af00      	add	r7, sp, #0
 800181e:	6078      	str	r0, [r7, #4]
 8001820:	4b12      	ldr	r3, [pc, #72]	@ (800186c <HAL_InitTick+0x54>)
 8001822:	681a      	ldr	r2, [r3, #0]
 8001824:	4b12      	ldr	r3, [pc, #72]	@ (8001870 <HAL_InitTick+0x58>)
 8001826:	781b      	ldrb	r3, [r3, #0]
 8001828:	4619      	mov	r1, r3
 800182a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800182e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001832:	fbb2 f3f3 	udiv	r3, r2, r3
 8001836:	4618      	mov	r0, r3
 8001838:	f000 fd59 	bl	80022ee <HAL_SYSTICK_Config>
 800183c:	4603      	mov	r3, r0
 800183e:	2b00      	cmp	r3, #0
 8001840:	d001      	beq.n	8001846 <HAL_InitTick+0x2e>
 8001842:	2301      	movs	r3, #1
 8001844:	e00e      	b.n	8001864 <HAL_InitTick+0x4c>
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	2b0f      	cmp	r3, #15
 800184a:	d80a      	bhi.n	8001862 <HAL_InitTick+0x4a>
 800184c:	2200      	movs	r2, #0
 800184e:	6879      	ldr	r1, [r7, #4]
 8001850:	f04f 30ff 	mov.w	r0, #4294967295
 8001854:	f000 fd21 	bl	800229a <HAL_NVIC_SetPriority>
 8001858:	4a06      	ldr	r2, [pc, #24]	@ (8001874 <HAL_InitTick+0x5c>)
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	6013      	str	r3, [r2, #0]
 800185e:	2300      	movs	r3, #0
 8001860:	e000      	b.n	8001864 <HAL_InitTick+0x4c>
 8001862:	2301      	movs	r3, #1
 8001864:	4618      	mov	r0, r3
 8001866:	3708      	adds	r7, #8
 8001868:	46bd      	mov	sp, r7
 800186a:	bd80      	pop	{r7, pc}
 800186c:	20000000 	.word	0x20000000
 8001870:	20000008 	.word	0x20000008
 8001874:	20000004 	.word	0x20000004

08001878 <HAL_IncTick>:
 8001878:	b480      	push	{r7}
 800187a:	af00      	add	r7, sp, #0
 800187c:	4b06      	ldr	r3, [pc, #24]	@ (8001898 <HAL_IncTick+0x20>)
 800187e:	781b      	ldrb	r3, [r3, #0]
 8001880:	461a      	mov	r2, r3
 8001882:	4b06      	ldr	r3, [pc, #24]	@ (800189c <HAL_IncTick+0x24>)
 8001884:	681b      	ldr	r3, [r3, #0]
 8001886:	4413      	add	r3, r2
 8001888:	4a04      	ldr	r2, [pc, #16]	@ (800189c <HAL_IncTick+0x24>)
 800188a:	6013      	str	r3, [r2, #0]
 800188c:	bf00      	nop
 800188e:	46bd      	mov	sp, r7
 8001890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001894:	4770      	bx	lr
 8001896:	bf00      	nop
 8001898:	20000008 	.word	0x20000008
 800189c:	200007a8 	.word	0x200007a8

080018a0 <HAL_GetTick>:
 80018a0:	b480      	push	{r7}
 80018a2:	af00      	add	r7, sp, #0
 80018a4:	4b03      	ldr	r3, [pc, #12]	@ (80018b4 <HAL_GetTick+0x14>)
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	4618      	mov	r0, r3
 80018aa:	46bd      	mov	sp, r7
 80018ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018b0:	4770      	bx	lr
 80018b2:	bf00      	nop
 80018b4:	200007a8 	.word	0x200007a8

080018b8 <HAL_Delay>:
 80018b8:	b580      	push	{r7, lr}
 80018ba:	b084      	sub	sp, #16
 80018bc:	af00      	add	r7, sp, #0
 80018be:	6078      	str	r0, [r7, #4]
 80018c0:	f7ff ffee 	bl	80018a0 <HAL_GetTick>
 80018c4:	60b8      	str	r0, [r7, #8]
 80018c6:	687b      	ldr	r3, [r7, #4]
 80018c8:	60fb      	str	r3, [r7, #12]
 80018ca:	68fb      	ldr	r3, [r7, #12]
 80018cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80018d0:	d005      	beq.n	80018de <HAL_Delay+0x26>
 80018d2:	4b0a      	ldr	r3, [pc, #40]	@ (80018fc <HAL_Delay+0x44>)
 80018d4:	781b      	ldrb	r3, [r3, #0]
 80018d6:	461a      	mov	r2, r3
 80018d8:	68fb      	ldr	r3, [r7, #12]
 80018da:	4413      	add	r3, r2
 80018dc:	60fb      	str	r3, [r7, #12]
 80018de:	bf00      	nop
 80018e0:	f7ff ffde 	bl	80018a0 <HAL_GetTick>
 80018e4:	4602      	mov	r2, r0
 80018e6:	68bb      	ldr	r3, [r7, #8]
 80018e8:	1ad3      	subs	r3, r2, r3
 80018ea:	68fa      	ldr	r2, [r7, #12]
 80018ec:	429a      	cmp	r2, r3
 80018ee:	d8f7      	bhi.n	80018e0 <HAL_Delay+0x28>
 80018f0:	bf00      	nop
 80018f2:	bf00      	nop
 80018f4:	3710      	adds	r7, #16
 80018f6:	46bd      	mov	sp, r7
 80018f8:	bd80      	pop	{r7, pc}
 80018fa:	bf00      	nop
 80018fc:	20000008 	.word	0x20000008

08001900 <HAL_ADC_Init>:
 8001900:	b580      	push	{r7, lr}
 8001902:	b084      	sub	sp, #16
 8001904:	af00      	add	r7, sp, #0
 8001906:	6078      	str	r0, [r7, #4]
 8001908:	2300      	movs	r3, #0
 800190a:	73fb      	strb	r3, [r7, #15]
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	2b00      	cmp	r3, #0
 8001910:	d101      	bne.n	8001916 <HAL_ADC_Init+0x16>
 8001912:	2301      	movs	r3, #1
 8001914:	e033      	b.n	800197e <HAL_ADC_Init+0x7e>
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800191a:	2b00      	cmp	r3, #0
 800191c:	d109      	bne.n	8001932 <HAL_ADC_Init+0x32>
 800191e:	6878      	ldr	r0, [r7, #4]
 8001920:	f7ff fc82 	bl	8001228 <HAL_ADC_MspInit>
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	2200      	movs	r2, #0
 8001928:	645a      	str	r2, [r3, #68]	@ 0x44
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	2200      	movs	r2, #0
 800192e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001936:	f003 0310 	and.w	r3, r3, #16
 800193a:	2b00      	cmp	r3, #0
 800193c:	d118      	bne.n	8001970 <HAL_ADC_Init+0x70>
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001942:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001946:	f023 0302 	bic.w	r3, r3, #2
 800194a:	f043 0202 	orr.w	r2, r3, #2
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	641a      	str	r2, [r3, #64]	@ 0x40
 8001952:	6878      	ldr	r0, [r7, #4]
 8001954:	f000 faca 	bl	8001eec <ADC_Init>
 8001958:	687b      	ldr	r3, [r7, #4]
 800195a:	2200      	movs	r2, #0
 800195c:	645a      	str	r2, [r3, #68]	@ 0x44
 800195e:	687b      	ldr	r3, [r7, #4]
 8001960:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001962:	f023 0303 	bic.w	r3, r3, #3
 8001966:	f043 0201 	orr.w	r2, r3, #1
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	641a      	str	r2, [r3, #64]	@ 0x40
 800196e:	e001      	b.n	8001974 <HAL_ADC_Init+0x74>
 8001970:	2301      	movs	r3, #1
 8001972:	73fb      	strb	r3, [r7, #15]
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	2200      	movs	r2, #0
 8001978:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800197c:	7bfb      	ldrb	r3, [r7, #15]
 800197e:	4618      	mov	r0, r3
 8001980:	3710      	adds	r7, #16
 8001982:	46bd      	mov	sp, r7
 8001984:	bd80      	pop	{r7, pc}
	...

08001988 <HAL_ADC_Start>:
 8001988:	b480      	push	{r7}
 800198a:	b085      	sub	sp, #20
 800198c:	af00      	add	r7, sp, #0
 800198e:	6078      	str	r0, [r7, #4]
 8001990:	2300      	movs	r3, #0
 8001992:	60bb      	str	r3, [r7, #8]
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800199a:	2b01      	cmp	r3, #1
 800199c:	d101      	bne.n	80019a2 <HAL_ADC_Start+0x1a>
 800199e:	2302      	movs	r3, #2
 80019a0:	e097      	b.n	8001ad2 <HAL_ADC_Start+0x14a>
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	2201      	movs	r2, #1
 80019a6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	681b      	ldr	r3, [r3, #0]
 80019ae:	689b      	ldr	r3, [r3, #8]
 80019b0:	f003 0301 	and.w	r3, r3, #1
 80019b4:	2b01      	cmp	r3, #1
 80019b6:	d018      	beq.n	80019ea <HAL_ADC_Start+0x62>
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	681b      	ldr	r3, [r3, #0]
 80019bc:	689a      	ldr	r2, [r3, #8]
 80019be:	687b      	ldr	r3, [r7, #4]
 80019c0:	681b      	ldr	r3, [r3, #0]
 80019c2:	f042 0201 	orr.w	r2, r2, #1
 80019c6:	609a      	str	r2, [r3, #8]
 80019c8:	4b45      	ldr	r3, [pc, #276]	@ (8001ae0 <HAL_ADC_Start+0x158>)
 80019ca:	681b      	ldr	r3, [r3, #0]
 80019cc:	4a45      	ldr	r2, [pc, #276]	@ (8001ae4 <HAL_ADC_Start+0x15c>)
 80019ce:	fba2 2303 	umull	r2, r3, r2, r3
 80019d2:	0c9a      	lsrs	r2, r3, #18
 80019d4:	4613      	mov	r3, r2
 80019d6:	005b      	lsls	r3, r3, #1
 80019d8:	4413      	add	r3, r2
 80019da:	60bb      	str	r3, [r7, #8]
 80019dc:	e002      	b.n	80019e4 <HAL_ADC_Start+0x5c>
 80019de:	68bb      	ldr	r3, [r7, #8]
 80019e0:	3b01      	subs	r3, #1
 80019e2:	60bb      	str	r3, [r7, #8]
 80019e4:	68bb      	ldr	r3, [r7, #8]
 80019e6:	2b00      	cmp	r3, #0
 80019e8:	d1f9      	bne.n	80019de <HAL_ADC_Start+0x56>
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	681b      	ldr	r3, [r3, #0]
 80019ee:	689b      	ldr	r3, [r3, #8]
 80019f0:	f003 0301 	and.w	r3, r3, #1
 80019f4:	2b01      	cmp	r3, #1
 80019f6:	d15f      	bne.n	8001ab8 <HAL_ADC_Start+0x130>
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019fc:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8001a00:	f023 0301 	bic.w	r3, r3, #1
 8001a04:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001a08:	687b      	ldr	r3, [r7, #4]
 8001a0a:	641a      	str	r2, [r3, #64]	@ 0x40
 8001a0c:	687b      	ldr	r3, [r7, #4]
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	685b      	ldr	r3, [r3, #4]
 8001a12:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001a16:	2b00      	cmp	r3, #0
 8001a18:	d007      	beq.n	8001a2a <HAL_ADC_Start+0xa2>
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a1e:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8001a22:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	641a      	str	r2, [r3, #64]	@ 0x40
 8001a2a:	687b      	ldr	r3, [r7, #4]
 8001a2c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a2e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001a32:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001a36:	d106      	bne.n	8001a46 <HAL_ADC_Start+0xbe>
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a3c:	f023 0206 	bic.w	r2, r3, #6
 8001a40:	687b      	ldr	r3, [r7, #4]
 8001a42:	645a      	str	r2, [r3, #68]	@ 0x44
 8001a44:	e002      	b.n	8001a4c <HAL_ADC_Start+0xc4>
 8001a46:	687b      	ldr	r3, [r7, #4]
 8001a48:	2200      	movs	r2, #0
 8001a4a:	645a      	str	r2, [r3, #68]	@ 0x44
 8001a4c:	687b      	ldr	r3, [r7, #4]
 8001a4e:	2200      	movs	r2, #0
 8001a50:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001a54:	4b24      	ldr	r3, [pc, #144]	@ (8001ae8 <HAL_ADC_Start+0x160>)
 8001a56:	60fb      	str	r3, [r7, #12]
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8001a60:	601a      	str	r2, [r3, #0]
 8001a62:	68fb      	ldr	r3, [r7, #12]
 8001a64:	685b      	ldr	r3, [r3, #4]
 8001a66:	f003 031f 	and.w	r3, r3, #31
 8001a6a:	2b00      	cmp	r3, #0
 8001a6c:	d10f      	bne.n	8001a8e <HAL_ADC_Start+0x106>
 8001a6e:	687b      	ldr	r3, [r7, #4]
 8001a70:	681b      	ldr	r3, [r3, #0]
 8001a72:	689b      	ldr	r3, [r3, #8]
 8001a74:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001a78:	2b00      	cmp	r3, #0
 8001a7a:	d129      	bne.n	8001ad0 <HAL_ADC_Start+0x148>
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	681b      	ldr	r3, [r3, #0]
 8001a80:	689a      	ldr	r2, [r3, #8]
 8001a82:	687b      	ldr	r3, [r7, #4]
 8001a84:	681b      	ldr	r3, [r3, #0]
 8001a86:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001a8a:	609a      	str	r2, [r3, #8]
 8001a8c:	e020      	b.n	8001ad0 <HAL_ADC_Start+0x148>
 8001a8e:	687b      	ldr	r3, [r7, #4]
 8001a90:	681b      	ldr	r3, [r3, #0]
 8001a92:	4a16      	ldr	r2, [pc, #88]	@ (8001aec <HAL_ADC_Start+0x164>)
 8001a94:	4293      	cmp	r3, r2
 8001a96:	d11b      	bne.n	8001ad0 <HAL_ADC_Start+0x148>
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	681b      	ldr	r3, [r3, #0]
 8001a9c:	689b      	ldr	r3, [r3, #8]
 8001a9e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001aa2:	2b00      	cmp	r3, #0
 8001aa4:	d114      	bne.n	8001ad0 <HAL_ADC_Start+0x148>
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	689a      	ldr	r2, [r3, #8]
 8001aac:	687b      	ldr	r3, [r7, #4]
 8001aae:	681b      	ldr	r3, [r3, #0]
 8001ab0:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001ab4:	609a      	str	r2, [r3, #8]
 8001ab6:	e00b      	b.n	8001ad0 <HAL_ADC_Start+0x148>
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001abc:	f043 0210 	orr.w	r2, r3, #16
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	641a      	str	r2, [r3, #64]	@ 0x40
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001ac8:	f043 0201 	orr.w	r2, r3, #1
 8001acc:	687b      	ldr	r3, [r7, #4]
 8001ace:	645a      	str	r2, [r3, #68]	@ 0x44
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	4618      	mov	r0, r3
 8001ad4:	3714      	adds	r7, #20
 8001ad6:	46bd      	mov	sp, r7
 8001ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001adc:	4770      	bx	lr
 8001ade:	bf00      	nop
 8001ae0:	20000000 	.word	0x20000000
 8001ae4:	431bde83 	.word	0x431bde83
 8001ae8:	40012300 	.word	0x40012300
 8001aec:	40012000 	.word	0x40012000

08001af0 <HAL_ADC_Stop>:
 8001af0:	b480      	push	{r7}
 8001af2:	b083      	sub	sp, #12
 8001af4:	af00      	add	r7, sp, #0
 8001af6:	6078      	str	r0, [r7, #4]
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001afe:	2b01      	cmp	r3, #1
 8001b00:	d101      	bne.n	8001b06 <HAL_ADC_Stop+0x16>
 8001b02:	2302      	movs	r3, #2
 8001b04:	e021      	b.n	8001b4a <HAL_ADC_Stop+0x5a>
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	2201      	movs	r2, #1
 8001b0a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001b0e:	687b      	ldr	r3, [r7, #4]
 8001b10:	681b      	ldr	r3, [r3, #0]
 8001b12:	689a      	ldr	r2, [r3, #8]
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	681b      	ldr	r3, [r3, #0]
 8001b18:	f022 0201 	bic.w	r2, r2, #1
 8001b1c:	609a      	str	r2, [r3, #8]
 8001b1e:	687b      	ldr	r3, [r7, #4]
 8001b20:	681b      	ldr	r3, [r3, #0]
 8001b22:	689b      	ldr	r3, [r3, #8]
 8001b24:	f003 0301 	and.w	r3, r3, #1
 8001b28:	2b00      	cmp	r3, #0
 8001b2a:	d109      	bne.n	8001b40 <HAL_ADC_Stop+0x50>
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b30:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001b34:	f023 0301 	bic.w	r3, r3, #1
 8001b38:	f043 0201 	orr.w	r2, r3, #1
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	641a      	str	r2, [r3, #64]	@ 0x40
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	2200      	movs	r2, #0
 8001b44:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001b48:	2300      	movs	r3, #0
 8001b4a:	4618      	mov	r0, r3
 8001b4c:	370c      	adds	r7, #12
 8001b4e:	46bd      	mov	sp, r7
 8001b50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b54:	4770      	bx	lr

08001b56 <HAL_ADC_PollForConversion>:
 8001b56:	b580      	push	{r7, lr}
 8001b58:	b084      	sub	sp, #16
 8001b5a:	af00      	add	r7, sp, #0
 8001b5c:	6078      	str	r0, [r7, #4]
 8001b5e:	6039      	str	r1, [r7, #0]
 8001b60:	2300      	movs	r3, #0
 8001b62:	60fb      	str	r3, [r7, #12]
 8001b64:	687b      	ldr	r3, [r7, #4]
 8001b66:	681b      	ldr	r3, [r3, #0]
 8001b68:	689b      	ldr	r3, [r3, #8]
 8001b6a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001b6e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001b72:	d113      	bne.n	8001b9c <HAL_ADC_PollForConversion+0x46>
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	681b      	ldr	r3, [r3, #0]
 8001b78:	689b      	ldr	r3, [r3, #8]
 8001b7a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001b7e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001b82:	d10b      	bne.n	8001b9c <HAL_ADC_PollForConversion+0x46>
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b88:	f043 0220 	orr.w	r2, r3, #32
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	641a      	str	r2, [r3, #64]	@ 0x40
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	2200      	movs	r2, #0
 8001b94:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001b98:	2301      	movs	r3, #1
 8001b9a:	e063      	b.n	8001c64 <HAL_ADC_PollForConversion+0x10e>
 8001b9c:	f7ff fe80 	bl	80018a0 <HAL_GetTick>
 8001ba0:	60f8      	str	r0, [r7, #12]
 8001ba2:	e021      	b.n	8001be8 <HAL_ADC_PollForConversion+0x92>
 8001ba4:	683b      	ldr	r3, [r7, #0]
 8001ba6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001baa:	d01d      	beq.n	8001be8 <HAL_ADC_PollForConversion+0x92>
 8001bac:	683b      	ldr	r3, [r7, #0]
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	d007      	beq.n	8001bc2 <HAL_ADC_PollForConversion+0x6c>
 8001bb2:	f7ff fe75 	bl	80018a0 <HAL_GetTick>
 8001bb6:	4602      	mov	r2, r0
 8001bb8:	68fb      	ldr	r3, [r7, #12]
 8001bba:	1ad3      	subs	r3, r2, r3
 8001bbc:	683a      	ldr	r2, [r7, #0]
 8001bbe:	429a      	cmp	r2, r3
 8001bc0:	d212      	bcs.n	8001be8 <HAL_ADC_PollForConversion+0x92>
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	681b      	ldr	r3, [r3, #0]
 8001bc6:	681b      	ldr	r3, [r3, #0]
 8001bc8:	f003 0302 	and.w	r3, r3, #2
 8001bcc:	2b02      	cmp	r3, #2
 8001bce:	d00b      	beq.n	8001be8 <HAL_ADC_PollForConversion+0x92>
 8001bd0:	687b      	ldr	r3, [r7, #4]
 8001bd2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bd4:	f043 0204 	orr.w	r2, r3, #4
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	641a      	str	r2, [r3, #64]	@ 0x40
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	2200      	movs	r2, #0
 8001be0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001be4:	2303      	movs	r3, #3
 8001be6:	e03d      	b.n	8001c64 <HAL_ADC_PollForConversion+0x10e>
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	681b      	ldr	r3, [r3, #0]
 8001bec:	681b      	ldr	r3, [r3, #0]
 8001bee:	f003 0302 	and.w	r3, r3, #2
 8001bf2:	2b02      	cmp	r3, #2
 8001bf4:	d1d6      	bne.n	8001ba4 <HAL_ADC_PollForConversion+0x4e>
 8001bf6:	687b      	ldr	r3, [r7, #4]
 8001bf8:	681b      	ldr	r3, [r3, #0]
 8001bfa:	f06f 0212 	mvn.w	r2, #18
 8001bfe:	601a      	str	r2, [r3, #0]
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c04:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	641a      	str	r2, [r3, #64]	@ 0x40
 8001c0c:	687b      	ldr	r3, [r7, #4]
 8001c0e:	681b      	ldr	r3, [r3, #0]
 8001c10:	689b      	ldr	r3, [r3, #8]
 8001c12:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001c16:	2b00      	cmp	r3, #0
 8001c18:	d123      	bne.n	8001c62 <HAL_ADC_PollForConversion+0x10c>
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	7e1b      	ldrb	r3, [r3, #24]
 8001c1e:	2b00      	cmp	r3, #0
 8001c20:	d11f      	bne.n	8001c62 <HAL_ADC_PollForConversion+0x10c>
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	681b      	ldr	r3, [r3, #0]
 8001c26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001c28:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8001c2c:	2b00      	cmp	r3, #0
 8001c2e:	d006      	beq.n	8001c3e <HAL_ADC_PollForConversion+0xe8>
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	689b      	ldr	r3, [r3, #8]
 8001c36:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001c3a:	2b00      	cmp	r3, #0
 8001c3c:	d111      	bne.n	8001c62 <HAL_ADC_PollForConversion+0x10c>
 8001c3e:	687b      	ldr	r3, [r7, #4]
 8001c40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c42:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	641a      	str	r2, [r3, #64]	@ 0x40
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c4e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001c52:	2b00      	cmp	r3, #0
 8001c54:	d105      	bne.n	8001c62 <HAL_ADC_PollForConversion+0x10c>
 8001c56:	687b      	ldr	r3, [r7, #4]
 8001c58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c5a:	f043 0201 	orr.w	r2, r3, #1
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	641a      	str	r2, [r3, #64]	@ 0x40
 8001c62:	2300      	movs	r3, #0
 8001c64:	4618      	mov	r0, r3
 8001c66:	3710      	adds	r7, #16
 8001c68:	46bd      	mov	sp, r7
 8001c6a:	bd80      	pop	{r7, pc}

08001c6c <HAL_ADC_GetValue>:
 8001c6c:	b480      	push	{r7}
 8001c6e:	b083      	sub	sp, #12
 8001c70:	af00      	add	r7, sp, #0
 8001c72:	6078      	str	r0, [r7, #4]
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001c7a:	4618      	mov	r0, r3
 8001c7c:	370c      	adds	r7, #12
 8001c7e:	46bd      	mov	sp, r7
 8001c80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c84:	4770      	bx	lr
	...

08001c88 <HAL_ADC_ConfigChannel>:
 8001c88:	b480      	push	{r7}
 8001c8a:	b085      	sub	sp, #20
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	6078      	str	r0, [r7, #4]
 8001c90:	6039      	str	r1, [r7, #0]
 8001c92:	2300      	movs	r3, #0
 8001c94:	60bb      	str	r3, [r7, #8]
 8001c96:	687b      	ldr	r3, [r7, #4]
 8001c98:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001c9c:	2b01      	cmp	r3, #1
 8001c9e:	d101      	bne.n	8001ca4 <HAL_ADC_ConfigChannel+0x1c>
 8001ca0:	2302      	movs	r3, #2
 8001ca2:	e113      	b.n	8001ecc <HAL_ADC_ConfigChannel+0x244>
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	2201      	movs	r2, #1
 8001ca8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001cac:	683b      	ldr	r3, [r7, #0]
 8001cae:	681b      	ldr	r3, [r3, #0]
 8001cb0:	2b09      	cmp	r3, #9
 8001cb2:	d925      	bls.n	8001d00 <HAL_ADC_ConfigChannel+0x78>
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	681b      	ldr	r3, [r3, #0]
 8001cb8:	68d9      	ldr	r1, [r3, #12]
 8001cba:	683b      	ldr	r3, [r7, #0]
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	b29b      	uxth	r3, r3
 8001cc0:	461a      	mov	r2, r3
 8001cc2:	4613      	mov	r3, r2
 8001cc4:	005b      	lsls	r3, r3, #1
 8001cc6:	4413      	add	r3, r2
 8001cc8:	3b1e      	subs	r3, #30
 8001cca:	2207      	movs	r2, #7
 8001ccc:	fa02 f303 	lsl.w	r3, r2, r3
 8001cd0:	43da      	mvns	r2, r3
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	681b      	ldr	r3, [r3, #0]
 8001cd6:	400a      	ands	r2, r1
 8001cd8:	60da      	str	r2, [r3, #12]
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	68d9      	ldr	r1, [r3, #12]
 8001ce0:	683b      	ldr	r3, [r7, #0]
 8001ce2:	689a      	ldr	r2, [r3, #8]
 8001ce4:	683b      	ldr	r3, [r7, #0]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	b29b      	uxth	r3, r3
 8001cea:	4618      	mov	r0, r3
 8001cec:	4603      	mov	r3, r0
 8001cee:	005b      	lsls	r3, r3, #1
 8001cf0:	4403      	add	r3, r0
 8001cf2:	3b1e      	subs	r3, #30
 8001cf4:	409a      	lsls	r2, r3
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	430a      	orrs	r2, r1
 8001cfc:	60da      	str	r2, [r3, #12]
 8001cfe:	e022      	b.n	8001d46 <HAL_ADC_ConfigChannel+0xbe>
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	681b      	ldr	r3, [r3, #0]
 8001d04:	6919      	ldr	r1, [r3, #16]
 8001d06:	683b      	ldr	r3, [r7, #0]
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	b29b      	uxth	r3, r3
 8001d0c:	461a      	mov	r2, r3
 8001d0e:	4613      	mov	r3, r2
 8001d10:	005b      	lsls	r3, r3, #1
 8001d12:	4413      	add	r3, r2
 8001d14:	2207      	movs	r2, #7
 8001d16:	fa02 f303 	lsl.w	r3, r2, r3
 8001d1a:	43da      	mvns	r2, r3
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	400a      	ands	r2, r1
 8001d22:	611a      	str	r2, [r3, #16]
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	6919      	ldr	r1, [r3, #16]
 8001d2a:	683b      	ldr	r3, [r7, #0]
 8001d2c:	689a      	ldr	r2, [r3, #8]
 8001d2e:	683b      	ldr	r3, [r7, #0]
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	b29b      	uxth	r3, r3
 8001d34:	4618      	mov	r0, r3
 8001d36:	4603      	mov	r3, r0
 8001d38:	005b      	lsls	r3, r3, #1
 8001d3a:	4403      	add	r3, r0
 8001d3c:	409a      	lsls	r2, r3
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	681b      	ldr	r3, [r3, #0]
 8001d42:	430a      	orrs	r2, r1
 8001d44:	611a      	str	r2, [r3, #16]
 8001d46:	683b      	ldr	r3, [r7, #0]
 8001d48:	685b      	ldr	r3, [r3, #4]
 8001d4a:	2b06      	cmp	r3, #6
 8001d4c:	d824      	bhi.n	8001d98 <HAL_ADC_ConfigChannel+0x110>
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8001d54:	683b      	ldr	r3, [r7, #0]
 8001d56:	685a      	ldr	r2, [r3, #4]
 8001d58:	4613      	mov	r3, r2
 8001d5a:	009b      	lsls	r3, r3, #2
 8001d5c:	4413      	add	r3, r2
 8001d5e:	3b05      	subs	r3, #5
 8001d60:	221f      	movs	r2, #31
 8001d62:	fa02 f303 	lsl.w	r3, r2, r3
 8001d66:	43da      	mvns	r2, r3
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	400a      	ands	r2, r1
 8001d6e:	635a      	str	r2, [r3, #52]	@ 0x34
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8001d76:	683b      	ldr	r3, [r7, #0]
 8001d78:	681b      	ldr	r3, [r3, #0]
 8001d7a:	b29b      	uxth	r3, r3
 8001d7c:	4618      	mov	r0, r3
 8001d7e:	683b      	ldr	r3, [r7, #0]
 8001d80:	685a      	ldr	r2, [r3, #4]
 8001d82:	4613      	mov	r3, r2
 8001d84:	009b      	lsls	r3, r3, #2
 8001d86:	4413      	add	r3, r2
 8001d88:	3b05      	subs	r3, #5
 8001d8a:	fa00 f203 	lsl.w	r2, r0, r3
 8001d8e:	687b      	ldr	r3, [r7, #4]
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	430a      	orrs	r2, r1
 8001d94:	635a      	str	r2, [r3, #52]	@ 0x34
 8001d96:	e04c      	b.n	8001e32 <HAL_ADC_ConfigChannel+0x1aa>
 8001d98:	683b      	ldr	r3, [r7, #0]
 8001d9a:	685b      	ldr	r3, [r3, #4]
 8001d9c:	2b0c      	cmp	r3, #12
 8001d9e:	d824      	bhi.n	8001dea <HAL_ADC_ConfigChannel+0x162>
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001da6:	683b      	ldr	r3, [r7, #0]
 8001da8:	685a      	ldr	r2, [r3, #4]
 8001daa:	4613      	mov	r3, r2
 8001dac:	009b      	lsls	r3, r3, #2
 8001dae:	4413      	add	r3, r2
 8001db0:	3b23      	subs	r3, #35	@ 0x23
 8001db2:	221f      	movs	r2, #31
 8001db4:	fa02 f303 	lsl.w	r3, r2, r3
 8001db8:	43da      	mvns	r2, r3
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	681b      	ldr	r3, [r3, #0]
 8001dbe:	400a      	ands	r2, r1
 8001dc0:	631a      	str	r2, [r3, #48]	@ 0x30
 8001dc2:	687b      	ldr	r3, [r7, #4]
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001dc8:	683b      	ldr	r3, [r7, #0]
 8001dca:	681b      	ldr	r3, [r3, #0]
 8001dcc:	b29b      	uxth	r3, r3
 8001dce:	4618      	mov	r0, r3
 8001dd0:	683b      	ldr	r3, [r7, #0]
 8001dd2:	685a      	ldr	r2, [r3, #4]
 8001dd4:	4613      	mov	r3, r2
 8001dd6:	009b      	lsls	r3, r3, #2
 8001dd8:	4413      	add	r3, r2
 8001dda:	3b23      	subs	r3, #35	@ 0x23
 8001ddc:	fa00 f203 	lsl.w	r2, r0, r3
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	681b      	ldr	r3, [r3, #0]
 8001de4:	430a      	orrs	r2, r1
 8001de6:	631a      	str	r2, [r3, #48]	@ 0x30
 8001de8:	e023      	b.n	8001e32 <HAL_ADC_ConfigChannel+0x1aa>
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	681b      	ldr	r3, [r3, #0]
 8001dee:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001df0:	683b      	ldr	r3, [r7, #0]
 8001df2:	685a      	ldr	r2, [r3, #4]
 8001df4:	4613      	mov	r3, r2
 8001df6:	009b      	lsls	r3, r3, #2
 8001df8:	4413      	add	r3, r2
 8001dfa:	3b41      	subs	r3, #65	@ 0x41
 8001dfc:	221f      	movs	r2, #31
 8001dfe:	fa02 f303 	lsl.w	r3, r2, r3
 8001e02:	43da      	mvns	r2, r3
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	400a      	ands	r2, r1
 8001e0a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001e0c:	687b      	ldr	r3, [r7, #4]
 8001e0e:	681b      	ldr	r3, [r3, #0]
 8001e10:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001e12:	683b      	ldr	r3, [r7, #0]
 8001e14:	681b      	ldr	r3, [r3, #0]
 8001e16:	b29b      	uxth	r3, r3
 8001e18:	4618      	mov	r0, r3
 8001e1a:	683b      	ldr	r3, [r7, #0]
 8001e1c:	685a      	ldr	r2, [r3, #4]
 8001e1e:	4613      	mov	r3, r2
 8001e20:	009b      	lsls	r3, r3, #2
 8001e22:	4413      	add	r3, r2
 8001e24:	3b41      	subs	r3, #65	@ 0x41
 8001e26:	fa00 f203 	lsl.w	r2, r0, r3
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	430a      	orrs	r2, r1
 8001e30:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001e32:	4b29      	ldr	r3, [pc, #164]	@ (8001ed8 <HAL_ADC_ConfigChannel+0x250>)
 8001e34:	60fb      	str	r3, [r7, #12]
 8001e36:	687b      	ldr	r3, [r7, #4]
 8001e38:	681b      	ldr	r3, [r3, #0]
 8001e3a:	4a28      	ldr	r2, [pc, #160]	@ (8001edc <HAL_ADC_ConfigChannel+0x254>)
 8001e3c:	4293      	cmp	r3, r2
 8001e3e:	d10f      	bne.n	8001e60 <HAL_ADC_ConfigChannel+0x1d8>
 8001e40:	683b      	ldr	r3, [r7, #0]
 8001e42:	681b      	ldr	r3, [r3, #0]
 8001e44:	2b12      	cmp	r3, #18
 8001e46:	d10b      	bne.n	8001e60 <HAL_ADC_ConfigChannel+0x1d8>
 8001e48:	68fb      	ldr	r3, [r7, #12]
 8001e4a:	685b      	ldr	r3, [r3, #4]
 8001e4c:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8001e50:	68fb      	ldr	r3, [r7, #12]
 8001e52:	605a      	str	r2, [r3, #4]
 8001e54:	68fb      	ldr	r3, [r7, #12]
 8001e56:	685b      	ldr	r3, [r3, #4]
 8001e58:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8001e5c:	68fb      	ldr	r3, [r7, #12]
 8001e5e:	605a      	str	r2, [r3, #4]
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	681b      	ldr	r3, [r3, #0]
 8001e64:	4a1d      	ldr	r2, [pc, #116]	@ (8001edc <HAL_ADC_ConfigChannel+0x254>)
 8001e66:	4293      	cmp	r3, r2
 8001e68:	d12b      	bne.n	8001ec2 <HAL_ADC_ConfigChannel+0x23a>
 8001e6a:	683b      	ldr	r3, [r7, #0]
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	4a1c      	ldr	r2, [pc, #112]	@ (8001ee0 <HAL_ADC_ConfigChannel+0x258>)
 8001e70:	4293      	cmp	r3, r2
 8001e72:	d003      	beq.n	8001e7c <HAL_ADC_ConfigChannel+0x1f4>
 8001e74:	683b      	ldr	r3, [r7, #0]
 8001e76:	681b      	ldr	r3, [r3, #0]
 8001e78:	2b11      	cmp	r3, #17
 8001e7a:	d122      	bne.n	8001ec2 <HAL_ADC_ConfigChannel+0x23a>
 8001e7c:	68fb      	ldr	r3, [r7, #12]
 8001e7e:	685b      	ldr	r3, [r3, #4]
 8001e80:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8001e84:	68fb      	ldr	r3, [r7, #12]
 8001e86:	605a      	str	r2, [r3, #4]
 8001e88:	68fb      	ldr	r3, [r7, #12]
 8001e8a:	685b      	ldr	r3, [r3, #4]
 8001e8c:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 8001e90:	68fb      	ldr	r3, [r7, #12]
 8001e92:	605a      	str	r2, [r3, #4]
 8001e94:	683b      	ldr	r3, [r7, #0]
 8001e96:	681b      	ldr	r3, [r3, #0]
 8001e98:	4a11      	ldr	r2, [pc, #68]	@ (8001ee0 <HAL_ADC_ConfigChannel+0x258>)
 8001e9a:	4293      	cmp	r3, r2
 8001e9c:	d111      	bne.n	8001ec2 <HAL_ADC_ConfigChannel+0x23a>
 8001e9e:	4b11      	ldr	r3, [pc, #68]	@ (8001ee4 <HAL_ADC_ConfigChannel+0x25c>)
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	4a11      	ldr	r2, [pc, #68]	@ (8001ee8 <HAL_ADC_ConfigChannel+0x260>)
 8001ea4:	fba2 2303 	umull	r2, r3, r2, r3
 8001ea8:	0c9a      	lsrs	r2, r3, #18
 8001eaa:	4613      	mov	r3, r2
 8001eac:	009b      	lsls	r3, r3, #2
 8001eae:	4413      	add	r3, r2
 8001eb0:	005b      	lsls	r3, r3, #1
 8001eb2:	60bb      	str	r3, [r7, #8]
 8001eb4:	e002      	b.n	8001ebc <HAL_ADC_ConfigChannel+0x234>
 8001eb6:	68bb      	ldr	r3, [r7, #8]
 8001eb8:	3b01      	subs	r3, #1
 8001eba:	60bb      	str	r3, [r7, #8]
 8001ebc:	68bb      	ldr	r3, [r7, #8]
 8001ebe:	2b00      	cmp	r3, #0
 8001ec0:	d1f9      	bne.n	8001eb6 <HAL_ADC_ConfigChannel+0x22e>
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	2200      	movs	r2, #0
 8001ec6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001eca:	2300      	movs	r3, #0
 8001ecc:	4618      	mov	r0, r3
 8001ece:	3714      	adds	r7, #20
 8001ed0:	46bd      	mov	sp, r7
 8001ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ed6:	4770      	bx	lr
 8001ed8:	40012300 	.word	0x40012300
 8001edc:	40012000 	.word	0x40012000
 8001ee0:	10000012 	.word	0x10000012
 8001ee4:	20000000 	.word	0x20000000
 8001ee8:	431bde83 	.word	0x431bde83

08001eec <ADC_Init>:
 8001eec:	b480      	push	{r7}
 8001eee:	b085      	sub	sp, #20
 8001ef0:	af00      	add	r7, sp, #0
 8001ef2:	6078      	str	r0, [r7, #4]
 8001ef4:	4b79      	ldr	r3, [pc, #484]	@ (80020dc <ADC_Init+0x1f0>)
 8001ef6:	60fb      	str	r3, [r7, #12]
 8001ef8:	68fb      	ldr	r3, [r7, #12]
 8001efa:	685b      	ldr	r3, [r3, #4]
 8001efc:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8001f00:	68fb      	ldr	r3, [r7, #12]
 8001f02:	605a      	str	r2, [r3, #4]
 8001f04:	68fb      	ldr	r3, [r7, #12]
 8001f06:	685a      	ldr	r2, [r3, #4]
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	685b      	ldr	r3, [r3, #4]
 8001f0c:	431a      	orrs	r2, r3
 8001f0e:	68fb      	ldr	r3, [r7, #12]
 8001f10:	605a      	str	r2, [r3, #4]
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	681b      	ldr	r3, [r3, #0]
 8001f16:	685a      	ldr	r2, [r3, #4]
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	681b      	ldr	r3, [r3, #0]
 8001f1c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8001f20:	605a      	str	r2, [r3, #4]
 8001f22:	687b      	ldr	r3, [r7, #4]
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	6859      	ldr	r1, [r3, #4]
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	691b      	ldr	r3, [r3, #16]
 8001f2c:	021a      	lsls	r2, r3, #8
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	681b      	ldr	r3, [r3, #0]
 8001f32:	430a      	orrs	r2, r1
 8001f34:	605a      	str	r2, [r3, #4]
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	681b      	ldr	r3, [r3, #0]
 8001f3a:	685a      	ldr	r2, [r3, #4]
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8001f44:	605a      	str	r2, [r3, #4]
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	681b      	ldr	r3, [r3, #0]
 8001f4a:	6859      	ldr	r1, [r3, #4]
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	689a      	ldr	r2, [r3, #8]
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	430a      	orrs	r2, r1
 8001f56:	605a      	str	r2, [r3, #4]
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	681b      	ldr	r3, [r3, #0]
 8001f5c:	689a      	ldr	r2, [r3, #8]
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001f66:	609a      	str	r2, [r3, #8]
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	6899      	ldr	r1, [r3, #8]
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	68da      	ldr	r2, [r3, #12]
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	430a      	orrs	r2, r1
 8001f78:	609a      	str	r2, [r3, #8]
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001f7e:	4a58      	ldr	r2, [pc, #352]	@ (80020e0 <ADC_Init+0x1f4>)
 8001f80:	4293      	cmp	r3, r2
 8001f82:	d022      	beq.n	8001fca <ADC_Init+0xde>
 8001f84:	687b      	ldr	r3, [r7, #4]
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	689a      	ldr	r2, [r3, #8]
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8001f92:	609a      	str	r2, [r3, #8]
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	6899      	ldr	r1, [r3, #8]
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	430a      	orrs	r2, r1
 8001fa4:	609a      	str	r2, [r3, #8]
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	689a      	ldr	r2, [r3, #8]
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8001fb4:	609a      	str	r2, [r3, #8]
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	6899      	ldr	r1, [r3, #8]
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	681b      	ldr	r3, [r3, #0]
 8001fc4:	430a      	orrs	r2, r1
 8001fc6:	609a      	str	r2, [r3, #8]
 8001fc8:	e00f      	b.n	8001fea <ADC_Init+0xfe>
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	689a      	ldr	r2, [r3, #8]
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8001fd8:	609a      	str	r2, [r3, #8]
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	689a      	ldr	r2, [r3, #8]
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	681b      	ldr	r3, [r3, #0]
 8001fe4:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8001fe8:	609a      	str	r2, [r3, #8]
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	681b      	ldr	r3, [r3, #0]
 8001fee:	689a      	ldr	r2, [r3, #8]
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	f022 0202 	bic.w	r2, r2, #2
 8001ff8:	609a      	str	r2, [r3, #8]
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	681b      	ldr	r3, [r3, #0]
 8001ffe:	6899      	ldr	r1, [r3, #8]
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	7e1b      	ldrb	r3, [r3, #24]
 8002004:	005a      	lsls	r2, r3, #1
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	430a      	orrs	r2, r1
 800200c:	609a      	str	r2, [r3, #8]
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002014:	2b00      	cmp	r3, #0
 8002016:	d01b      	beq.n	8002050 <ADC_Init+0x164>
 8002018:	687b      	ldr	r3, [r7, #4]
 800201a:	681b      	ldr	r3, [r3, #0]
 800201c:	685a      	ldr	r2, [r3, #4]
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8002026:	605a      	str	r2, [r3, #4]
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	681b      	ldr	r3, [r3, #0]
 800202c:	685a      	ldr	r2, [r3, #4]
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8002036:	605a      	str	r2, [r3, #4]
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	6859      	ldr	r1, [r3, #4]
 800203e:	687b      	ldr	r3, [r7, #4]
 8002040:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002042:	3b01      	subs	r3, #1
 8002044:	035a      	lsls	r2, r3, #13
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	430a      	orrs	r2, r1
 800204c:	605a      	str	r2, [r3, #4]
 800204e:	e007      	b.n	8002060 <ADC_Init+0x174>
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	681b      	ldr	r3, [r3, #0]
 8002054:	685a      	ldr	r2, [r3, #4]
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800205e:	605a      	str	r2, [r3, #4]
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800206e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002070:	687b      	ldr	r3, [r7, #4]
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	69db      	ldr	r3, [r3, #28]
 800207a:	3b01      	subs	r3, #1
 800207c:	051a      	lsls	r2, r3, #20
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	430a      	orrs	r2, r1
 8002084:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	689a      	ldr	r2, [r3, #8]
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	681b      	ldr	r3, [r3, #0]
 8002090:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8002094:	609a      	str	r2, [r3, #8]
 8002096:	687b      	ldr	r3, [r7, #4]
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	6899      	ldr	r1, [r3, #8]
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80020a2:	025a      	lsls	r2, r3, #9
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	430a      	orrs	r2, r1
 80020aa:	609a      	str	r2, [r3, #8]
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	681b      	ldr	r3, [r3, #0]
 80020b0:	689a      	ldr	r2, [r3, #8]
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	681b      	ldr	r3, [r3, #0]
 80020b6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80020ba:	609a      	str	r2, [r3, #8]
 80020bc:	687b      	ldr	r3, [r7, #4]
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	6899      	ldr	r1, [r3, #8]
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	695b      	ldr	r3, [r3, #20]
 80020c6:	029a      	lsls	r2, r3, #10
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	681b      	ldr	r3, [r3, #0]
 80020cc:	430a      	orrs	r2, r1
 80020ce:	609a      	str	r2, [r3, #8]
 80020d0:	bf00      	nop
 80020d2:	3714      	adds	r7, #20
 80020d4:	46bd      	mov	sp, r7
 80020d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020da:	4770      	bx	lr
 80020dc:	40012300 	.word	0x40012300
 80020e0:	0f000001 	.word	0x0f000001

080020e4 <__NVIC_SetPriorityGrouping>:
 80020e4:	b480      	push	{r7}
 80020e6:	b085      	sub	sp, #20
 80020e8:	af00      	add	r7, sp, #0
 80020ea:	6078      	str	r0, [r7, #4]
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	f003 0307 	and.w	r3, r3, #7
 80020f2:	60fb      	str	r3, [r7, #12]
 80020f4:	4b0c      	ldr	r3, [pc, #48]	@ (8002128 <__NVIC_SetPriorityGrouping+0x44>)
 80020f6:	68db      	ldr	r3, [r3, #12]
 80020f8:	60bb      	str	r3, [r7, #8]
 80020fa:	68ba      	ldr	r2, [r7, #8]
 80020fc:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002100:	4013      	ands	r3, r2
 8002102:	60bb      	str	r3, [r7, #8]
 8002104:	68fb      	ldr	r3, [r7, #12]
 8002106:	021a      	lsls	r2, r3, #8
 8002108:	68bb      	ldr	r3, [r7, #8]
 800210a:	4313      	orrs	r3, r2
 800210c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002110:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002114:	60bb      	str	r3, [r7, #8]
 8002116:	4a04      	ldr	r2, [pc, #16]	@ (8002128 <__NVIC_SetPriorityGrouping+0x44>)
 8002118:	68bb      	ldr	r3, [r7, #8]
 800211a:	60d3      	str	r3, [r2, #12]
 800211c:	bf00      	nop
 800211e:	3714      	adds	r7, #20
 8002120:	46bd      	mov	sp, r7
 8002122:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002126:	4770      	bx	lr
 8002128:	e000ed00 	.word	0xe000ed00

0800212c <__NVIC_GetPriorityGrouping>:
 800212c:	b480      	push	{r7}
 800212e:	af00      	add	r7, sp, #0
 8002130:	4b04      	ldr	r3, [pc, #16]	@ (8002144 <__NVIC_GetPriorityGrouping+0x18>)
 8002132:	68db      	ldr	r3, [r3, #12]
 8002134:	0a1b      	lsrs	r3, r3, #8
 8002136:	f003 0307 	and.w	r3, r3, #7
 800213a:	4618      	mov	r0, r3
 800213c:	46bd      	mov	sp, r7
 800213e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002142:	4770      	bx	lr
 8002144:	e000ed00 	.word	0xe000ed00

08002148 <__NVIC_EnableIRQ>:
 8002148:	b480      	push	{r7}
 800214a:	b083      	sub	sp, #12
 800214c:	af00      	add	r7, sp, #0
 800214e:	4603      	mov	r3, r0
 8002150:	71fb      	strb	r3, [r7, #7]
 8002152:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002156:	2b00      	cmp	r3, #0
 8002158:	db0b      	blt.n	8002172 <__NVIC_EnableIRQ+0x2a>
 800215a:	79fb      	ldrb	r3, [r7, #7]
 800215c:	f003 021f 	and.w	r2, r3, #31
 8002160:	4907      	ldr	r1, [pc, #28]	@ (8002180 <__NVIC_EnableIRQ+0x38>)
 8002162:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002166:	095b      	lsrs	r3, r3, #5
 8002168:	2001      	movs	r0, #1
 800216a:	fa00 f202 	lsl.w	r2, r0, r2
 800216e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002172:	bf00      	nop
 8002174:	370c      	adds	r7, #12
 8002176:	46bd      	mov	sp, r7
 8002178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800217c:	4770      	bx	lr
 800217e:	bf00      	nop
 8002180:	e000e100 	.word	0xe000e100

08002184 <__NVIC_SetPriority>:
 8002184:	b480      	push	{r7}
 8002186:	b083      	sub	sp, #12
 8002188:	af00      	add	r7, sp, #0
 800218a:	4603      	mov	r3, r0
 800218c:	6039      	str	r1, [r7, #0]
 800218e:	71fb      	strb	r3, [r7, #7]
 8002190:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002194:	2b00      	cmp	r3, #0
 8002196:	db0a      	blt.n	80021ae <__NVIC_SetPriority+0x2a>
 8002198:	683b      	ldr	r3, [r7, #0]
 800219a:	b2da      	uxtb	r2, r3
 800219c:	490c      	ldr	r1, [pc, #48]	@ (80021d0 <__NVIC_SetPriority+0x4c>)
 800219e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021a2:	0112      	lsls	r2, r2, #4
 80021a4:	b2d2      	uxtb	r2, r2
 80021a6:	440b      	add	r3, r1
 80021a8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80021ac:	e00a      	b.n	80021c4 <__NVIC_SetPriority+0x40>
 80021ae:	683b      	ldr	r3, [r7, #0]
 80021b0:	b2da      	uxtb	r2, r3
 80021b2:	4908      	ldr	r1, [pc, #32]	@ (80021d4 <__NVIC_SetPriority+0x50>)
 80021b4:	79fb      	ldrb	r3, [r7, #7]
 80021b6:	f003 030f 	and.w	r3, r3, #15
 80021ba:	3b04      	subs	r3, #4
 80021bc:	0112      	lsls	r2, r2, #4
 80021be:	b2d2      	uxtb	r2, r2
 80021c0:	440b      	add	r3, r1
 80021c2:	761a      	strb	r2, [r3, #24]
 80021c4:	bf00      	nop
 80021c6:	370c      	adds	r7, #12
 80021c8:	46bd      	mov	sp, r7
 80021ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ce:	4770      	bx	lr
 80021d0:	e000e100 	.word	0xe000e100
 80021d4:	e000ed00 	.word	0xe000ed00

080021d8 <NVIC_EncodePriority>:
 80021d8:	b480      	push	{r7}
 80021da:	b089      	sub	sp, #36	@ 0x24
 80021dc:	af00      	add	r7, sp, #0
 80021de:	60f8      	str	r0, [r7, #12]
 80021e0:	60b9      	str	r1, [r7, #8]
 80021e2:	607a      	str	r2, [r7, #4]
 80021e4:	68fb      	ldr	r3, [r7, #12]
 80021e6:	f003 0307 	and.w	r3, r3, #7
 80021ea:	61fb      	str	r3, [r7, #28]
 80021ec:	69fb      	ldr	r3, [r7, #28]
 80021ee:	f1c3 0307 	rsb	r3, r3, #7
 80021f2:	2b04      	cmp	r3, #4
 80021f4:	bf28      	it	cs
 80021f6:	2304      	movcs	r3, #4
 80021f8:	61bb      	str	r3, [r7, #24]
 80021fa:	69fb      	ldr	r3, [r7, #28]
 80021fc:	3304      	adds	r3, #4
 80021fe:	2b06      	cmp	r3, #6
 8002200:	d902      	bls.n	8002208 <NVIC_EncodePriority+0x30>
 8002202:	69fb      	ldr	r3, [r7, #28]
 8002204:	3b03      	subs	r3, #3
 8002206:	e000      	b.n	800220a <NVIC_EncodePriority+0x32>
 8002208:	2300      	movs	r3, #0
 800220a:	617b      	str	r3, [r7, #20]
 800220c:	f04f 32ff 	mov.w	r2, #4294967295
 8002210:	69bb      	ldr	r3, [r7, #24]
 8002212:	fa02 f303 	lsl.w	r3, r2, r3
 8002216:	43da      	mvns	r2, r3
 8002218:	68bb      	ldr	r3, [r7, #8]
 800221a:	401a      	ands	r2, r3
 800221c:	697b      	ldr	r3, [r7, #20]
 800221e:	409a      	lsls	r2, r3
 8002220:	f04f 31ff 	mov.w	r1, #4294967295
 8002224:	697b      	ldr	r3, [r7, #20]
 8002226:	fa01 f303 	lsl.w	r3, r1, r3
 800222a:	43d9      	mvns	r1, r3
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	400b      	ands	r3, r1
 8002230:	4313      	orrs	r3, r2
 8002232:	4618      	mov	r0, r3
 8002234:	3724      	adds	r7, #36	@ 0x24
 8002236:	46bd      	mov	sp, r7
 8002238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800223c:	4770      	bx	lr
	...

08002240 <SysTick_Config>:
 8002240:	b580      	push	{r7, lr}
 8002242:	b082      	sub	sp, #8
 8002244:	af00      	add	r7, sp, #0
 8002246:	6078      	str	r0, [r7, #4]
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	3b01      	subs	r3, #1
 800224c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002250:	d301      	bcc.n	8002256 <SysTick_Config+0x16>
 8002252:	2301      	movs	r3, #1
 8002254:	e00f      	b.n	8002276 <SysTick_Config+0x36>
 8002256:	4a0a      	ldr	r2, [pc, #40]	@ (8002280 <SysTick_Config+0x40>)
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	3b01      	subs	r3, #1
 800225c:	6053      	str	r3, [r2, #4]
 800225e:	210f      	movs	r1, #15
 8002260:	f04f 30ff 	mov.w	r0, #4294967295
 8002264:	f7ff ff8e 	bl	8002184 <__NVIC_SetPriority>
 8002268:	4b05      	ldr	r3, [pc, #20]	@ (8002280 <SysTick_Config+0x40>)
 800226a:	2200      	movs	r2, #0
 800226c:	609a      	str	r2, [r3, #8]
 800226e:	4b04      	ldr	r3, [pc, #16]	@ (8002280 <SysTick_Config+0x40>)
 8002270:	2207      	movs	r2, #7
 8002272:	601a      	str	r2, [r3, #0]
 8002274:	2300      	movs	r3, #0
 8002276:	4618      	mov	r0, r3
 8002278:	3708      	adds	r7, #8
 800227a:	46bd      	mov	sp, r7
 800227c:	bd80      	pop	{r7, pc}
 800227e:	bf00      	nop
 8002280:	e000e010 	.word	0xe000e010

08002284 <HAL_NVIC_SetPriorityGrouping>:
 8002284:	b580      	push	{r7, lr}
 8002286:	b082      	sub	sp, #8
 8002288:	af00      	add	r7, sp, #0
 800228a:	6078      	str	r0, [r7, #4]
 800228c:	6878      	ldr	r0, [r7, #4]
 800228e:	f7ff ff29 	bl	80020e4 <__NVIC_SetPriorityGrouping>
 8002292:	bf00      	nop
 8002294:	3708      	adds	r7, #8
 8002296:	46bd      	mov	sp, r7
 8002298:	bd80      	pop	{r7, pc}

0800229a <HAL_NVIC_SetPriority>:
 800229a:	b580      	push	{r7, lr}
 800229c:	b086      	sub	sp, #24
 800229e:	af00      	add	r7, sp, #0
 80022a0:	4603      	mov	r3, r0
 80022a2:	60b9      	str	r1, [r7, #8]
 80022a4:	607a      	str	r2, [r7, #4]
 80022a6:	73fb      	strb	r3, [r7, #15]
 80022a8:	2300      	movs	r3, #0
 80022aa:	617b      	str	r3, [r7, #20]
 80022ac:	f7ff ff3e 	bl	800212c <__NVIC_GetPriorityGrouping>
 80022b0:	6178      	str	r0, [r7, #20]
 80022b2:	687a      	ldr	r2, [r7, #4]
 80022b4:	68b9      	ldr	r1, [r7, #8]
 80022b6:	6978      	ldr	r0, [r7, #20]
 80022b8:	f7ff ff8e 	bl	80021d8 <NVIC_EncodePriority>
 80022bc:	4602      	mov	r2, r0
 80022be:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80022c2:	4611      	mov	r1, r2
 80022c4:	4618      	mov	r0, r3
 80022c6:	f7ff ff5d 	bl	8002184 <__NVIC_SetPriority>
 80022ca:	bf00      	nop
 80022cc:	3718      	adds	r7, #24
 80022ce:	46bd      	mov	sp, r7
 80022d0:	bd80      	pop	{r7, pc}

080022d2 <HAL_NVIC_EnableIRQ>:
 80022d2:	b580      	push	{r7, lr}
 80022d4:	b082      	sub	sp, #8
 80022d6:	af00      	add	r7, sp, #0
 80022d8:	4603      	mov	r3, r0
 80022da:	71fb      	strb	r3, [r7, #7]
 80022dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80022e0:	4618      	mov	r0, r3
 80022e2:	f7ff ff31 	bl	8002148 <__NVIC_EnableIRQ>
 80022e6:	bf00      	nop
 80022e8:	3708      	adds	r7, #8
 80022ea:	46bd      	mov	sp, r7
 80022ec:	bd80      	pop	{r7, pc}

080022ee <HAL_SYSTICK_Config>:
 80022ee:	b580      	push	{r7, lr}
 80022f0:	b082      	sub	sp, #8
 80022f2:	af00      	add	r7, sp, #0
 80022f4:	6078      	str	r0, [r7, #4]
 80022f6:	6878      	ldr	r0, [r7, #4]
 80022f8:	f7ff ffa2 	bl	8002240 <SysTick_Config>
 80022fc:	4603      	mov	r3, r0
 80022fe:	4618      	mov	r0, r3
 8002300:	3708      	adds	r7, #8
 8002302:	46bd      	mov	sp, r7
 8002304:	bd80      	pop	{r7, pc}

08002306 <HAL_DMA_Abort>:
 8002306:	b580      	push	{r7, lr}
 8002308:	b084      	sub	sp, #16
 800230a:	af00      	add	r7, sp, #0
 800230c:	6078      	str	r0, [r7, #4]
 800230e:	687b      	ldr	r3, [r7, #4]
 8002310:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002312:	60fb      	str	r3, [r7, #12]
 8002314:	f7ff fac4 	bl	80018a0 <HAL_GetTick>
 8002318:	60b8      	str	r0, [r7, #8]
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002320:	b2db      	uxtb	r3, r3
 8002322:	2b02      	cmp	r3, #2
 8002324:	d008      	beq.n	8002338 <HAL_DMA_Abort+0x32>
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	2280      	movs	r2, #128	@ 0x80
 800232a:	655a      	str	r2, [r3, #84]	@ 0x54
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	2200      	movs	r2, #0
 8002330:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002334:	2301      	movs	r3, #1
 8002336:	e052      	b.n	80023de <HAL_DMA_Abort+0xd8>
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	681a      	ldr	r2, [r3, #0]
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	f022 0216 	bic.w	r2, r2, #22
 8002346:	601a      	str	r2, [r3, #0]
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	695a      	ldr	r2, [r3, #20]
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002356:	615a      	str	r2, [r3, #20]
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800235c:	2b00      	cmp	r3, #0
 800235e:	d103      	bne.n	8002368 <HAL_DMA_Abort+0x62>
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002364:	2b00      	cmp	r3, #0
 8002366:	d007      	beq.n	8002378 <HAL_DMA_Abort+0x72>
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	681a      	ldr	r2, [r3, #0]
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	f022 0208 	bic.w	r2, r2, #8
 8002376:	601a      	str	r2, [r3, #0]
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	681a      	ldr	r2, [r3, #0]
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	f022 0201 	bic.w	r2, r2, #1
 8002386:	601a      	str	r2, [r3, #0]
 8002388:	e013      	b.n	80023b2 <HAL_DMA_Abort+0xac>
 800238a:	f7ff fa89 	bl	80018a0 <HAL_GetTick>
 800238e:	4602      	mov	r2, r0
 8002390:	68bb      	ldr	r3, [r7, #8]
 8002392:	1ad3      	subs	r3, r2, r3
 8002394:	2b05      	cmp	r3, #5
 8002396:	d90c      	bls.n	80023b2 <HAL_DMA_Abort+0xac>
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	2220      	movs	r2, #32
 800239c:	655a      	str	r2, [r3, #84]	@ 0x54
 800239e:	687b      	ldr	r3, [r7, #4]
 80023a0:	2203      	movs	r2, #3
 80023a2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	2200      	movs	r2, #0
 80023aa:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80023ae:	2303      	movs	r3, #3
 80023b0:	e015      	b.n	80023de <HAL_DMA_Abort+0xd8>
 80023b2:	687b      	ldr	r3, [r7, #4]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	681b      	ldr	r3, [r3, #0]
 80023b8:	f003 0301 	and.w	r3, r3, #1
 80023bc:	2b00      	cmp	r3, #0
 80023be:	d1e4      	bne.n	800238a <HAL_DMA_Abort+0x84>
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80023c4:	223f      	movs	r2, #63	@ 0x3f
 80023c6:	409a      	lsls	r2, r3
 80023c8:	68fb      	ldr	r3, [r7, #12]
 80023ca:	609a      	str	r2, [r3, #8]
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	2201      	movs	r2, #1
 80023d0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	2200      	movs	r2, #0
 80023d8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80023dc:	2300      	movs	r3, #0
 80023de:	4618      	mov	r0, r3
 80023e0:	3710      	adds	r7, #16
 80023e2:	46bd      	mov	sp, r7
 80023e4:	bd80      	pop	{r7, pc}

080023e6 <HAL_DMA_Abort_IT>:
 80023e6:	b480      	push	{r7}
 80023e8:	b083      	sub	sp, #12
 80023ea:	af00      	add	r7, sp, #0
 80023ec:	6078      	str	r0, [r7, #4]
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80023f4:	b2db      	uxtb	r3, r3
 80023f6:	2b02      	cmp	r3, #2
 80023f8:	d004      	beq.n	8002404 <HAL_DMA_Abort_IT+0x1e>
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	2280      	movs	r2, #128	@ 0x80
 80023fe:	655a      	str	r2, [r3, #84]	@ 0x54
 8002400:	2301      	movs	r3, #1
 8002402:	e00c      	b.n	800241e <HAL_DMA_Abort_IT+0x38>
 8002404:	687b      	ldr	r3, [r7, #4]
 8002406:	2205      	movs	r2, #5
 8002408:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800240c:	687b      	ldr	r3, [r7, #4]
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	681a      	ldr	r2, [r3, #0]
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	f022 0201 	bic.w	r2, r2, #1
 800241a:	601a      	str	r2, [r3, #0]
 800241c:	2300      	movs	r3, #0
 800241e:	4618      	mov	r0, r3
 8002420:	370c      	adds	r7, #12
 8002422:	46bd      	mov	sp, r7
 8002424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002428:	4770      	bx	lr
	...

0800242c <HAL_GPIO_Init>:
 800242c:	b480      	push	{r7}
 800242e:	b089      	sub	sp, #36	@ 0x24
 8002430:	af00      	add	r7, sp, #0
 8002432:	6078      	str	r0, [r7, #4]
 8002434:	6039      	str	r1, [r7, #0]
 8002436:	2300      	movs	r3, #0
 8002438:	617b      	str	r3, [r7, #20]
 800243a:	2300      	movs	r3, #0
 800243c:	613b      	str	r3, [r7, #16]
 800243e:	2300      	movs	r3, #0
 8002440:	61bb      	str	r3, [r7, #24]
 8002442:	2300      	movs	r3, #0
 8002444:	61fb      	str	r3, [r7, #28]
 8002446:	e159      	b.n	80026fc <HAL_GPIO_Init+0x2d0>
 8002448:	2201      	movs	r2, #1
 800244a:	69fb      	ldr	r3, [r7, #28]
 800244c:	fa02 f303 	lsl.w	r3, r2, r3
 8002450:	617b      	str	r3, [r7, #20]
 8002452:	683b      	ldr	r3, [r7, #0]
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	697a      	ldr	r2, [r7, #20]
 8002458:	4013      	ands	r3, r2
 800245a:	613b      	str	r3, [r7, #16]
 800245c:	693a      	ldr	r2, [r7, #16]
 800245e:	697b      	ldr	r3, [r7, #20]
 8002460:	429a      	cmp	r2, r3
 8002462:	f040 8148 	bne.w	80026f6 <HAL_GPIO_Init+0x2ca>
 8002466:	683b      	ldr	r3, [r7, #0]
 8002468:	685b      	ldr	r3, [r3, #4]
 800246a:	f003 0303 	and.w	r3, r3, #3
 800246e:	2b01      	cmp	r3, #1
 8002470:	d005      	beq.n	800247e <HAL_GPIO_Init+0x52>
 8002472:	683b      	ldr	r3, [r7, #0]
 8002474:	685b      	ldr	r3, [r3, #4]
 8002476:	f003 0303 	and.w	r3, r3, #3
 800247a:	2b02      	cmp	r3, #2
 800247c:	d130      	bne.n	80024e0 <HAL_GPIO_Init+0xb4>
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	689b      	ldr	r3, [r3, #8]
 8002482:	61bb      	str	r3, [r7, #24]
 8002484:	69fb      	ldr	r3, [r7, #28]
 8002486:	005b      	lsls	r3, r3, #1
 8002488:	2203      	movs	r2, #3
 800248a:	fa02 f303 	lsl.w	r3, r2, r3
 800248e:	43db      	mvns	r3, r3
 8002490:	69ba      	ldr	r2, [r7, #24]
 8002492:	4013      	ands	r3, r2
 8002494:	61bb      	str	r3, [r7, #24]
 8002496:	683b      	ldr	r3, [r7, #0]
 8002498:	68da      	ldr	r2, [r3, #12]
 800249a:	69fb      	ldr	r3, [r7, #28]
 800249c:	005b      	lsls	r3, r3, #1
 800249e:	fa02 f303 	lsl.w	r3, r2, r3
 80024a2:	69ba      	ldr	r2, [r7, #24]
 80024a4:	4313      	orrs	r3, r2
 80024a6:	61bb      	str	r3, [r7, #24]
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	69ba      	ldr	r2, [r7, #24]
 80024ac:	609a      	str	r2, [r3, #8]
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	685b      	ldr	r3, [r3, #4]
 80024b2:	61bb      	str	r3, [r7, #24]
 80024b4:	2201      	movs	r2, #1
 80024b6:	69fb      	ldr	r3, [r7, #28]
 80024b8:	fa02 f303 	lsl.w	r3, r2, r3
 80024bc:	43db      	mvns	r3, r3
 80024be:	69ba      	ldr	r2, [r7, #24]
 80024c0:	4013      	ands	r3, r2
 80024c2:	61bb      	str	r3, [r7, #24]
 80024c4:	683b      	ldr	r3, [r7, #0]
 80024c6:	685b      	ldr	r3, [r3, #4]
 80024c8:	091b      	lsrs	r3, r3, #4
 80024ca:	f003 0201 	and.w	r2, r3, #1
 80024ce:	69fb      	ldr	r3, [r7, #28]
 80024d0:	fa02 f303 	lsl.w	r3, r2, r3
 80024d4:	69ba      	ldr	r2, [r7, #24]
 80024d6:	4313      	orrs	r3, r2
 80024d8:	61bb      	str	r3, [r7, #24]
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	69ba      	ldr	r2, [r7, #24]
 80024de:	605a      	str	r2, [r3, #4]
 80024e0:	683b      	ldr	r3, [r7, #0]
 80024e2:	685b      	ldr	r3, [r3, #4]
 80024e4:	f003 0303 	and.w	r3, r3, #3
 80024e8:	2b03      	cmp	r3, #3
 80024ea:	d017      	beq.n	800251c <HAL_GPIO_Init+0xf0>
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	68db      	ldr	r3, [r3, #12]
 80024f0:	61bb      	str	r3, [r7, #24]
 80024f2:	69fb      	ldr	r3, [r7, #28]
 80024f4:	005b      	lsls	r3, r3, #1
 80024f6:	2203      	movs	r2, #3
 80024f8:	fa02 f303 	lsl.w	r3, r2, r3
 80024fc:	43db      	mvns	r3, r3
 80024fe:	69ba      	ldr	r2, [r7, #24]
 8002500:	4013      	ands	r3, r2
 8002502:	61bb      	str	r3, [r7, #24]
 8002504:	683b      	ldr	r3, [r7, #0]
 8002506:	689a      	ldr	r2, [r3, #8]
 8002508:	69fb      	ldr	r3, [r7, #28]
 800250a:	005b      	lsls	r3, r3, #1
 800250c:	fa02 f303 	lsl.w	r3, r2, r3
 8002510:	69ba      	ldr	r2, [r7, #24]
 8002512:	4313      	orrs	r3, r2
 8002514:	61bb      	str	r3, [r7, #24]
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	69ba      	ldr	r2, [r7, #24]
 800251a:	60da      	str	r2, [r3, #12]
 800251c:	683b      	ldr	r3, [r7, #0]
 800251e:	685b      	ldr	r3, [r3, #4]
 8002520:	f003 0303 	and.w	r3, r3, #3
 8002524:	2b02      	cmp	r3, #2
 8002526:	d123      	bne.n	8002570 <HAL_GPIO_Init+0x144>
 8002528:	69fb      	ldr	r3, [r7, #28]
 800252a:	08da      	lsrs	r2, r3, #3
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	3208      	adds	r2, #8
 8002530:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002534:	61bb      	str	r3, [r7, #24]
 8002536:	69fb      	ldr	r3, [r7, #28]
 8002538:	f003 0307 	and.w	r3, r3, #7
 800253c:	009b      	lsls	r3, r3, #2
 800253e:	220f      	movs	r2, #15
 8002540:	fa02 f303 	lsl.w	r3, r2, r3
 8002544:	43db      	mvns	r3, r3
 8002546:	69ba      	ldr	r2, [r7, #24]
 8002548:	4013      	ands	r3, r2
 800254a:	61bb      	str	r3, [r7, #24]
 800254c:	683b      	ldr	r3, [r7, #0]
 800254e:	691a      	ldr	r2, [r3, #16]
 8002550:	69fb      	ldr	r3, [r7, #28]
 8002552:	f003 0307 	and.w	r3, r3, #7
 8002556:	009b      	lsls	r3, r3, #2
 8002558:	fa02 f303 	lsl.w	r3, r2, r3
 800255c:	69ba      	ldr	r2, [r7, #24]
 800255e:	4313      	orrs	r3, r2
 8002560:	61bb      	str	r3, [r7, #24]
 8002562:	69fb      	ldr	r3, [r7, #28]
 8002564:	08da      	lsrs	r2, r3, #3
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	3208      	adds	r2, #8
 800256a:	69b9      	ldr	r1, [r7, #24]
 800256c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	61bb      	str	r3, [r7, #24]
 8002576:	69fb      	ldr	r3, [r7, #28]
 8002578:	005b      	lsls	r3, r3, #1
 800257a:	2203      	movs	r2, #3
 800257c:	fa02 f303 	lsl.w	r3, r2, r3
 8002580:	43db      	mvns	r3, r3
 8002582:	69ba      	ldr	r2, [r7, #24]
 8002584:	4013      	ands	r3, r2
 8002586:	61bb      	str	r3, [r7, #24]
 8002588:	683b      	ldr	r3, [r7, #0]
 800258a:	685b      	ldr	r3, [r3, #4]
 800258c:	f003 0203 	and.w	r2, r3, #3
 8002590:	69fb      	ldr	r3, [r7, #28]
 8002592:	005b      	lsls	r3, r3, #1
 8002594:	fa02 f303 	lsl.w	r3, r2, r3
 8002598:	69ba      	ldr	r2, [r7, #24]
 800259a:	4313      	orrs	r3, r2
 800259c:	61bb      	str	r3, [r7, #24]
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	69ba      	ldr	r2, [r7, #24]
 80025a2:	601a      	str	r2, [r3, #0]
 80025a4:	683b      	ldr	r3, [r7, #0]
 80025a6:	685b      	ldr	r3, [r3, #4]
 80025a8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80025ac:	2b00      	cmp	r3, #0
 80025ae:	f000 80a2 	beq.w	80026f6 <HAL_GPIO_Init+0x2ca>
 80025b2:	2300      	movs	r3, #0
 80025b4:	60fb      	str	r3, [r7, #12]
 80025b6:	4b57      	ldr	r3, [pc, #348]	@ (8002714 <HAL_GPIO_Init+0x2e8>)
 80025b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80025ba:	4a56      	ldr	r2, [pc, #344]	@ (8002714 <HAL_GPIO_Init+0x2e8>)
 80025bc:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80025c0:	6453      	str	r3, [r2, #68]	@ 0x44
 80025c2:	4b54      	ldr	r3, [pc, #336]	@ (8002714 <HAL_GPIO_Init+0x2e8>)
 80025c4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80025c6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80025ca:	60fb      	str	r3, [r7, #12]
 80025cc:	68fb      	ldr	r3, [r7, #12]
 80025ce:	4a52      	ldr	r2, [pc, #328]	@ (8002718 <HAL_GPIO_Init+0x2ec>)
 80025d0:	69fb      	ldr	r3, [r7, #28]
 80025d2:	089b      	lsrs	r3, r3, #2
 80025d4:	3302      	adds	r3, #2
 80025d6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80025da:	61bb      	str	r3, [r7, #24]
 80025dc:	69fb      	ldr	r3, [r7, #28]
 80025de:	f003 0303 	and.w	r3, r3, #3
 80025e2:	009b      	lsls	r3, r3, #2
 80025e4:	220f      	movs	r2, #15
 80025e6:	fa02 f303 	lsl.w	r3, r2, r3
 80025ea:	43db      	mvns	r3, r3
 80025ec:	69ba      	ldr	r2, [r7, #24]
 80025ee:	4013      	ands	r3, r2
 80025f0:	61bb      	str	r3, [r7, #24]
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	4a49      	ldr	r2, [pc, #292]	@ (800271c <HAL_GPIO_Init+0x2f0>)
 80025f6:	4293      	cmp	r3, r2
 80025f8:	d019      	beq.n	800262e <HAL_GPIO_Init+0x202>
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	4a48      	ldr	r2, [pc, #288]	@ (8002720 <HAL_GPIO_Init+0x2f4>)
 80025fe:	4293      	cmp	r3, r2
 8002600:	d013      	beq.n	800262a <HAL_GPIO_Init+0x1fe>
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	4a47      	ldr	r2, [pc, #284]	@ (8002724 <HAL_GPIO_Init+0x2f8>)
 8002606:	4293      	cmp	r3, r2
 8002608:	d00d      	beq.n	8002626 <HAL_GPIO_Init+0x1fa>
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	4a46      	ldr	r2, [pc, #280]	@ (8002728 <HAL_GPIO_Init+0x2fc>)
 800260e:	4293      	cmp	r3, r2
 8002610:	d007      	beq.n	8002622 <HAL_GPIO_Init+0x1f6>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	4a45      	ldr	r2, [pc, #276]	@ (800272c <HAL_GPIO_Init+0x300>)
 8002616:	4293      	cmp	r3, r2
 8002618:	d101      	bne.n	800261e <HAL_GPIO_Init+0x1f2>
 800261a:	2304      	movs	r3, #4
 800261c:	e008      	b.n	8002630 <HAL_GPIO_Init+0x204>
 800261e:	2307      	movs	r3, #7
 8002620:	e006      	b.n	8002630 <HAL_GPIO_Init+0x204>
 8002622:	2303      	movs	r3, #3
 8002624:	e004      	b.n	8002630 <HAL_GPIO_Init+0x204>
 8002626:	2302      	movs	r3, #2
 8002628:	e002      	b.n	8002630 <HAL_GPIO_Init+0x204>
 800262a:	2301      	movs	r3, #1
 800262c:	e000      	b.n	8002630 <HAL_GPIO_Init+0x204>
 800262e:	2300      	movs	r3, #0
 8002630:	69fa      	ldr	r2, [r7, #28]
 8002632:	f002 0203 	and.w	r2, r2, #3
 8002636:	0092      	lsls	r2, r2, #2
 8002638:	4093      	lsls	r3, r2
 800263a:	69ba      	ldr	r2, [r7, #24]
 800263c:	4313      	orrs	r3, r2
 800263e:	61bb      	str	r3, [r7, #24]
 8002640:	4935      	ldr	r1, [pc, #212]	@ (8002718 <HAL_GPIO_Init+0x2ec>)
 8002642:	69fb      	ldr	r3, [r7, #28]
 8002644:	089b      	lsrs	r3, r3, #2
 8002646:	3302      	adds	r3, #2
 8002648:	69ba      	ldr	r2, [r7, #24]
 800264a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800264e:	4b38      	ldr	r3, [pc, #224]	@ (8002730 <HAL_GPIO_Init+0x304>)
 8002650:	689b      	ldr	r3, [r3, #8]
 8002652:	61bb      	str	r3, [r7, #24]
 8002654:	693b      	ldr	r3, [r7, #16]
 8002656:	43db      	mvns	r3, r3
 8002658:	69ba      	ldr	r2, [r7, #24]
 800265a:	4013      	ands	r3, r2
 800265c:	61bb      	str	r3, [r7, #24]
 800265e:	683b      	ldr	r3, [r7, #0]
 8002660:	685b      	ldr	r3, [r3, #4]
 8002662:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002666:	2b00      	cmp	r3, #0
 8002668:	d003      	beq.n	8002672 <HAL_GPIO_Init+0x246>
 800266a:	69ba      	ldr	r2, [r7, #24]
 800266c:	693b      	ldr	r3, [r7, #16]
 800266e:	4313      	orrs	r3, r2
 8002670:	61bb      	str	r3, [r7, #24]
 8002672:	4a2f      	ldr	r2, [pc, #188]	@ (8002730 <HAL_GPIO_Init+0x304>)
 8002674:	69bb      	ldr	r3, [r7, #24]
 8002676:	6093      	str	r3, [r2, #8]
 8002678:	4b2d      	ldr	r3, [pc, #180]	@ (8002730 <HAL_GPIO_Init+0x304>)
 800267a:	68db      	ldr	r3, [r3, #12]
 800267c:	61bb      	str	r3, [r7, #24]
 800267e:	693b      	ldr	r3, [r7, #16]
 8002680:	43db      	mvns	r3, r3
 8002682:	69ba      	ldr	r2, [r7, #24]
 8002684:	4013      	ands	r3, r2
 8002686:	61bb      	str	r3, [r7, #24]
 8002688:	683b      	ldr	r3, [r7, #0]
 800268a:	685b      	ldr	r3, [r3, #4]
 800268c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002690:	2b00      	cmp	r3, #0
 8002692:	d003      	beq.n	800269c <HAL_GPIO_Init+0x270>
 8002694:	69ba      	ldr	r2, [r7, #24]
 8002696:	693b      	ldr	r3, [r7, #16]
 8002698:	4313      	orrs	r3, r2
 800269a:	61bb      	str	r3, [r7, #24]
 800269c:	4a24      	ldr	r2, [pc, #144]	@ (8002730 <HAL_GPIO_Init+0x304>)
 800269e:	69bb      	ldr	r3, [r7, #24]
 80026a0:	60d3      	str	r3, [r2, #12]
 80026a2:	4b23      	ldr	r3, [pc, #140]	@ (8002730 <HAL_GPIO_Init+0x304>)
 80026a4:	685b      	ldr	r3, [r3, #4]
 80026a6:	61bb      	str	r3, [r7, #24]
 80026a8:	693b      	ldr	r3, [r7, #16]
 80026aa:	43db      	mvns	r3, r3
 80026ac:	69ba      	ldr	r2, [r7, #24]
 80026ae:	4013      	ands	r3, r2
 80026b0:	61bb      	str	r3, [r7, #24]
 80026b2:	683b      	ldr	r3, [r7, #0]
 80026b4:	685b      	ldr	r3, [r3, #4]
 80026b6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80026ba:	2b00      	cmp	r3, #0
 80026bc:	d003      	beq.n	80026c6 <HAL_GPIO_Init+0x29a>
 80026be:	69ba      	ldr	r2, [r7, #24]
 80026c0:	693b      	ldr	r3, [r7, #16]
 80026c2:	4313      	orrs	r3, r2
 80026c4:	61bb      	str	r3, [r7, #24]
 80026c6:	4a1a      	ldr	r2, [pc, #104]	@ (8002730 <HAL_GPIO_Init+0x304>)
 80026c8:	69bb      	ldr	r3, [r7, #24]
 80026ca:	6053      	str	r3, [r2, #4]
 80026cc:	4b18      	ldr	r3, [pc, #96]	@ (8002730 <HAL_GPIO_Init+0x304>)
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	61bb      	str	r3, [r7, #24]
 80026d2:	693b      	ldr	r3, [r7, #16]
 80026d4:	43db      	mvns	r3, r3
 80026d6:	69ba      	ldr	r2, [r7, #24]
 80026d8:	4013      	ands	r3, r2
 80026da:	61bb      	str	r3, [r7, #24]
 80026dc:	683b      	ldr	r3, [r7, #0]
 80026de:	685b      	ldr	r3, [r3, #4]
 80026e0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80026e4:	2b00      	cmp	r3, #0
 80026e6:	d003      	beq.n	80026f0 <HAL_GPIO_Init+0x2c4>
 80026e8:	69ba      	ldr	r2, [r7, #24]
 80026ea:	693b      	ldr	r3, [r7, #16]
 80026ec:	4313      	orrs	r3, r2
 80026ee:	61bb      	str	r3, [r7, #24]
 80026f0:	4a0f      	ldr	r2, [pc, #60]	@ (8002730 <HAL_GPIO_Init+0x304>)
 80026f2:	69bb      	ldr	r3, [r7, #24]
 80026f4:	6013      	str	r3, [r2, #0]
 80026f6:	69fb      	ldr	r3, [r7, #28]
 80026f8:	3301      	adds	r3, #1
 80026fa:	61fb      	str	r3, [r7, #28]
 80026fc:	69fb      	ldr	r3, [r7, #28]
 80026fe:	2b0f      	cmp	r3, #15
 8002700:	f67f aea2 	bls.w	8002448 <HAL_GPIO_Init+0x1c>
 8002704:	bf00      	nop
 8002706:	bf00      	nop
 8002708:	3724      	adds	r7, #36	@ 0x24
 800270a:	46bd      	mov	sp, r7
 800270c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002710:	4770      	bx	lr
 8002712:	bf00      	nop
 8002714:	40023800 	.word	0x40023800
 8002718:	40013800 	.word	0x40013800
 800271c:	40020000 	.word	0x40020000
 8002720:	40020400 	.word	0x40020400
 8002724:	40020800 	.word	0x40020800
 8002728:	40020c00 	.word	0x40020c00
 800272c:	40021000 	.word	0x40021000
 8002730:	40013c00 	.word	0x40013c00

08002734 <HAL_GPIO_ReadPin>:
 8002734:	b480      	push	{r7}
 8002736:	b085      	sub	sp, #20
 8002738:	af00      	add	r7, sp, #0
 800273a:	6078      	str	r0, [r7, #4]
 800273c:	460b      	mov	r3, r1
 800273e:	807b      	strh	r3, [r7, #2]
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	691a      	ldr	r2, [r3, #16]
 8002744:	887b      	ldrh	r3, [r7, #2]
 8002746:	4013      	ands	r3, r2
 8002748:	2b00      	cmp	r3, #0
 800274a:	d002      	beq.n	8002752 <HAL_GPIO_ReadPin+0x1e>
 800274c:	2301      	movs	r3, #1
 800274e:	73fb      	strb	r3, [r7, #15]
 8002750:	e001      	b.n	8002756 <HAL_GPIO_ReadPin+0x22>
 8002752:	2300      	movs	r3, #0
 8002754:	73fb      	strb	r3, [r7, #15]
 8002756:	7bfb      	ldrb	r3, [r7, #15]
 8002758:	4618      	mov	r0, r3
 800275a:	3714      	adds	r7, #20
 800275c:	46bd      	mov	sp, r7
 800275e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002762:	4770      	bx	lr

08002764 <HAL_GPIO_WritePin>:
 8002764:	b480      	push	{r7}
 8002766:	b083      	sub	sp, #12
 8002768:	af00      	add	r7, sp, #0
 800276a:	6078      	str	r0, [r7, #4]
 800276c:	460b      	mov	r3, r1
 800276e:	807b      	strh	r3, [r7, #2]
 8002770:	4613      	mov	r3, r2
 8002772:	707b      	strb	r3, [r7, #1]
 8002774:	787b      	ldrb	r3, [r7, #1]
 8002776:	2b00      	cmp	r3, #0
 8002778:	d003      	beq.n	8002782 <HAL_GPIO_WritePin+0x1e>
 800277a:	887a      	ldrh	r2, [r7, #2]
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	619a      	str	r2, [r3, #24]
 8002780:	e003      	b.n	800278a <HAL_GPIO_WritePin+0x26>
 8002782:	887b      	ldrh	r3, [r7, #2]
 8002784:	041a      	lsls	r2, r3, #16
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	619a      	str	r2, [r3, #24]
 800278a:	bf00      	nop
 800278c:	370c      	adds	r7, #12
 800278e:	46bd      	mov	sp, r7
 8002790:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002794:	4770      	bx	lr
	...

08002798 <HAL_I2C_Init>:
 8002798:	b580      	push	{r7, lr}
 800279a:	b084      	sub	sp, #16
 800279c:	af00      	add	r7, sp, #0
 800279e:	6078      	str	r0, [r7, #4]
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	2b00      	cmp	r3, #0
 80027a4:	d101      	bne.n	80027aa <HAL_I2C_Init+0x12>
 80027a6:	2301      	movs	r3, #1
 80027a8:	e12b      	b.n	8002a02 <HAL_I2C_Init+0x26a>
 80027aa:	687b      	ldr	r3, [r7, #4]
 80027ac:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80027b0:	b2db      	uxtb	r3, r3
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	d106      	bne.n	80027c4 <HAL_I2C_Init+0x2c>
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	2200      	movs	r2, #0
 80027ba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80027be:	6878      	ldr	r0, [r7, #4]
 80027c0:	f7fe fd76 	bl	80012b0 <HAL_I2C_MspInit>
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	2224      	movs	r2, #36	@ 0x24
 80027c8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	681a      	ldr	r2, [r3, #0]
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	f022 0201 	bic.w	r2, r2, #1
 80027da:	601a      	str	r2, [r3, #0]
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	681a      	ldr	r2, [r3, #0]
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	681b      	ldr	r3, [r3, #0]
 80027e6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80027ea:	601a      	str	r2, [r3, #0]
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	681a      	ldr	r2, [r3, #0]
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80027fa:	601a      	str	r2, [r3, #0]
 80027fc:	f000 fd80 	bl	8003300 <HAL_RCC_GetPCLK1Freq>
 8002800:	60f8      	str	r0, [r7, #12]
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	685b      	ldr	r3, [r3, #4]
 8002806:	4a81      	ldr	r2, [pc, #516]	@ (8002a0c <HAL_I2C_Init+0x274>)
 8002808:	4293      	cmp	r3, r2
 800280a:	d807      	bhi.n	800281c <HAL_I2C_Init+0x84>
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	4a80      	ldr	r2, [pc, #512]	@ (8002a10 <HAL_I2C_Init+0x278>)
 8002810:	4293      	cmp	r3, r2
 8002812:	bf94      	ite	ls
 8002814:	2301      	movls	r3, #1
 8002816:	2300      	movhi	r3, #0
 8002818:	b2db      	uxtb	r3, r3
 800281a:	e006      	b.n	800282a <HAL_I2C_Init+0x92>
 800281c:	68fb      	ldr	r3, [r7, #12]
 800281e:	4a7d      	ldr	r2, [pc, #500]	@ (8002a14 <HAL_I2C_Init+0x27c>)
 8002820:	4293      	cmp	r3, r2
 8002822:	bf94      	ite	ls
 8002824:	2301      	movls	r3, #1
 8002826:	2300      	movhi	r3, #0
 8002828:	b2db      	uxtb	r3, r3
 800282a:	2b00      	cmp	r3, #0
 800282c:	d001      	beq.n	8002832 <HAL_I2C_Init+0x9a>
 800282e:	2301      	movs	r3, #1
 8002830:	e0e7      	b.n	8002a02 <HAL_I2C_Init+0x26a>
 8002832:	68fb      	ldr	r3, [r7, #12]
 8002834:	4a78      	ldr	r2, [pc, #480]	@ (8002a18 <HAL_I2C_Init+0x280>)
 8002836:	fba2 2303 	umull	r2, r3, r2, r3
 800283a:	0c9b      	lsrs	r3, r3, #18
 800283c:	60bb      	str	r3, [r7, #8]
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	685b      	ldr	r3, [r3, #4]
 8002844:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	681b      	ldr	r3, [r3, #0]
 800284c:	68ba      	ldr	r2, [r7, #8]
 800284e:	430a      	orrs	r2, r1
 8002850:	605a      	str	r2, [r3, #4]
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	681b      	ldr	r3, [r3, #0]
 8002856:	6a1b      	ldr	r3, [r3, #32]
 8002858:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	685b      	ldr	r3, [r3, #4]
 8002860:	4a6a      	ldr	r2, [pc, #424]	@ (8002a0c <HAL_I2C_Init+0x274>)
 8002862:	4293      	cmp	r3, r2
 8002864:	d802      	bhi.n	800286c <HAL_I2C_Init+0xd4>
 8002866:	68bb      	ldr	r3, [r7, #8]
 8002868:	3301      	adds	r3, #1
 800286a:	e009      	b.n	8002880 <HAL_I2C_Init+0xe8>
 800286c:	68bb      	ldr	r3, [r7, #8]
 800286e:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002872:	fb02 f303 	mul.w	r3, r2, r3
 8002876:	4a69      	ldr	r2, [pc, #420]	@ (8002a1c <HAL_I2C_Init+0x284>)
 8002878:	fba2 2303 	umull	r2, r3, r2, r3
 800287c:	099b      	lsrs	r3, r3, #6
 800287e:	3301      	adds	r3, #1
 8002880:	687a      	ldr	r2, [r7, #4]
 8002882:	6812      	ldr	r2, [r2, #0]
 8002884:	430b      	orrs	r3, r1
 8002886:	6213      	str	r3, [r2, #32]
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	69db      	ldr	r3, [r3, #28]
 800288e:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8002892:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8002896:	687b      	ldr	r3, [r7, #4]
 8002898:	685b      	ldr	r3, [r3, #4]
 800289a:	495c      	ldr	r1, [pc, #368]	@ (8002a0c <HAL_I2C_Init+0x274>)
 800289c:	428b      	cmp	r3, r1
 800289e:	d819      	bhi.n	80028d4 <HAL_I2C_Init+0x13c>
 80028a0:	68fb      	ldr	r3, [r7, #12]
 80028a2:	1e59      	subs	r1, r3, #1
 80028a4:	687b      	ldr	r3, [r7, #4]
 80028a6:	685b      	ldr	r3, [r3, #4]
 80028a8:	005b      	lsls	r3, r3, #1
 80028aa:	fbb1 f3f3 	udiv	r3, r1, r3
 80028ae:	1c59      	adds	r1, r3, #1
 80028b0:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80028b4:	400b      	ands	r3, r1
 80028b6:	2b00      	cmp	r3, #0
 80028b8:	d00a      	beq.n	80028d0 <HAL_I2C_Init+0x138>
 80028ba:	68fb      	ldr	r3, [r7, #12]
 80028bc:	1e59      	subs	r1, r3, #1
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	685b      	ldr	r3, [r3, #4]
 80028c2:	005b      	lsls	r3, r3, #1
 80028c4:	fbb1 f3f3 	udiv	r3, r1, r3
 80028c8:	3301      	adds	r3, #1
 80028ca:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80028ce:	e051      	b.n	8002974 <HAL_I2C_Init+0x1dc>
 80028d0:	2304      	movs	r3, #4
 80028d2:	e04f      	b.n	8002974 <HAL_I2C_Init+0x1dc>
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	689b      	ldr	r3, [r3, #8]
 80028d8:	2b00      	cmp	r3, #0
 80028da:	d111      	bne.n	8002900 <HAL_I2C_Init+0x168>
 80028dc:	68fb      	ldr	r3, [r7, #12]
 80028de:	1e58      	subs	r0, r3, #1
 80028e0:	687b      	ldr	r3, [r7, #4]
 80028e2:	6859      	ldr	r1, [r3, #4]
 80028e4:	460b      	mov	r3, r1
 80028e6:	005b      	lsls	r3, r3, #1
 80028e8:	440b      	add	r3, r1
 80028ea:	fbb0 f3f3 	udiv	r3, r0, r3
 80028ee:	3301      	adds	r3, #1
 80028f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80028f4:	2b00      	cmp	r3, #0
 80028f6:	bf0c      	ite	eq
 80028f8:	2301      	moveq	r3, #1
 80028fa:	2300      	movne	r3, #0
 80028fc:	b2db      	uxtb	r3, r3
 80028fe:	e012      	b.n	8002926 <HAL_I2C_Init+0x18e>
 8002900:	68fb      	ldr	r3, [r7, #12]
 8002902:	1e58      	subs	r0, r3, #1
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	6859      	ldr	r1, [r3, #4]
 8002908:	460b      	mov	r3, r1
 800290a:	009b      	lsls	r3, r3, #2
 800290c:	440b      	add	r3, r1
 800290e:	0099      	lsls	r1, r3, #2
 8002910:	440b      	add	r3, r1
 8002912:	fbb0 f3f3 	udiv	r3, r0, r3
 8002916:	3301      	adds	r3, #1
 8002918:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800291c:	2b00      	cmp	r3, #0
 800291e:	bf0c      	ite	eq
 8002920:	2301      	moveq	r3, #1
 8002922:	2300      	movne	r3, #0
 8002924:	b2db      	uxtb	r3, r3
 8002926:	2b00      	cmp	r3, #0
 8002928:	d001      	beq.n	800292e <HAL_I2C_Init+0x196>
 800292a:	2301      	movs	r3, #1
 800292c:	e022      	b.n	8002974 <HAL_I2C_Init+0x1dc>
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	689b      	ldr	r3, [r3, #8]
 8002932:	2b00      	cmp	r3, #0
 8002934:	d10e      	bne.n	8002954 <HAL_I2C_Init+0x1bc>
 8002936:	68fb      	ldr	r3, [r7, #12]
 8002938:	1e58      	subs	r0, r3, #1
 800293a:	687b      	ldr	r3, [r7, #4]
 800293c:	6859      	ldr	r1, [r3, #4]
 800293e:	460b      	mov	r3, r1
 8002940:	005b      	lsls	r3, r3, #1
 8002942:	440b      	add	r3, r1
 8002944:	fbb0 f3f3 	udiv	r3, r0, r3
 8002948:	3301      	adds	r3, #1
 800294a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800294e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002952:	e00f      	b.n	8002974 <HAL_I2C_Init+0x1dc>
 8002954:	68fb      	ldr	r3, [r7, #12]
 8002956:	1e58      	subs	r0, r3, #1
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	6859      	ldr	r1, [r3, #4]
 800295c:	460b      	mov	r3, r1
 800295e:	009b      	lsls	r3, r3, #2
 8002960:	440b      	add	r3, r1
 8002962:	0099      	lsls	r1, r3, #2
 8002964:	440b      	add	r3, r1
 8002966:	fbb0 f3f3 	udiv	r3, r0, r3
 800296a:	3301      	adds	r3, #1
 800296c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002970:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8002974:	6879      	ldr	r1, [r7, #4]
 8002976:	6809      	ldr	r1, [r1, #0]
 8002978:	4313      	orrs	r3, r2
 800297a:	61cb      	str	r3, [r1, #28]
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	681b      	ldr	r3, [r3, #0]
 8002982:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8002986:	687b      	ldr	r3, [r7, #4]
 8002988:	69da      	ldr	r2, [r3, #28]
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	6a1b      	ldr	r3, [r3, #32]
 800298e:	431a      	orrs	r2, r3
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	681b      	ldr	r3, [r3, #0]
 8002994:	430a      	orrs	r2, r1
 8002996:	601a      	str	r2, [r3, #0]
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	689b      	ldr	r3, [r3, #8]
 800299e:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80029a2:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80029a6:	687a      	ldr	r2, [r7, #4]
 80029a8:	6911      	ldr	r1, [r2, #16]
 80029aa:	687a      	ldr	r2, [r7, #4]
 80029ac:	68d2      	ldr	r2, [r2, #12]
 80029ae:	4311      	orrs	r1, r2
 80029b0:	687a      	ldr	r2, [r7, #4]
 80029b2:	6812      	ldr	r2, [r2, #0]
 80029b4:	430b      	orrs	r3, r1
 80029b6:	6093      	str	r3, [r2, #8]
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	68db      	ldr	r3, [r3, #12]
 80029be:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	695a      	ldr	r2, [r3, #20]
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	699b      	ldr	r3, [r3, #24]
 80029ca:	431a      	orrs	r2, r3
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	430a      	orrs	r2, r1
 80029d2:	60da      	str	r2, [r3, #12]
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	681a      	ldr	r2, [r3, #0]
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	f042 0201 	orr.w	r2, r2, #1
 80029e2:	601a      	str	r2, [r3, #0]
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	2200      	movs	r2, #0
 80029e8:	641a      	str	r2, [r3, #64]	@ 0x40
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	2220      	movs	r2, #32
 80029ee:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	2200      	movs	r2, #0
 80029f6:	631a      	str	r2, [r3, #48]	@ 0x30
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	2200      	movs	r2, #0
 80029fc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002a00:	2300      	movs	r3, #0
 8002a02:	4618      	mov	r0, r3
 8002a04:	3710      	adds	r7, #16
 8002a06:	46bd      	mov	sp, r7
 8002a08:	bd80      	pop	{r7, pc}
 8002a0a:	bf00      	nop
 8002a0c:	000186a0 	.word	0x000186a0
 8002a10:	001e847f 	.word	0x001e847f
 8002a14:	003d08ff 	.word	0x003d08ff
 8002a18:	431bde83 	.word	0x431bde83
 8002a1c:	10624dd3 	.word	0x10624dd3

08002a20 <HAL_RCC_OscConfig>:
 8002a20:	b580      	push	{r7, lr}
 8002a22:	b086      	sub	sp, #24
 8002a24:	af00      	add	r7, sp, #0
 8002a26:	6078      	str	r0, [r7, #4]
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	2b00      	cmp	r3, #0
 8002a2c:	d101      	bne.n	8002a32 <HAL_RCC_OscConfig+0x12>
 8002a2e:	2301      	movs	r3, #1
 8002a30:	e267      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	681b      	ldr	r3, [r3, #0]
 8002a36:	f003 0301 	and.w	r3, r3, #1
 8002a3a:	2b00      	cmp	r3, #0
 8002a3c:	d075      	beq.n	8002b2a <HAL_RCC_OscConfig+0x10a>
 8002a3e:	4b88      	ldr	r3, [pc, #544]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002a40:	689b      	ldr	r3, [r3, #8]
 8002a42:	f003 030c 	and.w	r3, r3, #12
 8002a46:	2b04      	cmp	r3, #4
 8002a48:	d00c      	beq.n	8002a64 <HAL_RCC_OscConfig+0x44>
 8002a4a:	4b85      	ldr	r3, [pc, #532]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002a4c:	689b      	ldr	r3, [r3, #8]
 8002a4e:	f003 030c 	and.w	r3, r3, #12
 8002a52:	2b08      	cmp	r3, #8
 8002a54:	d112      	bne.n	8002a7c <HAL_RCC_OscConfig+0x5c>
 8002a56:	4b82      	ldr	r3, [pc, #520]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002a58:	685b      	ldr	r3, [r3, #4]
 8002a5a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002a5e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002a62:	d10b      	bne.n	8002a7c <HAL_RCC_OscConfig+0x5c>
 8002a64:	4b7e      	ldr	r3, [pc, #504]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002a6c:	2b00      	cmp	r3, #0
 8002a6e:	d05b      	beq.n	8002b28 <HAL_RCC_OscConfig+0x108>
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	685b      	ldr	r3, [r3, #4]
 8002a74:	2b00      	cmp	r3, #0
 8002a76:	d157      	bne.n	8002b28 <HAL_RCC_OscConfig+0x108>
 8002a78:	2301      	movs	r3, #1
 8002a7a:	e242      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	685b      	ldr	r3, [r3, #4]
 8002a80:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002a84:	d106      	bne.n	8002a94 <HAL_RCC_OscConfig+0x74>
 8002a86:	4b76      	ldr	r3, [pc, #472]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002a88:	681b      	ldr	r3, [r3, #0]
 8002a8a:	4a75      	ldr	r2, [pc, #468]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002a8c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002a90:	6013      	str	r3, [r2, #0]
 8002a92:	e01d      	b.n	8002ad0 <HAL_RCC_OscConfig+0xb0>
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	685b      	ldr	r3, [r3, #4]
 8002a98:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002a9c:	d10c      	bne.n	8002ab8 <HAL_RCC_OscConfig+0x98>
 8002a9e:	4b70      	ldr	r3, [pc, #448]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002aa0:	681b      	ldr	r3, [r3, #0]
 8002aa2:	4a6f      	ldr	r2, [pc, #444]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002aa4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002aa8:	6013      	str	r3, [r2, #0]
 8002aaa:	4b6d      	ldr	r3, [pc, #436]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	4a6c      	ldr	r2, [pc, #432]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002ab0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002ab4:	6013      	str	r3, [r2, #0]
 8002ab6:	e00b      	b.n	8002ad0 <HAL_RCC_OscConfig+0xb0>
 8002ab8:	4b69      	ldr	r3, [pc, #420]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	4a68      	ldr	r2, [pc, #416]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002abe:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002ac2:	6013      	str	r3, [r2, #0]
 8002ac4:	4b66      	ldr	r3, [pc, #408]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002ac6:	681b      	ldr	r3, [r3, #0]
 8002ac8:	4a65      	ldr	r2, [pc, #404]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002aca:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002ace:	6013      	str	r3, [r2, #0]
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	685b      	ldr	r3, [r3, #4]
 8002ad4:	2b00      	cmp	r3, #0
 8002ad6:	d013      	beq.n	8002b00 <HAL_RCC_OscConfig+0xe0>
 8002ad8:	f7fe fee2 	bl	80018a0 <HAL_GetTick>
 8002adc:	6138      	str	r0, [r7, #16]
 8002ade:	e008      	b.n	8002af2 <HAL_RCC_OscConfig+0xd2>
 8002ae0:	f7fe fede 	bl	80018a0 <HAL_GetTick>
 8002ae4:	4602      	mov	r2, r0
 8002ae6:	693b      	ldr	r3, [r7, #16]
 8002ae8:	1ad3      	subs	r3, r2, r3
 8002aea:	2b64      	cmp	r3, #100	@ 0x64
 8002aec:	d901      	bls.n	8002af2 <HAL_RCC_OscConfig+0xd2>
 8002aee:	2303      	movs	r3, #3
 8002af0:	e207      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002af2:	4b5b      	ldr	r3, [pc, #364]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002af4:	681b      	ldr	r3, [r3, #0]
 8002af6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	d0f0      	beq.n	8002ae0 <HAL_RCC_OscConfig+0xc0>
 8002afe:	e014      	b.n	8002b2a <HAL_RCC_OscConfig+0x10a>
 8002b00:	f7fe fece 	bl	80018a0 <HAL_GetTick>
 8002b04:	6138      	str	r0, [r7, #16]
 8002b06:	e008      	b.n	8002b1a <HAL_RCC_OscConfig+0xfa>
 8002b08:	f7fe feca 	bl	80018a0 <HAL_GetTick>
 8002b0c:	4602      	mov	r2, r0
 8002b0e:	693b      	ldr	r3, [r7, #16]
 8002b10:	1ad3      	subs	r3, r2, r3
 8002b12:	2b64      	cmp	r3, #100	@ 0x64
 8002b14:	d901      	bls.n	8002b1a <HAL_RCC_OscConfig+0xfa>
 8002b16:	2303      	movs	r3, #3
 8002b18:	e1f3      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002b1a:	4b51      	ldr	r3, [pc, #324]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d1f0      	bne.n	8002b08 <HAL_RCC_OscConfig+0xe8>
 8002b26:	e000      	b.n	8002b2a <HAL_RCC_OscConfig+0x10a>
 8002b28:	bf00      	nop
 8002b2a:	687b      	ldr	r3, [r7, #4]
 8002b2c:	681b      	ldr	r3, [r3, #0]
 8002b2e:	f003 0302 	and.w	r3, r3, #2
 8002b32:	2b00      	cmp	r3, #0
 8002b34:	d063      	beq.n	8002bfe <HAL_RCC_OscConfig+0x1de>
 8002b36:	4b4a      	ldr	r3, [pc, #296]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002b38:	689b      	ldr	r3, [r3, #8]
 8002b3a:	f003 030c 	and.w	r3, r3, #12
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	d00b      	beq.n	8002b5a <HAL_RCC_OscConfig+0x13a>
 8002b42:	4b47      	ldr	r3, [pc, #284]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002b44:	689b      	ldr	r3, [r3, #8]
 8002b46:	f003 030c 	and.w	r3, r3, #12
 8002b4a:	2b08      	cmp	r3, #8
 8002b4c:	d11c      	bne.n	8002b88 <HAL_RCC_OscConfig+0x168>
 8002b4e:	4b44      	ldr	r3, [pc, #272]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002b50:	685b      	ldr	r3, [r3, #4]
 8002b52:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	d116      	bne.n	8002b88 <HAL_RCC_OscConfig+0x168>
 8002b5a:	4b41      	ldr	r3, [pc, #260]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	f003 0302 	and.w	r3, r3, #2
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	d005      	beq.n	8002b72 <HAL_RCC_OscConfig+0x152>
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	68db      	ldr	r3, [r3, #12]
 8002b6a:	2b01      	cmp	r3, #1
 8002b6c:	d001      	beq.n	8002b72 <HAL_RCC_OscConfig+0x152>
 8002b6e:	2301      	movs	r3, #1
 8002b70:	e1c7      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002b72:	4b3b      	ldr	r3, [pc, #236]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002b74:	681b      	ldr	r3, [r3, #0]
 8002b76:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	691b      	ldr	r3, [r3, #16]
 8002b7e:	00db      	lsls	r3, r3, #3
 8002b80:	4937      	ldr	r1, [pc, #220]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002b82:	4313      	orrs	r3, r2
 8002b84:	600b      	str	r3, [r1, #0]
 8002b86:	e03a      	b.n	8002bfe <HAL_RCC_OscConfig+0x1de>
 8002b88:	687b      	ldr	r3, [r7, #4]
 8002b8a:	68db      	ldr	r3, [r3, #12]
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	d020      	beq.n	8002bd2 <HAL_RCC_OscConfig+0x1b2>
 8002b90:	4b34      	ldr	r3, [pc, #208]	@ (8002c64 <HAL_RCC_OscConfig+0x244>)
 8002b92:	2201      	movs	r2, #1
 8002b94:	601a      	str	r2, [r3, #0]
 8002b96:	f7fe fe83 	bl	80018a0 <HAL_GetTick>
 8002b9a:	6138      	str	r0, [r7, #16]
 8002b9c:	e008      	b.n	8002bb0 <HAL_RCC_OscConfig+0x190>
 8002b9e:	f7fe fe7f 	bl	80018a0 <HAL_GetTick>
 8002ba2:	4602      	mov	r2, r0
 8002ba4:	693b      	ldr	r3, [r7, #16]
 8002ba6:	1ad3      	subs	r3, r2, r3
 8002ba8:	2b02      	cmp	r3, #2
 8002baa:	d901      	bls.n	8002bb0 <HAL_RCC_OscConfig+0x190>
 8002bac:	2303      	movs	r3, #3
 8002bae:	e1a8      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002bb0:	4b2b      	ldr	r3, [pc, #172]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	f003 0302 	and.w	r3, r3, #2
 8002bb8:	2b00      	cmp	r3, #0
 8002bba:	d0f0      	beq.n	8002b9e <HAL_RCC_OscConfig+0x17e>
 8002bbc:	4b28      	ldr	r3, [pc, #160]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002bbe:	681b      	ldr	r3, [r3, #0]
 8002bc0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	691b      	ldr	r3, [r3, #16]
 8002bc8:	00db      	lsls	r3, r3, #3
 8002bca:	4925      	ldr	r1, [pc, #148]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002bcc:	4313      	orrs	r3, r2
 8002bce:	600b      	str	r3, [r1, #0]
 8002bd0:	e015      	b.n	8002bfe <HAL_RCC_OscConfig+0x1de>
 8002bd2:	4b24      	ldr	r3, [pc, #144]	@ (8002c64 <HAL_RCC_OscConfig+0x244>)
 8002bd4:	2200      	movs	r2, #0
 8002bd6:	601a      	str	r2, [r3, #0]
 8002bd8:	f7fe fe62 	bl	80018a0 <HAL_GetTick>
 8002bdc:	6138      	str	r0, [r7, #16]
 8002bde:	e008      	b.n	8002bf2 <HAL_RCC_OscConfig+0x1d2>
 8002be0:	f7fe fe5e 	bl	80018a0 <HAL_GetTick>
 8002be4:	4602      	mov	r2, r0
 8002be6:	693b      	ldr	r3, [r7, #16]
 8002be8:	1ad3      	subs	r3, r2, r3
 8002bea:	2b02      	cmp	r3, #2
 8002bec:	d901      	bls.n	8002bf2 <HAL_RCC_OscConfig+0x1d2>
 8002bee:	2303      	movs	r3, #3
 8002bf0:	e187      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002bf2:	4b1b      	ldr	r3, [pc, #108]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	f003 0302 	and.w	r3, r3, #2
 8002bfa:	2b00      	cmp	r3, #0
 8002bfc:	d1f0      	bne.n	8002be0 <HAL_RCC_OscConfig+0x1c0>
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	681b      	ldr	r3, [r3, #0]
 8002c02:	f003 0308 	and.w	r3, r3, #8
 8002c06:	2b00      	cmp	r3, #0
 8002c08:	d036      	beq.n	8002c78 <HAL_RCC_OscConfig+0x258>
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	695b      	ldr	r3, [r3, #20]
 8002c0e:	2b00      	cmp	r3, #0
 8002c10:	d016      	beq.n	8002c40 <HAL_RCC_OscConfig+0x220>
 8002c12:	4b15      	ldr	r3, [pc, #84]	@ (8002c68 <HAL_RCC_OscConfig+0x248>)
 8002c14:	2201      	movs	r2, #1
 8002c16:	601a      	str	r2, [r3, #0]
 8002c18:	f7fe fe42 	bl	80018a0 <HAL_GetTick>
 8002c1c:	6138      	str	r0, [r7, #16]
 8002c1e:	e008      	b.n	8002c32 <HAL_RCC_OscConfig+0x212>
 8002c20:	f7fe fe3e 	bl	80018a0 <HAL_GetTick>
 8002c24:	4602      	mov	r2, r0
 8002c26:	693b      	ldr	r3, [r7, #16]
 8002c28:	1ad3      	subs	r3, r2, r3
 8002c2a:	2b02      	cmp	r3, #2
 8002c2c:	d901      	bls.n	8002c32 <HAL_RCC_OscConfig+0x212>
 8002c2e:	2303      	movs	r3, #3
 8002c30:	e167      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002c32:	4b0b      	ldr	r3, [pc, #44]	@ (8002c60 <HAL_RCC_OscConfig+0x240>)
 8002c34:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002c36:	f003 0302 	and.w	r3, r3, #2
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d0f0      	beq.n	8002c20 <HAL_RCC_OscConfig+0x200>
 8002c3e:	e01b      	b.n	8002c78 <HAL_RCC_OscConfig+0x258>
 8002c40:	4b09      	ldr	r3, [pc, #36]	@ (8002c68 <HAL_RCC_OscConfig+0x248>)
 8002c42:	2200      	movs	r2, #0
 8002c44:	601a      	str	r2, [r3, #0]
 8002c46:	f7fe fe2b 	bl	80018a0 <HAL_GetTick>
 8002c4a:	6138      	str	r0, [r7, #16]
 8002c4c:	e00e      	b.n	8002c6c <HAL_RCC_OscConfig+0x24c>
 8002c4e:	f7fe fe27 	bl	80018a0 <HAL_GetTick>
 8002c52:	4602      	mov	r2, r0
 8002c54:	693b      	ldr	r3, [r7, #16]
 8002c56:	1ad3      	subs	r3, r2, r3
 8002c58:	2b02      	cmp	r3, #2
 8002c5a:	d907      	bls.n	8002c6c <HAL_RCC_OscConfig+0x24c>
 8002c5c:	2303      	movs	r3, #3
 8002c5e:	e150      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002c60:	40023800 	.word	0x40023800
 8002c64:	42470000 	.word	0x42470000
 8002c68:	42470e80 	.word	0x42470e80
 8002c6c:	4b88      	ldr	r3, [pc, #544]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002c6e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002c70:	f003 0302 	and.w	r3, r3, #2
 8002c74:	2b00      	cmp	r3, #0
 8002c76:	d1ea      	bne.n	8002c4e <HAL_RCC_OscConfig+0x22e>
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	f003 0304 	and.w	r3, r3, #4
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	f000 8097 	beq.w	8002db4 <HAL_RCC_OscConfig+0x394>
 8002c86:	2300      	movs	r3, #0
 8002c88:	75fb      	strb	r3, [r7, #23]
 8002c8a:	4b81      	ldr	r3, [pc, #516]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002c8c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c8e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002c92:	2b00      	cmp	r3, #0
 8002c94:	d10f      	bne.n	8002cb6 <HAL_RCC_OscConfig+0x296>
 8002c96:	2300      	movs	r3, #0
 8002c98:	60bb      	str	r3, [r7, #8]
 8002c9a:	4b7d      	ldr	r3, [pc, #500]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002c9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c9e:	4a7c      	ldr	r2, [pc, #496]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002ca0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002ca4:	6413      	str	r3, [r2, #64]	@ 0x40
 8002ca6:	4b7a      	ldr	r3, [pc, #488]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002ca8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002caa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002cae:	60bb      	str	r3, [r7, #8]
 8002cb0:	68bb      	ldr	r3, [r7, #8]
 8002cb2:	2301      	movs	r3, #1
 8002cb4:	75fb      	strb	r3, [r7, #23]
 8002cb6:	4b77      	ldr	r3, [pc, #476]	@ (8002e94 <HAL_RCC_OscConfig+0x474>)
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d118      	bne.n	8002cf4 <HAL_RCC_OscConfig+0x2d4>
 8002cc2:	4b74      	ldr	r3, [pc, #464]	@ (8002e94 <HAL_RCC_OscConfig+0x474>)
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	4a73      	ldr	r2, [pc, #460]	@ (8002e94 <HAL_RCC_OscConfig+0x474>)
 8002cc8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002ccc:	6013      	str	r3, [r2, #0]
 8002cce:	f7fe fde7 	bl	80018a0 <HAL_GetTick>
 8002cd2:	6138      	str	r0, [r7, #16]
 8002cd4:	e008      	b.n	8002ce8 <HAL_RCC_OscConfig+0x2c8>
 8002cd6:	f7fe fde3 	bl	80018a0 <HAL_GetTick>
 8002cda:	4602      	mov	r2, r0
 8002cdc:	693b      	ldr	r3, [r7, #16]
 8002cde:	1ad3      	subs	r3, r2, r3
 8002ce0:	2b02      	cmp	r3, #2
 8002ce2:	d901      	bls.n	8002ce8 <HAL_RCC_OscConfig+0x2c8>
 8002ce4:	2303      	movs	r3, #3
 8002ce6:	e10c      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002ce8:	4b6a      	ldr	r3, [pc, #424]	@ (8002e94 <HAL_RCC_OscConfig+0x474>)
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	d0f0      	beq.n	8002cd6 <HAL_RCC_OscConfig+0x2b6>
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	689b      	ldr	r3, [r3, #8]
 8002cf8:	2b01      	cmp	r3, #1
 8002cfa:	d106      	bne.n	8002d0a <HAL_RCC_OscConfig+0x2ea>
 8002cfc:	4b64      	ldr	r3, [pc, #400]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002cfe:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d00:	4a63      	ldr	r2, [pc, #396]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d02:	f043 0301 	orr.w	r3, r3, #1
 8002d06:	6713      	str	r3, [r2, #112]	@ 0x70
 8002d08:	e01c      	b.n	8002d44 <HAL_RCC_OscConfig+0x324>
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	689b      	ldr	r3, [r3, #8]
 8002d0e:	2b05      	cmp	r3, #5
 8002d10:	d10c      	bne.n	8002d2c <HAL_RCC_OscConfig+0x30c>
 8002d12:	4b5f      	ldr	r3, [pc, #380]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d14:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d16:	4a5e      	ldr	r2, [pc, #376]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d18:	f043 0304 	orr.w	r3, r3, #4
 8002d1c:	6713      	str	r3, [r2, #112]	@ 0x70
 8002d1e:	4b5c      	ldr	r3, [pc, #368]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d20:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d22:	4a5b      	ldr	r2, [pc, #364]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d24:	f043 0301 	orr.w	r3, r3, #1
 8002d28:	6713      	str	r3, [r2, #112]	@ 0x70
 8002d2a:	e00b      	b.n	8002d44 <HAL_RCC_OscConfig+0x324>
 8002d2c:	4b58      	ldr	r3, [pc, #352]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d2e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d30:	4a57      	ldr	r2, [pc, #348]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d32:	f023 0301 	bic.w	r3, r3, #1
 8002d36:	6713      	str	r3, [r2, #112]	@ 0x70
 8002d38:	4b55      	ldr	r3, [pc, #340]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d3a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d3c:	4a54      	ldr	r2, [pc, #336]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d3e:	f023 0304 	bic.w	r3, r3, #4
 8002d42:	6713      	str	r3, [r2, #112]	@ 0x70
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	689b      	ldr	r3, [r3, #8]
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d015      	beq.n	8002d78 <HAL_RCC_OscConfig+0x358>
 8002d4c:	f7fe fda8 	bl	80018a0 <HAL_GetTick>
 8002d50:	6138      	str	r0, [r7, #16]
 8002d52:	e00a      	b.n	8002d6a <HAL_RCC_OscConfig+0x34a>
 8002d54:	f7fe fda4 	bl	80018a0 <HAL_GetTick>
 8002d58:	4602      	mov	r2, r0
 8002d5a:	693b      	ldr	r3, [r7, #16]
 8002d5c:	1ad3      	subs	r3, r2, r3
 8002d5e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002d62:	4293      	cmp	r3, r2
 8002d64:	d901      	bls.n	8002d6a <HAL_RCC_OscConfig+0x34a>
 8002d66:	2303      	movs	r3, #3
 8002d68:	e0cb      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002d6a:	4b49      	ldr	r3, [pc, #292]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d6c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d6e:	f003 0302 	and.w	r3, r3, #2
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d0ee      	beq.n	8002d54 <HAL_RCC_OscConfig+0x334>
 8002d76:	e014      	b.n	8002da2 <HAL_RCC_OscConfig+0x382>
 8002d78:	f7fe fd92 	bl	80018a0 <HAL_GetTick>
 8002d7c:	6138      	str	r0, [r7, #16]
 8002d7e:	e00a      	b.n	8002d96 <HAL_RCC_OscConfig+0x376>
 8002d80:	f7fe fd8e 	bl	80018a0 <HAL_GetTick>
 8002d84:	4602      	mov	r2, r0
 8002d86:	693b      	ldr	r3, [r7, #16]
 8002d88:	1ad3      	subs	r3, r2, r3
 8002d8a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002d8e:	4293      	cmp	r3, r2
 8002d90:	d901      	bls.n	8002d96 <HAL_RCC_OscConfig+0x376>
 8002d92:	2303      	movs	r3, #3
 8002d94:	e0b5      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002d96:	4b3e      	ldr	r3, [pc, #248]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002d98:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002d9a:	f003 0302 	and.w	r3, r3, #2
 8002d9e:	2b00      	cmp	r3, #0
 8002da0:	d1ee      	bne.n	8002d80 <HAL_RCC_OscConfig+0x360>
 8002da2:	7dfb      	ldrb	r3, [r7, #23]
 8002da4:	2b01      	cmp	r3, #1
 8002da6:	d105      	bne.n	8002db4 <HAL_RCC_OscConfig+0x394>
 8002da8:	4b39      	ldr	r3, [pc, #228]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002daa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dac:	4a38      	ldr	r2, [pc, #224]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002dae:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002db2:	6413      	str	r3, [r2, #64]	@ 0x40
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	699b      	ldr	r3, [r3, #24]
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	f000 80a1 	beq.w	8002f00 <HAL_RCC_OscConfig+0x4e0>
 8002dbe:	4b34      	ldr	r3, [pc, #208]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002dc0:	689b      	ldr	r3, [r3, #8]
 8002dc2:	f003 030c 	and.w	r3, r3, #12
 8002dc6:	2b08      	cmp	r3, #8
 8002dc8:	d05c      	beq.n	8002e84 <HAL_RCC_OscConfig+0x464>
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	699b      	ldr	r3, [r3, #24]
 8002dce:	2b02      	cmp	r3, #2
 8002dd0:	d141      	bne.n	8002e56 <HAL_RCC_OscConfig+0x436>
 8002dd2:	4b31      	ldr	r3, [pc, #196]	@ (8002e98 <HAL_RCC_OscConfig+0x478>)
 8002dd4:	2200      	movs	r2, #0
 8002dd6:	601a      	str	r2, [r3, #0]
 8002dd8:	f7fe fd62 	bl	80018a0 <HAL_GetTick>
 8002ddc:	6138      	str	r0, [r7, #16]
 8002dde:	e008      	b.n	8002df2 <HAL_RCC_OscConfig+0x3d2>
 8002de0:	f7fe fd5e 	bl	80018a0 <HAL_GetTick>
 8002de4:	4602      	mov	r2, r0
 8002de6:	693b      	ldr	r3, [r7, #16]
 8002de8:	1ad3      	subs	r3, r2, r3
 8002dea:	2b02      	cmp	r3, #2
 8002dec:	d901      	bls.n	8002df2 <HAL_RCC_OscConfig+0x3d2>
 8002dee:	2303      	movs	r3, #3
 8002df0:	e087      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002df2:	4b27      	ldr	r3, [pc, #156]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002dfa:	2b00      	cmp	r3, #0
 8002dfc:	d1f0      	bne.n	8002de0 <HAL_RCC_OscConfig+0x3c0>
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	69da      	ldr	r2, [r3, #28]
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	6a1b      	ldr	r3, [r3, #32]
 8002e06:	431a      	orrs	r2, r3
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e0c:	019b      	lsls	r3, r3, #6
 8002e0e:	431a      	orrs	r2, r3
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e14:	085b      	lsrs	r3, r3, #1
 8002e16:	3b01      	subs	r3, #1
 8002e18:	041b      	lsls	r3, r3, #16
 8002e1a:	431a      	orrs	r2, r3
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e20:	061b      	lsls	r3, r3, #24
 8002e22:	491b      	ldr	r1, [pc, #108]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002e24:	4313      	orrs	r3, r2
 8002e26:	604b      	str	r3, [r1, #4]
 8002e28:	4b1b      	ldr	r3, [pc, #108]	@ (8002e98 <HAL_RCC_OscConfig+0x478>)
 8002e2a:	2201      	movs	r2, #1
 8002e2c:	601a      	str	r2, [r3, #0]
 8002e2e:	f7fe fd37 	bl	80018a0 <HAL_GetTick>
 8002e32:	6138      	str	r0, [r7, #16]
 8002e34:	e008      	b.n	8002e48 <HAL_RCC_OscConfig+0x428>
 8002e36:	f7fe fd33 	bl	80018a0 <HAL_GetTick>
 8002e3a:	4602      	mov	r2, r0
 8002e3c:	693b      	ldr	r3, [r7, #16]
 8002e3e:	1ad3      	subs	r3, r2, r3
 8002e40:	2b02      	cmp	r3, #2
 8002e42:	d901      	bls.n	8002e48 <HAL_RCC_OscConfig+0x428>
 8002e44:	2303      	movs	r3, #3
 8002e46:	e05c      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002e48:	4b11      	ldr	r3, [pc, #68]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002e50:	2b00      	cmp	r3, #0
 8002e52:	d0f0      	beq.n	8002e36 <HAL_RCC_OscConfig+0x416>
 8002e54:	e054      	b.n	8002f00 <HAL_RCC_OscConfig+0x4e0>
 8002e56:	4b10      	ldr	r3, [pc, #64]	@ (8002e98 <HAL_RCC_OscConfig+0x478>)
 8002e58:	2200      	movs	r2, #0
 8002e5a:	601a      	str	r2, [r3, #0]
 8002e5c:	f7fe fd20 	bl	80018a0 <HAL_GetTick>
 8002e60:	6138      	str	r0, [r7, #16]
 8002e62:	e008      	b.n	8002e76 <HAL_RCC_OscConfig+0x456>
 8002e64:	f7fe fd1c 	bl	80018a0 <HAL_GetTick>
 8002e68:	4602      	mov	r2, r0
 8002e6a:	693b      	ldr	r3, [r7, #16]
 8002e6c:	1ad3      	subs	r3, r2, r3
 8002e6e:	2b02      	cmp	r3, #2
 8002e70:	d901      	bls.n	8002e76 <HAL_RCC_OscConfig+0x456>
 8002e72:	2303      	movs	r3, #3
 8002e74:	e045      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002e76:	4b06      	ldr	r3, [pc, #24]	@ (8002e90 <HAL_RCC_OscConfig+0x470>)
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	d1f0      	bne.n	8002e64 <HAL_RCC_OscConfig+0x444>
 8002e82:	e03d      	b.n	8002f00 <HAL_RCC_OscConfig+0x4e0>
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	699b      	ldr	r3, [r3, #24]
 8002e88:	2b01      	cmp	r3, #1
 8002e8a:	d107      	bne.n	8002e9c <HAL_RCC_OscConfig+0x47c>
 8002e8c:	2301      	movs	r3, #1
 8002e8e:	e038      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002e90:	40023800 	.word	0x40023800
 8002e94:	40007000 	.word	0x40007000
 8002e98:	42470060 	.word	0x42470060
 8002e9c:	4b1b      	ldr	r3, [pc, #108]	@ (8002f0c <HAL_RCC_OscConfig+0x4ec>)
 8002e9e:	685b      	ldr	r3, [r3, #4]
 8002ea0:	60fb      	str	r3, [r7, #12]
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	699b      	ldr	r3, [r3, #24]
 8002ea6:	2b01      	cmp	r3, #1
 8002ea8:	d028      	beq.n	8002efc <HAL_RCC_OscConfig+0x4dc>
 8002eaa:	68fb      	ldr	r3, [r7, #12]
 8002eac:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	69db      	ldr	r3, [r3, #28]
 8002eb4:	429a      	cmp	r2, r3
 8002eb6:	d121      	bne.n	8002efc <HAL_RCC_OscConfig+0x4dc>
 8002eb8:	68fb      	ldr	r3, [r7, #12]
 8002eba:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	6a1b      	ldr	r3, [r3, #32]
 8002ec2:	429a      	cmp	r2, r3
 8002ec4:	d11a      	bne.n	8002efc <HAL_RCC_OscConfig+0x4dc>
 8002ec6:	68fa      	ldr	r2, [r7, #12]
 8002ec8:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8002ecc:	4013      	ands	r3, r2
 8002ece:	687a      	ldr	r2, [r7, #4]
 8002ed0:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8002ed2:	0192      	lsls	r2, r2, #6
 8002ed4:	4293      	cmp	r3, r2
 8002ed6:	d111      	bne.n	8002efc <HAL_RCC_OscConfig+0x4dc>
 8002ed8:	68fb      	ldr	r3, [r7, #12]
 8002eda:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ee2:	085b      	lsrs	r3, r3, #1
 8002ee4:	3b01      	subs	r3, #1
 8002ee6:	041b      	lsls	r3, r3, #16
 8002ee8:	429a      	cmp	r2, r3
 8002eea:	d107      	bne.n	8002efc <HAL_RCC_OscConfig+0x4dc>
 8002eec:	68fb      	ldr	r3, [r7, #12]
 8002eee:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002ef6:	061b      	lsls	r3, r3, #24
 8002ef8:	429a      	cmp	r2, r3
 8002efa:	d001      	beq.n	8002f00 <HAL_RCC_OscConfig+0x4e0>
 8002efc:	2301      	movs	r3, #1
 8002efe:	e000      	b.n	8002f02 <HAL_RCC_OscConfig+0x4e2>
 8002f00:	2300      	movs	r3, #0
 8002f02:	4618      	mov	r0, r3
 8002f04:	3718      	adds	r7, #24
 8002f06:	46bd      	mov	sp, r7
 8002f08:	bd80      	pop	{r7, pc}
 8002f0a:	bf00      	nop
 8002f0c:	40023800 	.word	0x40023800

08002f10 <HAL_RCC_ClockConfig>:
 8002f10:	b580      	push	{r7, lr}
 8002f12:	b084      	sub	sp, #16
 8002f14:	af00      	add	r7, sp, #0
 8002f16:	6078      	str	r0, [r7, #4]
 8002f18:	6039      	str	r1, [r7, #0]
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	d101      	bne.n	8002f24 <HAL_RCC_ClockConfig+0x14>
 8002f20:	2301      	movs	r3, #1
 8002f22:	e0cc      	b.n	80030be <HAL_RCC_ClockConfig+0x1ae>
 8002f24:	4b68      	ldr	r3, [pc, #416]	@ (80030c8 <HAL_RCC_ClockConfig+0x1b8>)
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	f003 0307 	and.w	r3, r3, #7
 8002f2c:	683a      	ldr	r2, [r7, #0]
 8002f2e:	429a      	cmp	r2, r3
 8002f30:	d90c      	bls.n	8002f4c <HAL_RCC_ClockConfig+0x3c>
 8002f32:	4b65      	ldr	r3, [pc, #404]	@ (80030c8 <HAL_RCC_ClockConfig+0x1b8>)
 8002f34:	683a      	ldr	r2, [r7, #0]
 8002f36:	b2d2      	uxtb	r2, r2
 8002f38:	701a      	strb	r2, [r3, #0]
 8002f3a:	4b63      	ldr	r3, [pc, #396]	@ (80030c8 <HAL_RCC_ClockConfig+0x1b8>)
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	f003 0307 	and.w	r3, r3, #7
 8002f42:	683a      	ldr	r2, [r7, #0]
 8002f44:	429a      	cmp	r2, r3
 8002f46:	d001      	beq.n	8002f4c <HAL_RCC_ClockConfig+0x3c>
 8002f48:	2301      	movs	r3, #1
 8002f4a:	e0b8      	b.n	80030be <HAL_RCC_ClockConfig+0x1ae>
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	681b      	ldr	r3, [r3, #0]
 8002f50:	f003 0302 	and.w	r3, r3, #2
 8002f54:	2b00      	cmp	r3, #0
 8002f56:	d020      	beq.n	8002f9a <HAL_RCC_ClockConfig+0x8a>
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	f003 0304 	and.w	r3, r3, #4
 8002f60:	2b00      	cmp	r3, #0
 8002f62:	d005      	beq.n	8002f70 <HAL_RCC_ClockConfig+0x60>
 8002f64:	4b59      	ldr	r3, [pc, #356]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002f66:	689b      	ldr	r3, [r3, #8]
 8002f68:	4a58      	ldr	r2, [pc, #352]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002f6a:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002f6e:	6093      	str	r3, [r2, #8]
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	681b      	ldr	r3, [r3, #0]
 8002f74:	f003 0308 	and.w	r3, r3, #8
 8002f78:	2b00      	cmp	r3, #0
 8002f7a:	d005      	beq.n	8002f88 <HAL_RCC_ClockConfig+0x78>
 8002f7c:	4b53      	ldr	r3, [pc, #332]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002f7e:	689b      	ldr	r3, [r3, #8]
 8002f80:	4a52      	ldr	r2, [pc, #328]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002f82:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8002f86:	6093      	str	r3, [r2, #8]
 8002f88:	4b50      	ldr	r3, [pc, #320]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002f8a:	689b      	ldr	r3, [r3, #8]
 8002f8c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	689b      	ldr	r3, [r3, #8]
 8002f94:	494d      	ldr	r1, [pc, #308]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002f96:	4313      	orrs	r3, r2
 8002f98:	608b      	str	r3, [r1, #8]
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	f003 0301 	and.w	r3, r3, #1
 8002fa2:	2b00      	cmp	r3, #0
 8002fa4:	d044      	beq.n	8003030 <HAL_RCC_ClockConfig+0x120>
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	685b      	ldr	r3, [r3, #4]
 8002faa:	2b01      	cmp	r3, #1
 8002fac:	d107      	bne.n	8002fbe <HAL_RCC_ClockConfig+0xae>
 8002fae:	4b47      	ldr	r3, [pc, #284]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002fb0:	681b      	ldr	r3, [r3, #0]
 8002fb2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002fb6:	2b00      	cmp	r3, #0
 8002fb8:	d119      	bne.n	8002fee <HAL_RCC_ClockConfig+0xde>
 8002fba:	2301      	movs	r3, #1
 8002fbc:	e07f      	b.n	80030be <HAL_RCC_ClockConfig+0x1ae>
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	685b      	ldr	r3, [r3, #4]
 8002fc2:	2b02      	cmp	r3, #2
 8002fc4:	d003      	beq.n	8002fce <HAL_RCC_ClockConfig+0xbe>
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	685b      	ldr	r3, [r3, #4]
 8002fca:	2b03      	cmp	r3, #3
 8002fcc:	d107      	bne.n	8002fde <HAL_RCC_ClockConfig+0xce>
 8002fce:	4b3f      	ldr	r3, [pc, #252]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002fd6:	2b00      	cmp	r3, #0
 8002fd8:	d109      	bne.n	8002fee <HAL_RCC_ClockConfig+0xde>
 8002fda:	2301      	movs	r3, #1
 8002fdc:	e06f      	b.n	80030be <HAL_RCC_ClockConfig+0x1ae>
 8002fde:	4b3b      	ldr	r3, [pc, #236]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002fe0:	681b      	ldr	r3, [r3, #0]
 8002fe2:	f003 0302 	and.w	r3, r3, #2
 8002fe6:	2b00      	cmp	r3, #0
 8002fe8:	d101      	bne.n	8002fee <HAL_RCC_ClockConfig+0xde>
 8002fea:	2301      	movs	r3, #1
 8002fec:	e067      	b.n	80030be <HAL_RCC_ClockConfig+0x1ae>
 8002fee:	4b37      	ldr	r3, [pc, #220]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002ff0:	689b      	ldr	r3, [r3, #8]
 8002ff2:	f023 0203 	bic.w	r2, r3, #3
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	685b      	ldr	r3, [r3, #4]
 8002ffa:	4934      	ldr	r1, [pc, #208]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8002ffc:	4313      	orrs	r3, r2
 8002ffe:	608b      	str	r3, [r1, #8]
 8003000:	f7fe fc4e 	bl	80018a0 <HAL_GetTick>
 8003004:	60f8      	str	r0, [r7, #12]
 8003006:	e00a      	b.n	800301e <HAL_RCC_ClockConfig+0x10e>
 8003008:	f7fe fc4a 	bl	80018a0 <HAL_GetTick>
 800300c:	4602      	mov	r2, r0
 800300e:	68fb      	ldr	r3, [r7, #12]
 8003010:	1ad3      	subs	r3, r2, r3
 8003012:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003016:	4293      	cmp	r3, r2
 8003018:	d901      	bls.n	800301e <HAL_RCC_ClockConfig+0x10e>
 800301a:	2303      	movs	r3, #3
 800301c:	e04f      	b.n	80030be <HAL_RCC_ClockConfig+0x1ae>
 800301e:	4b2b      	ldr	r3, [pc, #172]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8003020:	689b      	ldr	r3, [r3, #8]
 8003022:	f003 020c 	and.w	r2, r3, #12
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	685b      	ldr	r3, [r3, #4]
 800302a:	009b      	lsls	r3, r3, #2
 800302c:	429a      	cmp	r2, r3
 800302e:	d1eb      	bne.n	8003008 <HAL_RCC_ClockConfig+0xf8>
 8003030:	4b25      	ldr	r3, [pc, #148]	@ (80030c8 <HAL_RCC_ClockConfig+0x1b8>)
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	f003 0307 	and.w	r3, r3, #7
 8003038:	683a      	ldr	r2, [r7, #0]
 800303a:	429a      	cmp	r2, r3
 800303c:	d20c      	bcs.n	8003058 <HAL_RCC_ClockConfig+0x148>
 800303e:	4b22      	ldr	r3, [pc, #136]	@ (80030c8 <HAL_RCC_ClockConfig+0x1b8>)
 8003040:	683a      	ldr	r2, [r7, #0]
 8003042:	b2d2      	uxtb	r2, r2
 8003044:	701a      	strb	r2, [r3, #0]
 8003046:	4b20      	ldr	r3, [pc, #128]	@ (80030c8 <HAL_RCC_ClockConfig+0x1b8>)
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	f003 0307 	and.w	r3, r3, #7
 800304e:	683a      	ldr	r2, [r7, #0]
 8003050:	429a      	cmp	r2, r3
 8003052:	d001      	beq.n	8003058 <HAL_RCC_ClockConfig+0x148>
 8003054:	2301      	movs	r3, #1
 8003056:	e032      	b.n	80030be <HAL_RCC_ClockConfig+0x1ae>
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	681b      	ldr	r3, [r3, #0]
 800305c:	f003 0304 	and.w	r3, r3, #4
 8003060:	2b00      	cmp	r3, #0
 8003062:	d008      	beq.n	8003076 <HAL_RCC_ClockConfig+0x166>
 8003064:	4b19      	ldr	r3, [pc, #100]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8003066:	689b      	ldr	r3, [r3, #8]
 8003068:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	68db      	ldr	r3, [r3, #12]
 8003070:	4916      	ldr	r1, [pc, #88]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8003072:	4313      	orrs	r3, r2
 8003074:	608b      	str	r3, [r1, #8]
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	f003 0308 	and.w	r3, r3, #8
 800307e:	2b00      	cmp	r3, #0
 8003080:	d009      	beq.n	8003096 <HAL_RCC_ClockConfig+0x186>
 8003082:	4b12      	ldr	r3, [pc, #72]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8003084:	689b      	ldr	r3, [r3, #8]
 8003086:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	691b      	ldr	r3, [r3, #16]
 800308e:	00db      	lsls	r3, r3, #3
 8003090:	490e      	ldr	r1, [pc, #56]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 8003092:	4313      	orrs	r3, r2
 8003094:	608b      	str	r3, [r1, #8]
 8003096:	f000 f821 	bl	80030dc <HAL_RCC_GetSysClockFreq>
 800309a:	4602      	mov	r2, r0
 800309c:	4b0b      	ldr	r3, [pc, #44]	@ (80030cc <HAL_RCC_ClockConfig+0x1bc>)
 800309e:	689b      	ldr	r3, [r3, #8]
 80030a0:	091b      	lsrs	r3, r3, #4
 80030a2:	f003 030f 	and.w	r3, r3, #15
 80030a6:	490a      	ldr	r1, [pc, #40]	@ (80030d0 <HAL_RCC_ClockConfig+0x1c0>)
 80030a8:	5ccb      	ldrb	r3, [r1, r3]
 80030aa:	fa22 f303 	lsr.w	r3, r2, r3
 80030ae:	4a09      	ldr	r2, [pc, #36]	@ (80030d4 <HAL_RCC_ClockConfig+0x1c4>)
 80030b0:	6013      	str	r3, [r2, #0]
 80030b2:	4b09      	ldr	r3, [pc, #36]	@ (80030d8 <HAL_RCC_ClockConfig+0x1c8>)
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	4618      	mov	r0, r3
 80030b8:	f7fe fbae 	bl	8001818 <HAL_InitTick>
 80030bc:	2300      	movs	r3, #0
 80030be:	4618      	mov	r0, r3
 80030c0:	3710      	adds	r7, #16
 80030c2:	46bd      	mov	sp, r7
 80030c4:	bd80      	pop	{r7, pc}
 80030c6:	bf00      	nop
 80030c8:	40023c00 	.word	0x40023c00
 80030cc:	40023800 	.word	0x40023800
 80030d0:	08006160 	.word	0x08006160
 80030d4:	20000000 	.word	0x20000000
 80030d8:	20000004 	.word	0x20000004

080030dc <HAL_RCC_GetSysClockFreq>:
 80030dc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80030e0:	b094      	sub	sp, #80	@ 0x50
 80030e2:	af00      	add	r7, sp, #0
 80030e4:	2300      	movs	r3, #0
 80030e6:	647b      	str	r3, [r7, #68]	@ 0x44
 80030e8:	2300      	movs	r3, #0
 80030ea:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80030ec:	2300      	movs	r3, #0
 80030ee:	643b      	str	r3, [r7, #64]	@ 0x40
 80030f0:	2300      	movs	r3, #0
 80030f2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80030f4:	4b79      	ldr	r3, [pc, #484]	@ (80032dc <HAL_RCC_GetSysClockFreq+0x200>)
 80030f6:	689b      	ldr	r3, [r3, #8]
 80030f8:	f003 030c 	and.w	r3, r3, #12
 80030fc:	2b08      	cmp	r3, #8
 80030fe:	d00d      	beq.n	800311c <HAL_RCC_GetSysClockFreq+0x40>
 8003100:	2b08      	cmp	r3, #8
 8003102:	f200 80e1 	bhi.w	80032c8 <HAL_RCC_GetSysClockFreq+0x1ec>
 8003106:	2b00      	cmp	r3, #0
 8003108:	d002      	beq.n	8003110 <HAL_RCC_GetSysClockFreq+0x34>
 800310a:	2b04      	cmp	r3, #4
 800310c:	d003      	beq.n	8003116 <HAL_RCC_GetSysClockFreq+0x3a>
 800310e:	e0db      	b.n	80032c8 <HAL_RCC_GetSysClockFreq+0x1ec>
 8003110:	4b73      	ldr	r3, [pc, #460]	@ (80032e0 <HAL_RCC_GetSysClockFreq+0x204>)
 8003112:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003114:	e0db      	b.n	80032ce <HAL_RCC_GetSysClockFreq+0x1f2>
 8003116:	4b73      	ldr	r3, [pc, #460]	@ (80032e4 <HAL_RCC_GetSysClockFreq+0x208>)
 8003118:	64bb      	str	r3, [r7, #72]	@ 0x48
 800311a:	e0d8      	b.n	80032ce <HAL_RCC_GetSysClockFreq+0x1f2>
 800311c:	4b6f      	ldr	r3, [pc, #444]	@ (80032dc <HAL_RCC_GetSysClockFreq+0x200>)
 800311e:	685b      	ldr	r3, [r3, #4]
 8003120:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003124:	647b      	str	r3, [r7, #68]	@ 0x44
 8003126:	4b6d      	ldr	r3, [pc, #436]	@ (80032dc <HAL_RCC_GetSysClockFreq+0x200>)
 8003128:	685b      	ldr	r3, [r3, #4]
 800312a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800312e:	2b00      	cmp	r3, #0
 8003130:	d063      	beq.n	80031fa <HAL_RCC_GetSysClockFreq+0x11e>
 8003132:	4b6a      	ldr	r3, [pc, #424]	@ (80032dc <HAL_RCC_GetSysClockFreq+0x200>)
 8003134:	685b      	ldr	r3, [r3, #4]
 8003136:	099b      	lsrs	r3, r3, #6
 8003138:	2200      	movs	r2, #0
 800313a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800313c:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800313e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003140:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003144:	633b      	str	r3, [r7, #48]	@ 0x30
 8003146:	2300      	movs	r3, #0
 8003148:	637b      	str	r3, [r7, #52]	@ 0x34
 800314a:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 800314e:	4622      	mov	r2, r4
 8003150:	462b      	mov	r3, r5
 8003152:	f04f 0000 	mov.w	r0, #0
 8003156:	f04f 0100 	mov.w	r1, #0
 800315a:	0159      	lsls	r1, r3, #5
 800315c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003160:	0150      	lsls	r0, r2, #5
 8003162:	4602      	mov	r2, r0
 8003164:	460b      	mov	r3, r1
 8003166:	4621      	mov	r1, r4
 8003168:	1a51      	subs	r1, r2, r1
 800316a:	6139      	str	r1, [r7, #16]
 800316c:	4629      	mov	r1, r5
 800316e:	eb63 0301 	sbc.w	r3, r3, r1
 8003172:	617b      	str	r3, [r7, #20]
 8003174:	f04f 0200 	mov.w	r2, #0
 8003178:	f04f 0300 	mov.w	r3, #0
 800317c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003180:	4659      	mov	r1, fp
 8003182:	018b      	lsls	r3, r1, #6
 8003184:	4651      	mov	r1, sl
 8003186:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800318a:	4651      	mov	r1, sl
 800318c:	018a      	lsls	r2, r1, #6
 800318e:	4651      	mov	r1, sl
 8003190:	ebb2 0801 	subs.w	r8, r2, r1
 8003194:	4659      	mov	r1, fp
 8003196:	eb63 0901 	sbc.w	r9, r3, r1
 800319a:	f04f 0200 	mov.w	r2, #0
 800319e:	f04f 0300 	mov.w	r3, #0
 80031a2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80031a6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80031aa:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80031ae:	4690      	mov	r8, r2
 80031b0:	4699      	mov	r9, r3
 80031b2:	4623      	mov	r3, r4
 80031b4:	eb18 0303 	adds.w	r3, r8, r3
 80031b8:	60bb      	str	r3, [r7, #8]
 80031ba:	462b      	mov	r3, r5
 80031bc:	eb49 0303 	adc.w	r3, r9, r3
 80031c0:	60fb      	str	r3, [r7, #12]
 80031c2:	f04f 0200 	mov.w	r2, #0
 80031c6:	f04f 0300 	mov.w	r3, #0
 80031ca:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80031ce:	4629      	mov	r1, r5
 80031d0:	024b      	lsls	r3, r1, #9
 80031d2:	4621      	mov	r1, r4
 80031d4:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80031d8:	4621      	mov	r1, r4
 80031da:	024a      	lsls	r2, r1, #9
 80031dc:	4610      	mov	r0, r2
 80031de:	4619      	mov	r1, r3
 80031e0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80031e2:	2200      	movs	r2, #0
 80031e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80031e6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80031e8:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80031ec:	f7fd f850 	bl	8000290 <__aeabi_uldivmod>
 80031f0:	4602      	mov	r2, r0
 80031f2:	460b      	mov	r3, r1
 80031f4:	4613      	mov	r3, r2
 80031f6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80031f8:	e058      	b.n	80032ac <HAL_RCC_GetSysClockFreq+0x1d0>
 80031fa:	4b38      	ldr	r3, [pc, #224]	@ (80032dc <HAL_RCC_GetSysClockFreq+0x200>)
 80031fc:	685b      	ldr	r3, [r3, #4]
 80031fe:	099b      	lsrs	r3, r3, #6
 8003200:	2200      	movs	r2, #0
 8003202:	4618      	mov	r0, r3
 8003204:	4611      	mov	r1, r2
 8003206:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800320a:	623b      	str	r3, [r7, #32]
 800320c:	2300      	movs	r3, #0
 800320e:	627b      	str	r3, [r7, #36]	@ 0x24
 8003210:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8003214:	4642      	mov	r2, r8
 8003216:	464b      	mov	r3, r9
 8003218:	f04f 0000 	mov.w	r0, #0
 800321c:	f04f 0100 	mov.w	r1, #0
 8003220:	0159      	lsls	r1, r3, #5
 8003222:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003226:	0150      	lsls	r0, r2, #5
 8003228:	4602      	mov	r2, r0
 800322a:	460b      	mov	r3, r1
 800322c:	4641      	mov	r1, r8
 800322e:	ebb2 0a01 	subs.w	sl, r2, r1
 8003232:	4649      	mov	r1, r9
 8003234:	eb63 0b01 	sbc.w	fp, r3, r1
 8003238:	f04f 0200 	mov.w	r2, #0
 800323c:	f04f 0300 	mov.w	r3, #0
 8003240:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8003244:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8003248:	ea4f 128a 	mov.w	r2, sl, lsl #6
 800324c:	ebb2 040a 	subs.w	r4, r2, sl
 8003250:	eb63 050b 	sbc.w	r5, r3, fp
 8003254:	f04f 0200 	mov.w	r2, #0
 8003258:	f04f 0300 	mov.w	r3, #0
 800325c:	00eb      	lsls	r3, r5, #3
 800325e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003262:	00e2      	lsls	r2, r4, #3
 8003264:	4614      	mov	r4, r2
 8003266:	461d      	mov	r5, r3
 8003268:	4643      	mov	r3, r8
 800326a:	18e3      	adds	r3, r4, r3
 800326c:	603b      	str	r3, [r7, #0]
 800326e:	464b      	mov	r3, r9
 8003270:	eb45 0303 	adc.w	r3, r5, r3
 8003274:	607b      	str	r3, [r7, #4]
 8003276:	f04f 0200 	mov.w	r2, #0
 800327a:	f04f 0300 	mov.w	r3, #0
 800327e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003282:	4629      	mov	r1, r5
 8003284:	028b      	lsls	r3, r1, #10
 8003286:	4621      	mov	r1, r4
 8003288:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800328c:	4621      	mov	r1, r4
 800328e:	028a      	lsls	r2, r1, #10
 8003290:	4610      	mov	r0, r2
 8003292:	4619      	mov	r1, r3
 8003294:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003296:	2200      	movs	r2, #0
 8003298:	61bb      	str	r3, [r7, #24]
 800329a:	61fa      	str	r2, [r7, #28]
 800329c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80032a0:	f7fc fff6 	bl	8000290 <__aeabi_uldivmod>
 80032a4:	4602      	mov	r2, r0
 80032a6:	460b      	mov	r3, r1
 80032a8:	4613      	mov	r3, r2
 80032aa:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80032ac:	4b0b      	ldr	r3, [pc, #44]	@ (80032dc <HAL_RCC_GetSysClockFreq+0x200>)
 80032ae:	685b      	ldr	r3, [r3, #4]
 80032b0:	0c1b      	lsrs	r3, r3, #16
 80032b2:	f003 0303 	and.w	r3, r3, #3
 80032b6:	3301      	adds	r3, #1
 80032b8:	005b      	lsls	r3, r3, #1
 80032ba:	643b      	str	r3, [r7, #64]	@ 0x40
 80032bc:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80032be:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80032c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80032c4:	64bb      	str	r3, [r7, #72]	@ 0x48
 80032c6:	e002      	b.n	80032ce <HAL_RCC_GetSysClockFreq+0x1f2>
 80032c8:	4b05      	ldr	r3, [pc, #20]	@ (80032e0 <HAL_RCC_GetSysClockFreq+0x204>)
 80032ca:	64bb      	str	r3, [r7, #72]	@ 0x48
 80032cc:	bf00      	nop
 80032ce:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80032d0:	4618      	mov	r0, r3
 80032d2:	3750      	adds	r7, #80	@ 0x50
 80032d4:	46bd      	mov	sp, r7
 80032d6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80032da:	bf00      	nop
 80032dc:	40023800 	.word	0x40023800
 80032e0:	00f42400 	.word	0x00f42400
 80032e4:	007a1200 	.word	0x007a1200

080032e8 <HAL_RCC_GetHCLKFreq>:
 80032e8:	b480      	push	{r7}
 80032ea:	af00      	add	r7, sp, #0
 80032ec:	4b03      	ldr	r3, [pc, #12]	@ (80032fc <HAL_RCC_GetHCLKFreq+0x14>)
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	4618      	mov	r0, r3
 80032f2:	46bd      	mov	sp, r7
 80032f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032f8:	4770      	bx	lr
 80032fa:	bf00      	nop
 80032fc:	20000000 	.word	0x20000000

08003300 <HAL_RCC_GetPCLK1Freq>:
 8003300:	b580      	push	{r7, lr}
 8003302:	af00      	add	r7, sp, #0
 8003304:	f7ff fff0 	bl	80032e8 <HAL_RCC_GetHCLKFreq>
 8003308:	4602      	mov	r2, r0
 800330a:	4b05      	ldr	r3, [pc, #20]	@ (8003320 <HAL_RCC_GetPCLK1Freq+0x20>)
 800330c:	689b      	ldr	r3, [r3, #8]
 800330e:	0a9b      	lsrs	r3, r3, #10
 8003310:	f003 0307 	and.w	r3, r3, #7
 8003314:	4903      	ldr	r1, [pc, #12]	@ (8003324 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003316:	5ccb      	ldrb	r3, [r1, r3]
 8003318:	fa22 f303 	lsr.w	r3, r2, r3
 800331c:	4618      	mov	r0, r3
 800331e:	bd80      	pop	{r7, pc}
 8003320:	40023800 	.word	0x40023800
 8003324:	08006170 	.word	0x08006170

08003328 <HAL_RCC_GetPCLK2Freq>:
 8003328:	b580      	push	{r7, lr}
 800332a:	af00      	add	r7, sp, #0
 800332c:	f7ff ffdc 	bl	80032e8 <HAL_RCC_GetHCLKFreq>
 8003330:	4602      	mov	r2, r0
 8003332:	4b05      	ldr	r3, [pc, #20]	@ (8003348 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003334:	689b      	ldr	r3, [r3, #8]
 8003336:	0b5b      	lsrs	r3, r3, #13
 8003338:	f003 0307 	and.w	r3, r3, #7
 800333c:	4903      	ldr	r1, [pc, #12]	@ (800334c <HAL_RCC_GetPCLK2Freq+0x24>)
 800333e:	5ccb      	ldrb	r3, [r1, r3]
 8003340:	fa22 f303 	lsr.w	r3, r2, r3
 8003344:	4618      	mov	r0, r3
 8003346:	bd80      	pop	{r7, pc}
 8003348:	40023800 	.word	0x40023800
 800334c:	08006170 	.word	0x08006170

08003350 <HAL_TIM_PWM_Init>:
 8003350:	b580      	push	{r7, lr}
 8003352:	b082      	sub	sp, #8
 8003354:	af00      	add	r7, sp, #0
 8003356:	6078      	str	r0, [r7, #4]
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	2b00      	cmp	r3, #0
 800335c:	d101      	bne.n	8003362 <HAL_TIM_PWM_Init+0x12>
 800335e:	2301      	movs	r3, #1
 8003360:	e041      	b.n	80033e6 <HAL_TIM_PWM_Init+0x96>
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003368:	b2db      	uxtb	r3, r3
 800336a:	2b00      	cmp	r3, #0
 800336c:	d106      	bne.n	800337c <HAL_TIM_PWM_Init+0x2c>
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	2200      	movs	r2, #0
 8003372:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003376:	6878      	ldr	r0, [r7, #4]
 8003378:	f7fd ffe2 	bl	8001340 <HAL_TIM_PWM_MspInit>
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	2202      	movs	r2, #2
 8003380:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	681a      	ldr	r2, [r3, #0]
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	3304      	adds	r3, #4
 800338c:	4619      	mov	r1, r3
 800338e:	4610      	mov	r0, r2
 8003390:	f000 f8f0 	bl	8003574 <TIM_Base_SetConfig>
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	2201      	movs	r2, #1
 8003398:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	2201      	movs	r2, #1
 80033a0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	2201      	movs	r2, #1
 80033a8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	2201      	movs	r2, #1
 80033b0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	2201      	movs	r2, #1
 80033b8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	2201      	movs	r2, #1
 80033c0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	2201      	movs	r2, #1
 80033c8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	2201      	movs	r2, #1
 80033d0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	2201      	movs	r2, #1
 80033d8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	2201      	movs	r2, #1
 80033e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80033e4:	2300      	movs	r3, #0
 80033e6:	4618      	mov	r0, r3
 80033e8:	3708      	adds	r7, #8
 80033ea:	46bd      	mov	sp, r7
 80033ec:	bd80      	pop	{r7, pc}
	...

080033f0 <HAL_TIM_PWM_ConfigChannel>:
 80033f0:	b580      	push	{r7, lr}
 80033f2:	b086      	sub	sp, #24
 80033f4:	af00      	add	r7, sp, #0
 80033f6:	60f8      	str	r0, [r7, #12]
 80033f8:	60b9      	str	r1, [r7, #8]
 80033fa:	607a      	str	r2, [r7, #4]
 80033fc:	2300      	movs	r3, #0
 80033fe:	75fb      	strb	r3, [r7, #23]
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003406:	2b01      	cmp	r3, #1
 8003408:	d101      	bne.n	800340e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800340a:	2302      	movs	r3, #2
 800340c:	e0ae      	b.n	800356c <HAL_TIM_PWM_ConfigChannel+0x17c>
 800340e:	68fb      	ldr	r3, [r7, #12]
 8003410:	2201      	movs	r2, #1
 8003412:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	2b0c      	cmp	r3, #12
 800341a:	f200 809f 	bhi.w	800355c <HAL_TIM_PWM_ConfigChannel+0x16c>
 800341e:	a201      	add	r2, pc, #4	@ (adr r2, 8003424 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8003420:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003424:	08003459 	.word	0x08003459
 8003428:	0800355d 	.word	0x0800355d
 800342c:	0800355d 	.word	0x0800355d
 8003430:	0800355d 	.word	0x0800355d
 8003434:	08003499 	.word	0x08003499
 8003438:	0800355d 	.word	0x0800355d
 800343c:	0800355d 	.word	0x0800355d
 8003440:	0800355d 	.word	0x0800355d
 8003444:	080034db 	.word	0x080034db
 8003448:	0800355d 	.word	0x0800355d
 800344c:	0800355d 	.word	0x0800355d
 8003450:	0800355d 	.word	0x0800355d
 8003454:	0800351b 	.word	0x0800351b
 8003458:	68fb      	ldr	r3, [r7, #12]
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	68b9      	ldr	r1, [r7, #8]
 800345e:	4618      	mov	r0, r3
 8003460:	f000 f914 	bl	800368c <TIM_OC1_SetConfig>
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	699a      	ldr	r2, [r3, #24]
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	f042 0208 	orr.w	r2, r2, #8
 8003472:	619a      	str	r2, [r3, #24]
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	681b      	ldr	r3, [r3, #0]
 8003478:	699a      	ldr	r2, [r3, #24]
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	f022 0204 	bic.w	r2, r2, #4
 8003482:	619a      	str	r2, [r3, #24]
 8003484:	68fb      	ldr	r3, [r7, #12]
 8003486:	681b      	ldr	r3, [r3, #0]
 8003488:	6999      	ldr	r1, [r3, #24]
 800348a:	68bb      	ldr	r3, [r7, #8]
 800348c:	691a      	ldr	r2, [r3, #16]
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	430a      	orrs	r2, r1
 8003494:	619a      	str	r2, [r3, #24]
 8003496:	e064      	b.n	8003562 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	68b9      	ldr	r1, [r7, #8]
 800349e:	4618      	mov	r0, r3
 80034a0:	f000 f95a 	bl	8003758 <TIM_OC2_SetConfig>
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	699a      	ldr	r2, [r3, #24]
 80034aa:	68fb      	ldr	r3, [r7, #12]
 80034ac:	681b      	ldr	r3, [r3, #0]
 80034ae:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80034b2:	619a      	str	r2, [r3, #24]
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	699a      	ldr	r2, [r3, #24]
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80034c2:	619a      	str	r2, [r3, #24]
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	6999      	ldr	r1, [r3, #24]
 80034ca:	68bb      	ldr	r3, [r7, #8]
 80034cc:	691b      	ldr	r3, [r3, #16]
 80034ce:	021a      	lsls	r2, r3, #8
 80034d0:	68fb      	ldr	r3, [r7, #12]
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	430a      	orrs	r2, r1
 80034d6:	619a      	str	r2, [r3, #24]
 80034d8:	e043      	b.n	8003562 <HAL_TIM_PWM_ConfigChannel+0x172>
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	68b9      	ldr	r1, [r7, #8]
 80034e0:	4618      	mov	r0, r3
 80034e2:	f000 f9a5 	bl	8003830 <TIM_OC3_SetConfig>
 80034e6:	68fb      	ldr	r3, [r7, #12]
 80034e8:	681b      	ldr	r3, [r3, #0]
 80034ea:	69da      	ldr	r2, [r3, #28]
 80034ec:	68fb      	ldr	r3, [r7, #12]
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	f042 0208 	orr.w	r2, r2, #8
 80034f4:	61da      	str	r2, [r3, #28]
 80034f6:	68fb      	ldr	r3, [r7, #12]
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	69da      	ldr	r2, [r3, #28]
 80034fc:	68fb      	ldr	r3, [r7, #12]
 80034fe:	681b      	ldr	r3, [r3, #0]
 8003500:	f022 0204 	bic.w	r2, r2, #4
 8003504:	61da      	str	r2, [r3, #28]
 8003506:	68fb      	ldr	r3, [r7, #12]
 8003508:	681b      	ldr	r3, [r3, #0]
 800350a:	69d9      	ldr	r1, [r3, #28]
 800350c:	68bb      	ldr	r3, [r7, #8]
 800350e:	691a      	ldr	r2, [r3, #16]
 8003510:	68fb      	ldr	r3, [r7, #12]
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	430a      	orrs	r2, r1
 8003516:	61da      	str	r2, [r3, #28]
 8003518:	e023      	b.n	8003562 <HAL_TIM_PWM_ConfigChannel+0x172>
 800351a:	68fb      	ldr	r3, [r7, #12]
 800351c:	681b      	ldr	r3, [r3, #0]
 800351e:	68b9      	ldr	r1, [r7, #8]
 8003520:	4618      	mov	r0, r3
 8003522:	f000 f9ef 	bl	8003904 <TIM_OC4_SetConfig>
 8003526:	68fb      	ldr	r3, [r7, #12]
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	69da      	ldr	r2, [r3, #28]
 800352c:	68fb      	ldr	r3, [r7, #12]
 800352e:	681b      	ldr	r3, [r3, #0]
 8003530:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003534:	61da      	str	r2, [r3, #28]
 8003536:	68fb      	ldr	r3, [r7, #12]
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	69da      	ldr	r2, [r3, #28]
 800353c:	68fb      	ldr	r3, [r7, #12]
 800353e:	681b      	ldr	r3, [r3, #0]
 8003540:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003544:	61da      	str	r2, [r3, #28]
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	681b      	ldr	r3, [r3, #0]
 800354a:	69d9      	ldr	r1, [r3, #28]
 800354c:	68bb      	ldr	r3, [r7, #8]
 800354e:	691b      	ldr	r3, [r3, #16]
 8003550:	021a      	lsls	r2, r3, #8
 8003552:	68fb      	ldr	r3, [r7, #12]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	430a      	orrs	r2, r1
 8003558:	61da      	str	r2, [r3, #28]
 800355a:	e002      	b.n	8003562 <HAL_TIM_PWM_ConfigChannel+0x172>
 800355c:	2301      	movs	r3, #1
 800355e:	75fb      	strb	r3, [r7, #23]
 8003560:	bf00      	nop
 8003562:	68fb      	ldr	r3, [r7, #12]
 8003564:	2200      	movs	r2, #0
 8003566:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800356a:	7dfb      	ldrb	r3, [r7, #23]
 800356c:	4618      	mov	r0, r3
 800356e:	3718      	adds	r7, #24
 8003570:	46bd      	mov	sp, r7
 8003572:	bd80      	pop	{r7, pc}

08003574 <TIM_Base_SetConfig>:
 8003574:	b480      	push	{r7}
 8003576:	b085      	sub	sp, #20
 8003578:	af00      	add	r7, sp, #0
 800357a:	6078      	str	r0, [r7, #4]
 800357c:	6039      	str	r1, [r7, #0]
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	60fb      	str	r3, [r7, #12]
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	4a3a      	ldr	r2, [pc, #232]	@ (8003670 <TIM_Base_SetConfig+0xfc>)
 8003588:	4293      	cmp	r3, r2
 800358a:	d00f      	beq.n	80035ac <TIM_Base_SetConfig+0x38>
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003592:	d00b      	beq.n	80035ac <TIM_Base_SetConfig+0x38>
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	4a37      	ldr	r2, [pc, #220]	@ (8003674 <TIM_Base_SetConfig+0x100>)
 8003598:	4293      	cmp	r3, r2
 800359a:	d007      	beq.n	80035ac <TIM_Base_SetConfig+0x38>
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	4a36      	ldr	r2, [pc, #216]	@ (8003678 <TIM_Base_SetConfig+0x104>)
 80035a0:	4293      	cmp	r3, r2
 80035a2:	d003      	beq.n	80035ac <TIM_Base_SetConfig+0x38>
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	4a35      	ldr	r2, [pc, #212]	@ (800367c <TIM_Base_SetConfig+0x108>)
 80035a8:	4293      	cmp	r3, r2
 80035aa:	d108      	bne.n	80035be <TIM_Base_SetConfig+0x4a>
 80035ac:	68fb      	ldr	r3, [r7, #12]
 80035ae:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80035b2:	60fb      	str	r3, [r7, #12]
 80035b4:	683b      	ldr	r3, [r7, #0]
 80035b6:	685b      	ldr	r3, [r3, #4]
 80035b8:	68fa      	ldr	r2, [r7, #12]
 80035ba:	4313      	orrs	r3, r2
 80035bc:	60fb      	str	r3, [r7, #12]
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	4a2b      	ldr	r2, [pc, #172]	@ (8003670 <TIM_Base_SetConfig+0xfc>)
 80035c2:	4293      	cmp	r3, r2
 80035c4:	d01b      	beq.n	80035fe <TIM_Base_SetConfig+0x8a>
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80035cc:	d017      	beq.n	80035fe <TIM_Base_SetConfig+0x8a>
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	4a28      	ldr	r2, [pc, #160]	@ (8003674 <TIM_Base_SetConfig+0x100>)
 80035d2:	4293      	cmp	r3, r2
 80035d4:	d013      	beq.n	80035fe <TIM_Base_SetConfig+0x8a>
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	4a27      	ldr	r2, [pc, #156]	@ (8003678 <TIM_Base_SetConfig+0x104>)
 80035da:	4293      	cmp	r3, r2
 80035dc:	d00f      	beq.n	80035fe <TIM_Base_SetConfig+0x8a>
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	4a26      	ldr	r2, [pc, #152]	@ (800367c <TIM_Base_SetConfig+0x108>)
 80035e2:	4293      	cmp	r3, r2
 80035e4:	d00b      	beq.n	80035fe <TIM_Base_SetConfig+0x8a>
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	4a25      	ldr	r2, [pc, #148]	@ (8003680 <TIM_Base_SetConfig+0x10c>)
 80035ea:	4293      	cmp	r3, r2
 80035ec:	d007      	beq.n	80035fe <TIM_Base_SetConfig+0x8a>
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	4a24      	ldr	r2, [pc, #144]	@ (8003684 <TIM_Base_SetConfig+0x110>)
 80035f2:	4293      	cmp	r3, r2
 80035f4:	d003      	beq.n	80035fe <TIM_Base_SetConfig+0x8a>
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	4a23      	ldr	r2, [pc, #140]	@ (8003688 <TIM_Base_SetConfig+0x114>)
 80035fa:	4293      	cmp	r3, r2
 80035fc:	d108      	bne.n	8003610 <TIM_Base_SetConfig+0x9c>
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003604:	60fb      	str	r3, [r7, #12]
 8003606:	683b      	ldr	r3, [r7, #0]
 8003608:	68db      	ldr	r3, [r3, #12]
 800360a:	68fa      	ldr	r2, [r7, #12]
 800360c:	4313      	orrs	r3, r2
 800360e:	60fb      	str	r3, [r7, #12]
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003616:	683b      	ldr	r3, [r7, #0]
 8003618:	695b      	ldr	r3, [r3, #20]
 800361a:	4313      	orrs	r3, r2
 800361c:	60fb      	str	r3, [r7, #12]
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	68fa      	ldr	r2, [r7, #12]
 8003622:	601a      	str	r2, [r3, #0]
 8003624:	683b      	ldr	r3, [r7, #0]
 8003626:	689a      	ldr	r2, [r3, #8]
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800362c:	683b      	ldr	r3, [r7, #0]
 800362e:	681a      	ldr	r2, [r3, #0]
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	629a      	str	r2, [r3, #40]	@ 0x28
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	4a0e      	ldr	r2, [pc, #56]	@ (8003670 <TIM_Base_SetConfig+0xfc>)
 8003638:	4293      	cmp	r3, r2
 800363a:	d103      	bne.n	8003644 <TIM_Base_SetConfig+0xd0>
 800363c:	683b      	ldr	r3, [r7, #0]
 800363e:	691a      	ldr	r2, [r3, #16]
 8003640:	687b      	ldr	r3, [r7, #4]
 8003642:	631a      	str	r2, [r3, #48]	@ 0x30
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	2201      	movs	r2, #1
 8003648:	615a      	str	r2, [r3, #20]
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	691b      	ldr	r3, [r3, #16]
 800364e:	f003 0301 	and.w	r3, r3, #1
 8003652:	2b01      	cmp	r3, #1
 8003654:	d105      	bne.n	8003662 <TIM_Base_SetConfig+0xee>
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	691b      	ldr	r3, [r3, #16]
 800365a:	f023 0201 	bic.w	r2, r3, #1
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	611a      	str	r2, [r3, #16]
 8003662:	bf00      	nop
 8003664:	3714      	adds	r7, #20
 8003666:	46bd      	mov	sp, r7
 8003668:	f85d 7b04 	ldr.w	r7, [sp], #4
 800366c:	4770      	bx	lr
 800366e:	bf00      	nop
 8003670:	40010000 	.word	0x40010000
 8003674:	40000400 	.word	0x40000400
 8003678:	40000800 	.word	0x40000800
 800367c:	40000c00 	.word	0x40000c00
 8003680:	40014000 	.word	0x40014000
 8003684:	40014400 	.word	0x40014400
 8003688:	40014800 	.word	0x40014800

0800368c <TIM_OC1_SetConfig>:
 800368c:	b480      	push	{r7}
 800368e:	b087      	sub	sp, #28
 8003690:	af00      	add	r7, sp, #0
 8003692:	6078      	str	r0, [r7, #4]
 8003694:	6039      	str	r1, [r7, #0]
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	6a1b      	ldr	r3, [r3, #32]
 800369a:	617b      	str	r3, [r7, #20]
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	6a1b      	ldr	r3, [r3, #32]
 80036a0:	f023 0201 	bic.w	r2, r3, #1
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	621a      	str	r2, [r3, #32]
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	685b      	ldr	r3, [r3, #4]
 80036ac:	613b      	str	r3, [r7, #16]
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	699b      	ldr	r3, [r3, #24]
 80036b2:	60fb      	str	r3, [r7, #12]
 80036b4:	68fb      	ldr	r3, [r7, #12]
 80036b6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80036ba:	60fb      	str	r3, [r7, #12]
 80036bc:	68fb      	ldr	r3, [r7, #12]
 80036be:	f023 0303 	bic.w	r3, r3, #3
 80036c2:	60fb      	str	r3, [r7, #12]
 80036c4:	683b      	ldr	r3, [r7, #0]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	68fa      	ldr	r2, [r7, #12]
 80036ca:	4313      	orrs	r3, r2
 80036cc:	60fb      	str	r3, [r7, #12]
 80036ce:	697b      	ldr	r3, [r7, #20]
 80036d0:	f023 0302 	bic.w	r3, r3, #2
 80036d4:	617b      	str	r3, [r7, #20]
 80036d6:	683b      	ldr	r3, [r7, #0]
 80036d8:	689b      	ldr	r3, [r3, #8]
 80036da:	697a      	ldr	r2, [r7, #20]
 80036dc:	4313      	orrs	r3, r2
 80036de:	617b      	str	r3, [r7, #20]
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	4a1c      	ldr	r2, [pc, #112]	@ (8003754 <TIM_OC1_SetConfig+0xc8>)
 80036e4:	4293      	cmp	r3, r2
 80036e6:	d10c      	bne.n	8003702 <TIM_OC1_SetConfig+0x76>
 80036e8:	697b      	ldr	r3, [r7, #20]
 80036ea:	f023 0308 	bic.w	r3, r3, #8
 80036ee:	617b      	str	r3, [r7, #20]
 80036f0:	683b      	ldr	r3, [r7, #0]
 80036f2:	68db      	ldr	r3, [r3, #12]
 80036f4:	697a      	ldr	r2, [r7, #20]
 80036f6:	4313      	orrs	r3, r2
 80036f8:	617b      	str	r3, [r7, #20]
 80036fa:	697b      	ldr	r3, [r7, #20]
 80036fc:	f023 0304 	bic.w	r3, r3, #4
 8003700:	617b      	str	r3, [r7, #20]
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	4a13      	ldr	r2, [pc, #76]	@ (8003754 <TIM_OC1_SetConfig+0xc8>)
 8003706:	4293      	cmp	r3, r2
 8003708:	d111      	bne.n	800372e <TIM_OC1_SetConfig+0xa2>
 800370a:	693b      	ldr	r3, [r7, #16]
 800370c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8003710:	613b      	str	r3, [r7, #16]
 8003712:	693b      	ldr	r3, [r7, #16]
 8003714:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8003718:	613b      	str	r3, [r7, #16]
 800371a:	683b      	ldr	r3, [r7, #0]
 800371c:	695b      	ldr	r3, [r3, #20]
 800371e:	693a      	ldr	r2, [r7, #16]
 8003720:	4313      	orrs	r3, r2
 8003722:	613b      	str	r3, [r7, #16]
 8003724:	683b      	ldr	r3, [r7, #0]
 8003726:	699b      	ldr	r3, [r3, #24]
 8003728:	693a      	ldr	r2, [r7, #16]
 800372a:	4313      	orrs	r3, r2
 800372c:	613b      	str	r3, [r7, #16]
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	693a      	ldr	r2, [r7, #16]
 8003732:	605a      	str	r2, [r3, #4]
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	68fa      	ldr	r2, [r7, #12]
 8003738:	619a      	str	r2, [r3, #24]
 800373a:	683b      	ldr	r3, [r7, #0]
 800373c:	685a      	ldr	r2, [r3, #4]
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	635a      	str	r2, [r3, #52]	@ 0x34
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	697a      	ldr	r2, [r7, #20]
 8003746:	621a      	str	r2, [r3, #32]
 8003748:	bf00      	nop
 800374a:	371c      	adds	r7, #28
 800374c:	46bd      	mov	sp, r7
 800374e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003752:	4770      	bx	lr
 8003754:	40010000 	.word	0x40010000

08003758 <TIM_OC2_SetConfig>:
 8003758:	b480      	push	{r7}
 800375a:	b087      	sub	sp, #28
 800375c:	af00      	add	r7, sp, #0
 800375e:	6078      	str	r0, [r7, #4]
 8003760:	6039      	str	r1, [r7, #0]
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	6a1b      	ldr	r3, [r3, #32]
 8003766:	617b      	str	r3, [r7, #20]
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	6a1b      	ldr	r3, [r3, #32]
 800376c:	f023 0210 	bic.w	r2, r3, #16
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	621a      	str	r2, [r3, #32]
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	685b      	ldr	r3, [r3, #4]
 8003778:	613b      	str	r3, [r7, #16]
 800377a:	687b      	ldr	r3, [r7, #4]
 800377c:	699b      	ldr	r3, [r3, #24]
 800377e:	60fb      	str	r3, [r7, #12]
 8003780:	68fb      	ldr	r3, [r7, #12]
 8003782:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8003786:	60fb      	str	r3, [r7, #12]
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800378e:	60fb      	str	r3, [r7, #12]
 8003790:	683b      	ldr	r3, [r7, #0]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	021b      	lsls	r3, r3, #8
 8003796:	68fa      	ldr	r2, [r7, #12]
 8003798:	4313      	orrs	r3, r2
 800379a:	60fb      	str	r3, [r7, #12]
 800379c:	697b      	ldr	r3, [r7, #20]
 800379e:	f023 0320 	bic.w	r3, r3, #32
 80037a2:	617b      	str	r3, [r7, #20]
 80037a4:	683b      	ldr	r3, [r7, #0]
 80037a6:	689b      	ldr	r3, [r3, #8]
 80037a8:	011b      	lsls	r3, r3, #4
 80037aa:	697a      	ldr	r2, [r7, #20]
 80037ac:	4313      	orrs	r3, r2
 80037ae:	617b      	str	r3, [r7, #20]
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	4a1e      	ldr	r2, [pc, #120]	@ (800382c <TIM_OC2_SetConfig+0xd4>)
 80037b4:	4293      	cmp	r3, r2
 80037b6:	d10d      	bne.n	80037d4 <TIM_OC2_SetConfig+0x7c>
 80037b8:	697b      	ldr	r3, [r7, #20]
 80037ba:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80037be:	617b      	str	r3, [r7, #20]
 80037c0:	683b      	ldr	r3, [r7, #0]
 80037c2:	68db      	ldr	r3, [r3, #12]
 80037c4:	011b      	lsls	r3, r3, #4
 80037c6:	697a      	ldr	r2, [r7, #20]
 80037c8:	4313      	orrs	r3, r2
 80037ca:	617b      	str	r3, [r7, #20]
 80037cc:	697b      	ldr	r3, [r7, #20]
 80037ce:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80037d2:	617b      	str	r3, [r7, #20]
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	4a15      	ldr	r2, [pc, #84]	@ (800382c <TIM_OC2_SetConfig+0xd4>)
 80037d8:	4293      	cmp	r3, r2
 80037da:	d113      	bne.n	8003804 <TIM_OC2_SetConfig+0xac>
 80037dc:	693b      	ldr	r3, [r7, #16]
 80037de:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80037e2:	613b      	str	r3, [r7, #16]
 80037e4:	693b      	ldr	r3, [r7, #16]
 80037e6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80037ea:	613b      	str	r3, [r7, #16]
 80037ec:	683b      	ldr	r3, [r7, #0]
 80037ee:	695b      	ldr	r3, [r3, #20]
 80037f0:	009b      	lsls	r3, r3, #2
 80037f2:	693a      	ldr	r2, [r7, #16]
 80037f4:	4313      	orrs	r3, r2
 80037f6:	613b      	str	r3, [r7, #16]
 80037f8:	683b      	ldr	r3, [r7, #0]
 80037fa:	699b      	ldr	r3, [r3, #24]
 80037fc:	009b      	lsls	r3, r3, #2
 80037fe:	693a      	ldr	r2, [r7, #16]
 8003800:	4313      	orrs	r3, r2
 8003802:	613b      	str	r3, [r7, #16]
 8003804:	687b      	ldr	r3, [r7, #4]
 8003806:	693a      	ldr	r2, [r7, #16]
 8003808:	605a      	str	r2, [r3, #4]
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	68fa      	ldr	r2, [r7, #12]
 800380e:	619a      	str	r2, [r3, #24]
 8003810:	683b      	ldr	r3, [r7, #0]
 8003812:	685a      	ldr	r2, [r3, #4]
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	639a      	str	r2, [r3, #56]	@ 0x38
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	697a      	ldr	r2, [r7, #20]
 800381c:	621a      	str	r2, [r3, #32]
 800381e:	bf00      	nop
 8003820:	371c      	adds	r7, #28
 8003822:	46bd      	mov	sp, r7
 8003824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003828:	4770      	bx	lr
 800382a:	bf00      	nop
 800382c:	40010000 	.word	0x40010000

08003830 <TIM_OC3_SetConfig>:
 8003830:	b480      	push	{r7}
 8003832:	b087      	sub	sp, #28
 8003834:	af00      	add	r7, sp, #0
 8003836:	6078      	str	r0, [r7, #4]
 8003838:	6039      	str	r1, [r7, #0]
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	6a1b      	ldr	r3, [r3, #32]
 800383e:	617b      	str	r3, [r7, #20]
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	6a1b      	ldr	r3, [r3, #32]
 8003844:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	621a      	str	r2, [r3, #32]
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	685b      	ldr	r3, [r3, #4]
 8003850:	613b      	str	r3, [r7, #16]
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	69db      	ldr	r3, [r3, #28]
 8003856:	60fb      	str	r3, [r7, #12]
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800385e:	60fb      	str	r3, [r7, #12]
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	f023 0303 	bic.w	r3, r3, #3
 8003866:	60fb      	str	r3, [r7, #12]
 8003868:	683b      	ldr	r3, [r7, #0]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	68fa      	ldr	r2, [r7, #12]
 800386e:	4313      	orrs	r3, r2
 8003870:	60fb      	str	r3, [r7, #12]
 8003872:	697b      	ldr	r3, [r7, #20]
 8003874:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8003878:	617b      	str	r3, [r7, #20]
 800387a:	683b      	ldr	r3, [r7, #0]
 800387c:	689b      	ldr	r3, [r3, #8]
 800387e:	021b      	lsls	r3, r3, #8
 8003880:	697a      	ldr	r2, [r7, #20]
 8003882:	4313      	orrs	r3, r2
 8003884:	617b      	str	r3, [r7, #20]
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	4a1d      	ldr	r2, [pc, #116]	@ (8003900 <TIM_OC3_SetConfig+0xd0>)
 800388a:	4293      	cmp	r3, r2
 800388c:	d10d      	bne.n	80038aa <TIM_OC3_SetConfig+0x7a>
 800388e:	697b      	ldr	r3, [r7, #20]
 8003890:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8003894:	617b      	str	r3, [r7, #20]
 8003896:	683b      	ldr	r3, [r7, #0]
 8003898:	68db      	ldr	r3, [r3, #12]
 800389a:	021b      	lsls	r3, r3, #8
 800389c:	697a      	ldr	r2, [r7, #20]
 800389e:	4313      	orrs	r3, r2
 80038a0:	617b      	str	r3, [r7, #20]
 80038a2:	697b      	ldr	r3, [r7, #20]
 80038a4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80038a8:	617b      	str	r3, [r7, #20]
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	4a14      	ldr	r2, [pc, #80]	@ (8003900 <TIM_OC3_SetConfig+0xd0>)
 80038ae:	4293      	cmp	r3, r2
 80038b0:	d113      	bne.n	80038da <TIM_OC3_SetConfig+0xaa>
 80038b2:	693b      	ldr	r3, [r7, #16]
 80038b4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80038b8:	613b      	str	r3, [r7, #16]
 80038ba:	693b      	ldr	r3, [r7, #16]
 80038bc:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80038c0:	613b      	str	r3, [r7, #16]
 80038c2:	683b      	ldr	r3, [r7, #0]
 80038c4:	695b      	ldr	r3, [r3, #20]
 80038c6:	011b      	lsls	r3, r3, #4
 80038c8:	693a      	ldr	r2, [r7, #16]
 80038ca:	4313      	orrs	r3, r2
 80038cc:	613b      	str	r3, [r7, #16]
 80038ce:	683b      	ldr	r3, [r7, #0]
 80038d0:	699b      	ldr	r3, [r3, #24]
 80038d2:	011b      	lsls	r3, r3, #4
 80038d4:	693a      	ldr	r2, [r7, #16]
 80038d6:	4313      	orrs	r3, r2
 80038d8:	613b      	str	r3, [r7, #16]
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	693a      	ldr	r2, [r7, #16]
 80038de:	605a      	str	r2, [r3, #4]
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	68fa      	ldr	r2, [r7, #12]
 80038e4:	61da      	str	r2, [r3, #28]
 80038e6:	683b      	ldr	r3, [r7, #0]
 80038e8:	685a      	ldr	r2, [r3, #4]
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	63da      	str	r2, [r3, #60]	@ 0x3c
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	697a      	ldr	r2, [r7, #20]
 80038f2:	621a      	str	r2, [r3, #32]
 80038f4:	bf00      	nop
 80038f6:	371c      	adds	r7, #28
 80038f8:	46bd      	mov	sp, r7
 80038fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038fe:	4770      	bx	lr
 8003900:	40010000 	.word	0x40010000

08003904 <TIM_OC4_SetConfig>:
 8003904:	b480      	push	{r7}
 8003906:	b087      	sub	sp, #28
 8003908:	af00      	add	r7, sp, #0
 800390a:	6078      	str	r0, [r7, #4]
 800390c:	6039      	str	r1, [r7, #0]
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	6a1b      	ldr	r3, [r3, #32]
 8003912:	613b      	str	r3, [r7, #16]
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	6a1b      	ldr	r3, [r3, #32]
 8003918:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	621a      	str	r2, [r3, #32]
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	685b      	ldr	r3, [r3, #4]
 8003924:	617b      	str	r3, [r7, #20]
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	69db      	ldr	r3, [r3, #28]
 800392a:	60fb      	str	r3, [r7, #12]
 800392c:	68fb      	ldr	r3, [r7, #12]
 800392e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8003932:	60fb      	str	r3, [r7, #12]
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800393a:	60fb      	str	r3, [r7, #12]
 800393c:	683b      	ldr	r3, [r7, #0]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	021b      	lsls	r3, r3, #8
 8003942:	68fa      	ldr	r2, [r7, #12]
 8003944:	4313      	orrs	r3, r2
 8003946:	60fb      	str	r3, [r7, #12]
 8003948:	693b      	ldr	r3, [r7, #16]
 800394a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800394e:	613b      	str	r3, [r7, #16]
 8003950:	683b      	ldr	r3, [r7, #0]
 8003952:	689b      	ldr	r3, [r3, #8]
 8003954:	031b      	lsls	r3, r3, #12
 8003956:	693a      	ldr	r2, [r7, #16]
 8003958:	4313      	orrs	r3, r2
 800395a:	613b      	str	r3, [r7, #16]
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	4a10      	ldr	r2, [pc, #64]	@ (80039a0 <TIM_OC4_SetConfig+0x9c>)
 8003960:	4293      	cmp	r3, r2
 8003962:	d109      	bne.n	8003978 <TIM_OC4_SetConfig+0x74>
 8003964:	697b      	ldr	r3, [r7, #20]
 8003966:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800396a:	617b      	str	r3, [r7, #20]
 800396c:	683b      	ldr	r3, [r7, #0]
 800396e:	695b      	ldr	r3, [r3, #20]
 8003970:	019b      	lsls	r3, r3, #6
 8003972:	697a      	ldr	r2, [r7, #20]
 8003974:	4313      	orrs	r3, r2
 8003976:	617b      	str	r3, [r7, #20]
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	697a      	ldr	r2, [r7, #20]
 800397c:	605a      	str	r2, [r3, #4]
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	68fa      	ldr	r2, [r7, #12]
 8003982:	61da      	str	r2, [r3, #28]
 8003984:	683b      	ldr	r3, [r7, #0]
 8003986:	685a      	ldr	r2, [r3, #4]
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	641a      	str	r2, [r3, #64]	@ 0x40
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	693a      	ldr	r2, [r7, #16]
 8003990:	621a      	str	r2, [r3, #32]
 8003992:	bf00      	nop
 8003994:	371c      	adds	r7, #28
 8003996:	46bd      	mov	sp, r7
 8003998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800399c:	4770      	bx	lr
 800399e:	bf00      	nop
 80039a0:	40010000 	.word	0x40010000

080039a4 <HAL_TIMEx_MasterConfigSynchronization>:
 80039a4:	b480      	push	{r7}
 80039a6:	b085      	sub	sp, #20
 80039a8:	af00      	add	r7, sp, #0
 80039aa:	6078      	str	r0, [r7, #4]
 80039ac:	6039      	str	r1, [r7, #0]
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80039b4:	2b01      	cmp	r3, #1
 80039b6:	d101      	bne.n	80039bc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80039b8:	2302      	movs	r3, #2
 80039ba:	e050      	b.n	8003a5e <HAL_TIMEx_MasterConfigSynchronization+0xba>
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	2201      	movs	r2, #1
 80039c0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	2202      	movs	r2, #2
 80039c8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	685b      	ldr	r3, [r3, #4]
 80039d2:	60fb      	str	r3, [r7, #12]
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	689b      	ldr	r3, [r3, #8]
 80039da:	60bb      	str	r3, [r7, #8]
 80039dc:	68fb      	ldr	r3, [r7, #12]
 80039de:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80039e2:	60fb      	str	r3, [r7, #12]
 80039e4:	683b      	ldr	r3, [r7, #0]
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	68fa      	ldr	r2, [r7, #12]
 80039ea:	4313      	orrs	r3, r2
 80039ec:	60fb      	str	r3, [r7, #12]
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	68fa      	ldr	r2, [r7, #12]
 80039f4:	605a      	str	r2, [r3, #4]
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	681b      	ldr	r3, [r3, #0]
 80039fa:	4a1c      	ldr	r2, [pc, #112]	@ (8003a6c <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 80039fc:	4293      	cmp	r3, r2
 80039fe:	d018      	beq.n	8003a32 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003a08:	d013      	beq.n	8003a32 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	681b      	ldr	r3, [r3, #0]
 8003a0e:	4a18      	ldr	r2, [pc, #96]	@ (8003a70 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8003a10:	4293      	cmp	r3, r2
 8003a12:	d00e      	beq.n	8003a32 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	681b      	ldr	r3, [r3, #0]
 8003a18:	4a16      	ldr	r2, [pc, #88]	@ (8003a74 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8003a1a:	4293      	cmp	r3, r2
 8003a1c:	d009      	beq.n	8003a32 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	4a15      	ldr	r2, [pc, #84]	@ (8003a78 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8003a24:	4293      	cmp	r3, r2
 8003a26:	d004      	beq.n	8003a32 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	4a13      	ldr	r2, [pc, #76]	@ (8003a7c <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8003a2e:	4293      	cmp	r3, r2
 8003a30:	d10c      	bne.n	8003a4c <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 8003a32:	68bb      	ldr	r3, [r7, #8]
 8003a34:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8003a38:	60bb      	str	r3, [r7, #8]
 8003a3a:	683b      	ldr	r3, [r7, #0]
 8003a3c:	685b      	ldr	r3, [r3, #4]
 8003a3e:	68ba      	ldr	r2, [r7, #8]
 8003a40:	4313      	orrs	r3, r2
 8003a42:	60bb      	str	r3, [r7, #8]
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	681b      	ldr	r3, [r3, #0]
 8003a48:	68ba      	ldr	r2, [r7, #8]
 8003a4a:	609a      	str	r2, [r3, #8]
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	2201      	movs	r2, #1
 8003a50:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	2200      	movs	r2, #0
 8003a58:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003a5c:	2300      	movs	r3, #0
 8003a5e:	4618      	mov	r0, r3
 8003a60:	3714      	adds	r7, #20
 8003a62:	46bd      	mov	sp, r7
 8003a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a68:	4770      	bx	lr
 8003a6a:	bf00      	nop
 8003a6c:	40010000 	.word	0x40010000
 8003a70:	40000400 	.word	0x40000400
 8003a74:	40000800 	.word	0x40000800
 8003a78:	40000c00 	.word	0x40000c00
 8003a7c:	40014000 	.word	0x40014000

08003a80 <HAL_UART_Init>:
 8003a80:	b580      	push	{r7, lr}
 8003a82:	b082      	sub	sp, #8
 8003a84:	af00      	add	r7, sp, #0
 8003a86:	6078      	str	r0, [r7, #4]
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d101      	bne.n	8003a92 <HAL_UART_Init+0x12>
 8003a8e:	2301      	movs	r3, #1
 8003a90:	e042      	b.n	8003b18 <HAL_UART_Init+0x98>
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003a98:	b2db      	uxtb	r3, r3
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d106      	bne.n	8003aac <HAL_UART_Init+0x2c>
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	2200      	movs	r2, #0
 8003aa2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003aa6:	6878      	ldr	r0, [r7, #4]
 8003aa8:	f7fd fca6 	bl	80013f8 <HAL_UART_MspInit>
 8003aac:	687b      	ldr	r3, [r7, #4]
 8003aae:	2224      	movs	r2, #36	@ 0x24
 8003ab0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	681b      	ldr	r3, [r3, #0]
 8003ab8:	68da      	ldr	r2, [r3, #12]
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	681b      	ldr	r3, [r3, #0]
 8003abe:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003ac2:	60da      	str	r2, [r3, #12]
 8003ac4:	6878      	ldr	r0, [r7, #4]
 8003ac6:	f000 fe55 	bl	8004774 <UART_SetConfig>
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	691a      	ldr	r2, [r3, #16]
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003ad8:	611a      	str	r2, [r3, #16]
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	695a      	ldr	r2, [r3, #20]
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003ae8:	615a      	str	r2, [r3, #20]
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	68da      	ldr	r2, [r3, #12]
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003af8:	60da      	str	r2, [r3, #12]
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	2200      	movs	r2, #0
 8003afe:	645a      	str	r2, [r3, #68]	@ 0x44
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	2220      	movs	r2, #32
 8003b04:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	2220      	movs	r2, #32
 8003b0c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	2200      	movs	r2, #0
 8003b14:	635a      	str	r2, [r3, #52]	@ 0x34
 8003b16:	2300      	movs	r3, #0
 8003b18:	4618      	mov	r0, r3
 8003b1a:	3708      	adds	r7, #8
 8003b1c:	46bd      	mov	sp, r7
 8003b1e:	bd80      	pop	{r7, pc}

08003b20 <HAL_UART_Transmit>:
 8003b20:	b580      	push	{r7, lr}
 8003b22:	b08a      	sub	sp, #40	@ 0x28
 8003b24:	af02      	add	r7, sp, #8
 8003b26:	60f8      	str	r0, [r7, #12]
 8003b28:	60b9      	str	r1, [r7, #8]
 8003b2a:	603b      	str	r3, [r7, #0]
 8003b2c:	4613      	mov	r3, r2
 8003b2e:	80fb      	strh	r3, [r7, #6]
 8003b30:	2300      	movs	r3, #0
 8003b32:	617b      	str	r3, [r7, #20]
 8003b34:	68fb      	ldr	r3, [r7, #12]
 8003b36:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003b3a:	b2db      	uxtb	r3, r3
 8003b3c:	2b20      	cmp	r3, #32
 8003b3e:	d175      	bne.n	8003c2c <HAL_UART_Transmit+0x10c>
 8003b40:	68bb      	ldr	r3, [r7, #8]
 8003b42:	2b00      	cmp	r3, #0
 8003b44:	d002      	beq.n	8003b4c <HAL_UART_Transmit+0x2c>
 8003b46:	88fb      	ldrh	r3, [r7, #6]
 8003b48:	2b00      	cmp	r3, #0
 8003b4a:	d101      	bne.n	8003b50 <HAL_UART_Transmit+0x30>
 8003b4c:	2301      	movs	r3, #1
 8003b4e:	e06e      	b.n	8003c2e <HAL_UART_Transmit+0x10e>
 8003b50:	68fb      	ldr	r3, [r7, #12]
 8003b52:	2200      	movs	r2, #0
 8003b54:	645a      	str	r2, [r3, #68]	@ 0x44
 8003b56:	68fb      	ldr	r3, [r7, #12]
 8003b58:	2221      	movs	r2, #33	@ 0x21
 8003b5a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003b5e:	f7fd fe9f 	bl	80018a0 <HAL_GetTick>
 8003b62:	6178      	str	r0, [r7, #20]
 8003b64:	68fb      	ldr	r3, [r7, #12]
 8003b66:	88fa      	ldrh	r2, [r7, #6]
 8003b68:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	88fa      	ldrh	r2, [r7, #6]
 8003b6e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	689b      	ldr	r3, [r3, #8]
 8003b74:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003b78:	d108      	bne.n	8003b8c <HAL_UART_Transmit+0x6c>
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	691b      	ldr	r3, [r3, #16]
 8003b7e:	2b00      	cmp	r3, #0
 8003b80:	d104      	bne.n	8003b8c <HAL_UART_Transmit+0x6c>
 8003b82:	2300      	movs	r3, #0
 8003b84:	61fb      	str	r3, [r7, #28]
 8003b86:	68bb      	ldr	r3, [r7, #8]
 8003b88:	61bb      	str	r3, [r7, #24]
 8003b8a:	e003      	b.n	8003b94 <HAL_UART_Transmit+0x74>
 8003b8c:	68bb      	ldr	r3, [r7, #8]
 8003b8e:	61fb      	str	r3, [r7, #28]
 8003b90:	2300      	movs	r3, #0
 8003b92:	61bb      	str	r3, [r7, #24]
 8003b94:	e02e      	b.n	8003bf4 <HAL_UART_Transmit+0xd4>
 8003b96:	683b      	ldr	r3, [r7, #0]
 8003b98:	9300      	str	r3, [sp, #0]
 8003b9a:	697b      	ldr	r3, [r7, #20]
 8003b9c:	2200      	movs	r2, #0
 8003b9e:	2180      	movs	r1, #128	@ 0x80
 8003ba0:	68f8      	ldr	r0, [r7, #12]
 8003ba2:	f000 fbb7 	bl	8004314 <UART_WaitOnFlagUntilTimeout>
 8003ba6:	4603      	mov	r3, r0
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d005      	beq.n	8003bb8 <HAL_UART_Transmit+0x98>
 8003bac:	68fb      	ldr	r3, [r7, #12]
 8003bae:	2220      	movs	r2, #32
 8003bb0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003bb4:	2303      	movs	r3, #3
 8003bb6:	e03a      	b.n	8003c2e <HAL_UART_Transmit+0x10e>
 8003bb8:	69fb      	ldr	r3, [r7, #28]
 8003bba:	2b00      	cmp	r3, #0
 8003bbc:	d10b      	bne.n	8003bd6 <HAL_UART_Transmit+0xb6>
 8003bbe:	69bb      	ldr	r3, [r7, #24]
 8003bc0:	881b      	ldrh	r3, [r3, #0]
 8003bc2:	461a      	mov	r2, r3
 8003bc4:	68fb      	ldr	r3, [r7, #12]
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003bcc:	605a      	str	r2, [r3, #4]
 8003bce:	69bb      	ldr	r3, [r7, #24]
 8003bd0:	3302      	adds	r3, #2
 8003bd2:	61bb      	str	r3, [r7, #24]
 8003bd4:	e007      	b.n	8003be6 <HAL_UART_Transmit+0xc6>
 8003bd6:	69fb      	ldr	r3, [r7, #28]
 8003bd8:	781a      	ldrb	r2, [r3, #0]
 8003bda:	68fb      	ldr	r3, [r7, #12]
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	605a      	str	r2, [r3, #4]
 8003be0:	69fb      	ldr	r3, [r7, #28]
 8003be2:	3301      	adds	r3, #1
 8003be4:	61fb      	str	r3, [r7, #28]
 8003be6:	68fb      	ldr	r3, [r7, #12]
 8003be8:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003bea:	b29b      	uxth	r3, r3
 8003bec:	3b01      	subs	r3, #1
 8003bee:	b29a      	uxth	r2, r3
 8003bf0:	68fb      	ldr	r3, [r7, #12]
 8003bf2:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003bf8:	b29b      	uxth	r3, r3
 8003bfa:	2b00      	cmp	r3, #0
 8003bfc:	d1cb      	bne.n	8003b96 <HAL_UART_Transmit+0x76>
 8003bfe:	683b      	ldr	r3, [r7, #0]
 8003c00:	9300      	str	r3, [sp, #0]
 8003c02:	697b      	ldr	r3, [r7, #20]
 8003c04:	2200      	movs	r2, #0
 8003c06:	2140      	movs	r1, #64	@ 0x40
 8003c08:	68f8      	ldr	r0, [r7, #12]
 8003c0a:	f000 fb83 	bl	8004314 <UART_WaitOnFlagUntilTimeout>
 8003c0e:	4603      	mov	r3, r0
 8003c10:	2b00      	cmp	r3, #0
 8003c12:	d005      	beq.n	8003c20 <HAL_UART_Transmit+0x100>
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	2220      	movs	r2, #32
 8003c18:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003c1c:	2303      	movs	r3, #3
 8003c1e:	e006      	b.n	8003c2e <HAL_UART_Transmit+0x10e>
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	2220      	movs	r2, #32
 8003c24:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003c28:	2300      	movs	r3, #0
 8003c2a:	e000      	b.n	8003c2e <HAL_UART_Transmit+0x10e>
 8003c2c:	2302      	movs	r3, #2
 8003c2e:	4618      	mov	r0, r3
 8003c30:	3720      	adds	r7, #32
 8003c32:	46bd      	mov	sp, r7
 8003c34:	bd80      	pop	{r7, pc}

08003c36 <HAL_UART_Receive>:
 8003c36:	b580      	push	{r7, lr}
 8003c38:	b08a      	sub	sp, #40	@ 0x28
 8003c3a:	af02      	add	r7, sp, #8
 8003c3c:	60f8      	str	r0, [r7, #12]
 8003c3e:	60b9      	str	r1, [r7, #8]
 8003c40:	603b      	str	r3, [r7, #0]
 8003c42:	4613      	mov	r3, r2
 8003c44:	80fb      	strh	r3, [r7, #6]
 8003c46:	2300      	movs	r3, #0
 8003c48:	617b      	str	r3, [r7, #20]
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003c50:	b2db      	uxtb	r3, r3
 8003c52:	2b20      	cmp	r3, #32
 8003c54:	f040 8081 	bne.w	8003d5a <HAL_UART_Receive+0x124>
 8003c58:	68bb      	ldr	r3, [r7, #8]
 8003c5a:	2b00      	cmp	r3, #0
 8003c5c:	d002      	beq.n	8003c64 <HAL_UART_Receive+0x2e>
 8003c5e:	88fb      	ldrh	r3, [r7, #6]
 8003c60:	2b00      	cmp	r3, #0
 8003c62:	d101      	bne.n	8003c68 <HAL_UART_Receive+0x32>
 8003c64:	2301      	movs	r3, #1
 8003c66:	e079      	b.n	8003d5c <HAL_UART_Receive+0x126>
 8003c68:	68fb      	ldr	r3, [r7, #12]
 8003c6a:	2200      	movs	r2, #0
 8003c6c:	645a      	str	r2, [r3, #68]	@ 0x44
 8003c6e:	68fb      	ldr	r3, [r7, #12]
 8003c70:	2222      	movs	r2, #34	@ 0x22
 8003c72:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c76:	68fb      	ldr	r3, [r7, #12]
 8003c78:	2200      	movs	r2, #0
 8003c7a:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c7c:	f7fd fe10 	bl	80018a0 <HAL_GetTick>
 8003c80:	6178      	str	r0, [r7, #20]
 8003c82:	68fb      	ldr	r3, [r7, #12]
 8003c84:	88fa      	ldrh	r2, [r7, #6]
 8003c86:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8003c88:	68fb      	ldr	r3, [r7, #12]
 8003c8a:	88fa      	ldrh	r2, [r7, #6]
 8003c8c:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003c8e:	68fb      	ldr	r3, [r7, #12]
 8003c90:	689b      	ldr	r3, [r3, #8]
 8003c92:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003c96:	d108      	bne.n	8003caa <HAL_UART_Receive+0x74>
 8003c98:	68fb      	ldr	r3, [r7, #12]
 8003c9a:	691b      	ldr	r3, [r3, #16]
 8003c9c:	2b00      	cmp	r3, #0
 8003c9e:	d104      	bne.n	8003caa <HAL_UART_Receive+0x74>
 8003ca0:	2300      	movs	r3, #0
 8003ca2:	61fb      	str	r3, [r7, #28]
 8003ca4:	68bb      	ldr	r3, [r7, #8]
 8003ca6:	61bb      	str	r3, [r7, #24]
 8003ca8:	e003      	b.n	8003cb2 <HAL_UART_Receive+0x7c>
 8003caa:	68bb      	ldr	r3, [r7, #8]
 8003cac:	61fb      	str	r3, [r7, #28]
 8003cae:	2300      	movs	r3, #0
 8003cb0:	61bb      	str	r3, [r7, #24]
 8003cb2:	e047      	b.n	8003d44 <HAL_UART_Receive+0x10e>
 8003cb4:	683b      	ldr	r3, [r7, #0]
 8003cb6:	9300      	str	r3, [sp, #0]
 8003cb8:	697b      	ldr	r3, [r7, #20]
 8003cba:	2200      	movs	r2, #0
 8003cbc:	2120      	movs	r1, #32
 8003cbe:	68f8      	ldr	r0, [r7, #12]
 8003cc0:	f000 fb28 	bl	8004314 <UART_WaitOnFlagUntilTimeout>
 8003cc4:	4603      	mov	r3, r0
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	d005      	beq.n	8003cd6 <HAL_UART_Receive+0xa0>
 8003cca:	68fb      	ldr	r3, [r7, #12]
 8003ccc:	2220      	movs	r2, #32
 8003cce:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003cd2:	2303      	movs	r3, #3
 8003cd4:	e042      	b.n	8003d5c <HAL_UART_Receive+0x126>
 8003cd6:	69fb      	ldr	r3, [r7, #28]
 8003cd8:	2b00      	cmp	r3, #0
 8003cda:	d10c      	bne.n	8003cf6 <HAL_UART_Receive+0xc0>
 8003cdc:	68fb      	ldr	r3, [r7, #12]
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	685b      	ldr	r3, [r3, #4]
 8003ce2:	b29b      	uxth	r3, r3
 8003ce4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003ce8:	b29a      	uxth	r2, r3
 8003cea:	69bb      	ldr	r3, [r7, #24]
 8003cec:	801a      	strh	r2, [r3, #0]
 8003cee:	69bb      	ldr	r3, [r7, #24]
 8003cf0:	3302      	adds	r3, #2
 8003cf2:	61bb      	str	r3, [r7, #24]
 8003cf4:	e01f      	b.n	8003d36 <HAL_UART_Receive+0x100>
 8003cf6:	68fb      	ldr	r3, [r7, #12]
 8003cf8:	689b      	ldr	r3, [r3, #8]
 8003cfa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003cfe:	d007      	beq.n	8003d10 <HAL_UART_Receive+0xda>
 8003d00:	68fb      	ldr	r3, [r7, #12]
 8003d02:	689b      	ldr	r3, [r3, #8]
 8003d04:	2b00      	cmp	r3, #0
 8003d06:	d10a      	bne.n	8003d1e <HAL_UART_Receive+0xe8>
 8003d08:	68fb      	ldr	r3, [r7, #12]
 8003d0a:	691b      	ldr	r3, [r3, #16]
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d106      	bne.n	8003d1e <HAL_UART_Receive+0xe8>
 8003d10:	68fb      	ldr	r3, [r7, #12]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	685b      	ldr	r3, [r3, #4]
 8003d16:	b2da      	uxtb	r2, r3
 8003d18:	69fb      	ldr	r3, [r7, #28]
 8003d1a:	701a      	strb	r2, [r3, #0]
 8003d1c:	e008      	b.n	8003d30 <HAL_UART_Receive+0xfa>
 8003d1e:	68fb      	ldr	r3, [r7, #12]
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	685b      	ldr	r3, [r3, #4]
 8003d24:	b2db      	uxtb	r3, r3
 8003d26:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003d2a:	b2da      	uxtb	r2, r3
 8003d2c:	69fb      	ldr	r3, [r7, #28]
 8003d2e:	701a      	strb	r2, [r3, #0]
 8003d30:	69fb      	ldr	r3, [r7, #28]
 8003d32:	3301      	adds	r3, #1
 8003d34:	61fb      	str	r3, [r7, #28]
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003d3a:	b29b      	uxth	r3, r3
 8003d3c:	3b01      	subs	r3, #1
 8003d3e:	b29a      	uxth	r2, r3
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003d48:	b29b      	uxth	r3, r3
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	d1b2      	bne.n	8003cb4 <HAL_UART_Receive+0x7e>
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	2220      	movs	r2, #32
 8003d52:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003d56:	2300      	movs	r3, #0
 8003d58:	e000      	b.n	8003d5c <HAL_UART_Receive+0x126>
 8003d5a:	2302      	movs	r3, #2
 8003d5c:	4618      	mov	r0, r3
 8003d5e:	3720      	adds	r7, #32
 8003d60:	46bd      	mov	sp, r7
 8003d62:	bd80      	pop	{r7, pc}

08003d64 <HAL_UART_Receive_IT>:
 8003d64:	b580      	push	{r7, lr}
 8003d66:	b084      	sub	sp, #16
 8003d68:	af00      	add	r7, sp, #0
 8003d6a:	60f8      	str	r0, [r7, #12]
 8003d6c:	60b9      	str	r1, [r7, #8]
 8003d6e:	4613      	mov	r3, r2
 8003d70:	80fb      	strh	r3, [r7, #6]
 8003d72:	68fb      	ldr	r3, [r7, #12]
 8003d74:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003d78:	b2db      	uxtb	r3, r3
 8003d7a:	2b20      	cmp	r3, #32
 8003d7c:	d112      	bne.n	8003da4 <HAL_UART_Receive_IT+0x40>
 8003d7e:	68bb      	ldr	r3, [r7, #8]
 8003d80:	2b00      	cmp	r3, #0
 8003d82:	d002      	beq.n	8003d8a <HAL_UART_Receive_IT+0x26>
 8003d84:	88fb      	ldrh	r3, [r7, #6]
 8003d86:	2b00      	cmp	r3, #0
 8003d88:	d101      	bne.n	8003d8e <HAL_UART_Receive_IT+0x2a>
 8003d8a:	2301      	movs	r3, #1
 8003d8c:	e00b      	b.n	8003da6 <HAL_UART_Receive_IT+0x42>
 8003d8e:	68fb      	ldr	r3, [r7, #12]
 8003d90:	2200      	movs	r2, #0
 8003d92:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d94:	88fb      	ldrh	r3, [r7, #6]
 8003d96:	461a      	mov	r2, r3
 8003d98:	68b9      	ldr	r1, [r7, #8]
 8003d9a:	68f8      	ldr	r0, [r7, #12]
 8003d9c:	f000 fb13 	bl	80043c6 <UART_Start_Receive_IT>
 8003da0:	4603      	mov	r3, r0
 8003da2:	e000      	b.n	8003da6 <HAL_UART_Receive_IT+0x42>
 8003da4:	2302      	movs	r3, #2
 8003da6:	4618      	mov	r0, r3
 8003da8:	3710      	adds	r7, #16
 8003daa:	46bd      	mov	sp, r7
 8003dac:	bd80      	pop	{r7, pc}
	...

08003db0 <HAL_UART_IRQHandler>:
 8003db0:	b580      	push	{r7, lr}
 8003db2:	b0ba      	sub	sp, #232	@ 0xe8
 8003db4:	af00      	add	r7, sp, #0
 8003db6:	6078      	str	r0, [r7, #4]
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	681b      	ldr	r3, [r3, #0]
 8003dbc:	681b      	ldr	r3, [r3, #0]
 8003dbe:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	681b      	ldr	r3, [r3, #0]
 8003dc6:	68db      	ldr	r3, [r3, #12]
 8003dc8:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	695b      	ldr	r3, [r3, #20]
 8003dd2:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8003dd6:	2300      	movs	r3, #0
 8003dd8:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003ddc:	2300      	movs	r3, #0
 8003dde:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003de2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003de6:	f003 030f 	and.w	r3, r3, #15
 8003dea:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003dee:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003df2:	2b00      	cmp	r3, #0
 8003df4:	d10f      	bne.n	8003e16 <HAL_UART_IRQHandler+0x66>
 8003df6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003dfa:	f003 0320 	and.w	r3, r3, #32
 8003dfe:	2b00      	cmp	r3, #0
 8003e00:	d009      	beq.n	8003e16 <HAL_UART_IRQHandler+0x66>
 8003e02:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003e06:	f003 0320 	and.w	r3, r3, #32
 8003e0a:	2b00      	cmp	r3, #0
 8003e0c:	d003      	beq.n	8003e16 <HAL_UART_IRQHandler+0x66>
 8003e0e:	6878      	ldr	r0, [r7, #4]
 8003e10:	f000 fbf2 	bl	80045f8 <UART_Receive_IT>
 8003e14:	e25b      	b.n	80042ce <HAL_UART_IRQHandler+0x51e>
 8003e16:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003e1a:	2b00      	cmp	r3, #0
 8003e1c:	f000 80de 	beq.w	8003fdc <HAL_UART_IRQHandler+0x22c>
 8003e20:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003e24:	f003 0301 	and.w	r3, r3, #1
 8003e28:	2b00      	cmp	r3, #0
 8003e2a:	d106      	bne.n	8003e3a <HAL_UART_IRQHandler+0x8a>
 8003e2c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003e30:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8003e34:	2b00      	cmp	r3, #0
 8003e36:	f000 80d1 	beq.w	8003fdc <HAL_UART_IRQHandler+0x22c>
 8003e3a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003e3e:	f003 0301 	and.w	r3, r3, #1
 8003e42:	2b00      	cmp	r3, #0
 8003e44:	d00b      	beq.n	8003e5e <HAL_UART_IRQHandler+0xae>
 8003e46:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003e4a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	d005      	beq.n	8003e5e <HAL_UART_IRQHandler+0xae>
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e56:	f043 0201 	orr.w	r2, r3, #1
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	645a      	str	r2, [r3, #68]	@ 0x44
 8003e5e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003e62:	f003 0304 	and.w	r3, r3, #4
 8003e66:	2b00      	cmp	r3, #0
 8003e68:	d00b      	beq.n	8003e82 <HAL_UART_IRQHandler+0xd2>
 8003e6a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003e6e:	f003 0301 	and.w	r3, r3, #1
 8003e72:	2b00      	cmp	r3, #0
 8003e74:	d005      	beq.n	8003e82 <HAL_UART_IRQHandler+0xd2>
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e7a:	f043 0202 	orr.w	r2, r3, #2
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	645a      	str	r2, [r3, #68]	@ 0x44
 8003e82:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003e86:	f003 0302 	and.w	r3, r3, #2
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	d00b      	beq.n	8003ea6 <HAL_UART_IRQHandler+0xf6>
 8003e8e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003e92:	f003 0301 	and.w	r3, r3, #1
 8003e96:	2b00      	cmp	r3, #0
 8003e98:	d005      	beq.n	8003ea6 <HAL_UART_IRQHandler+0xf6>
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e9e:	f043 0204 	orr.w	r2, r3, #4
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	645a      	str	r2, [r3, #68]	@ 0x44
 8003ea6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003eaa:	f003 0308 	and.w	r3, r3, #8
 8003eae:	2b00      	cmp	r3, #0
 8003eb0:	d011      	beq.n	8003ed6 <HAL_UART_IRQHandler+0x126>
 8003eb2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003eb6:	f003 0320 	and.w	r3, r3, #32
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	d105      	bne.n	8003eca <HAL_UART_IRQHandler+0x11a>
 8003ebe:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003ec2:	f003 0301 	and.w	r3, r3, #1
 8003ec6:	2b00      	cmp	r3, #0
 8003ec8:	d005      	beq.n	8003ed6 <HAL_UART_IRQHandler+0x126>
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003ece:	f043 0208 	orr.w	r2, r3, #8
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	645a      	str	r2, [r3, #68]	@ 0x44
 8003ed6:	687b      	ldr	r3, [r7, #4]
 8003ed8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003eda:	2b00      	cmp	r3, #0
 8003edc:	f000 81f2 	beq.w	80042c4 <HAL_UART_IRQHandler+0x514>
 8003ee0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003ee4:	f003 0320 	and.w	r3, r3, #32
 8003ee8:	2b00      	cmp	r3, #0
 8003eea:	d008      	beq.n	8003efe <HAL_UART_IRQHandler+0x14e>
 8003eec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003ef0:	f003 0320 	and.w	r3, r3, #32
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	d002      	beq.n	8003efe <HAL_UART_IRQHandler+0x14e>
 8003ef8:	6878      	ldr	r0, [r7, #4]
 8003efa:	f000 fb7d 	bl	80045f8 <UART_Receive_IT>
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	695b      	ldr	r3, [r3, #20]
 8003f04:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003f08:	2b40      	cmp	r3, #64	@ 0x40
 8003f0a:	bf0c      	ite	eq
 8003f0c:	2301      	moveq	r3, #1
 8003f0e:	2300      	movne	r3, #0
 8003f10:	b2db      	uxtb	r3, r3
 8003f12:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f1a:	f003 0308 	and.w	r3, r3, #8
 8003f1e:	2b00      	cmp	r3, #0
 8003f20:	d103      	bne.n	8003f2a <HAL_UART_IRQHandler+0x17a>
 8003f22:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8003f26:	2b00      	cmp	r3, #0
 8003f28:	d04f      	beq.n	8003fca <HAL_UART_IRQHandler+0x21a>
 8003f2a:	6878      	ldr	r0, [r7, #4]
 8003f2c:	f000 fa85 	bl	800443a <UART_EndRxTransfer>
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	695b      	ldr	r3, [r3, #20]
 8003f36:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003f3a:	2b40      	cmp	r3, #64	@ 0x40
 8003f3c:	d141      	bne.n	8003fc2 <HAL_UART_IRQHandler+0x212>
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	3314      	adds	r3, #20
 8003f44:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003f48:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8003f4c:	e853 3f00 	ldrex	r3, [r3]
 8003f50:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003f54:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003f58:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003f5c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	681b      	ldr	r3, [r3, #0]
 8003f64:	3314      	adds	r3, #20
 8003f66:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8003f6a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8003f6e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003f72:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8003f76:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8003f7a:	e841 2300 	strex	r3, r2, [r1]
 8003f7e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003f82:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8003f86:	2b00      	cmp	r3, #0
 8003f88:	d1d9      	bne.n	8003f3e <HAL_UART_IRQHandler+0x18e>
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003f8e:	2b00      	cmp	r3, #0
 8003f90:	d013      	beq.n	8003fba <HAL_UART_IRQHandler+0x20a>
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003f96:	4a7e      	ldr	r2, [pc, #504]	@ (8004190 <HAL_UART_IRQHandler+0x3e0>)
 8003f98:	651a      	str	r2, [r3, #80]	@ 0x50
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003f9e:	4618      	mov	r0, r3
 8003fa0:	f7fe fa21 	bl	80023e6 <HAL_DMA_Abort_IT>
 8003fa4:	4603      	mov	r3, r0
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	d016      	beq.n	8003fd8 <HAL_UART_IRQHandler+0x228>
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003fae:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003fb0:	687a      	ldr	r2, [r7, #4]
 8003fb2:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8003fb4:	4610      	mov	r0, r2
 8003fb6:	4798      	blx	r3
 8003fb8:	e00e      	b.n	8003fd8 <HAL_UART_IRQHandler+0x228>
 8003fba:	6878      	ldr	r0, [r7, #4]
 8003fbc:	f000 f994 	bl	80042e8 <HAL_UART_ErrorCallback>
 8003fc0:	e00a      	b.n	8003fd8 <HAL_UART_IRQHandler+0x228>
 8003fc2:	6878      	ldr	r0, [r7, #4]
 8003fc4:	f000 f990 	bl	80042e8 <HAL_UART_ErrorCallback>
 8003fc8:	e006      	b.n	8003fd8 <HAL_UART_IRQHandler+0x228>
 8003fca:	6878      	ldr	r0, [r7, #4]
 8003fcc:	f000 f98c 	bl	80042e8 <HAL_UART_ErrorCallback>
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	2200      	movs	r2, #0
 8003fd4:	645a      	str	r2, [r3, #68]	@ 0x44
 8003fd6:	e175      	b.n	80042c4 <HAL_UART_IRQHandler+0x514>
 8003fd8:	bf00      	nop
 8003fda:	e173      	b.n	80042c4 <HAL_UART_IRQHandler+0x514>
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003fe0:	2b01      	cmp	r3, #1
 8003fe2:	f040 814f 	bne.w	8004284 <HAL_UART_IRQHandler+0x4d4>
 8003fe6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003fea:	f003 0310 	and.w	r3, r3, #16
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	f000 8148 	beq.w	8004284 <HAL_UART_IRQHandler+0x4d4>
 8003ff4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003ff8:	f003 0310 	and.w	r3, r3, #16
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	f000 8141 	beq.w	8004284 <HAL_UART_IRQHandler+0x4d4>
 8004002:	2300      	movs	r3, #0
 8004004:	60bb      	str	r3, [r7, #8]
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	681b      	ldr	r3, [r3, #0]
 800400c:	60bb      	str	r3, [r7, #8]
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	681b      	ldr	r3, [r3, #0]
 8004012:	685b      	ldr	r3, [r3, #4]
 8004014:	60bb      	str	r3, [r7, #8]
 8004016:	68bb      	ldr	r3, [r7, #8]
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	681b      	ldr	r3, [r3, #0]
 800401c:	695b      	ldr	r3, [r3, #20]
 800401e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004022:	2b40      	cmp	r3, #64	@ 0x40
 8004024:	f040 80b6 	bne.w	8004194 <HAL_UART_IRQHandler+0x3e4>
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	685b      	ldr	r3, [r3, #4]
 8004030:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8004034:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8004038:	2b00      	cmp	r3, #0
 800403a:	f000 8145 	beq.w	80042c8 <HAL_UART_IRQHandler+0x518>
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004042:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004046:	429a      	cmp	r2, r3
 8004048:	f080 813e 	bcs.w	80042c8 <HAL_UART_IRQHandler+0x518>
 800404c:	687b      	ldr	r3, [r7, #4]
 800404e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004052:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004054:	687b      	ldr	r3, [r7, #4]
 8004056:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004058:	69db      	ldr	r3, [r3, #28]
 800405a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800405e:	f000 8088 	beq.w	8004172 <HAL_UART_IRQHandler+0x3c2>
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	330c      	adds	r3, #12
 8004068:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800406c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8004070:	e853 3f00 	ldrex	r3, [r3]
 8004074:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004078:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800407c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004080:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	681b      	ldr	r3, [r3, #0]
 8004088:	330c      	adds	r3, #12
 800408a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800408e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8004092:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004096:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800409a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800409e:	e841 2300 	strex	r3, r2, [r1]
 80040a2:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80040a6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80040aa:	2b00      	cmp	r3, #0
 80040ac:	d1d9      	bne.n	8004062 <HAL_UART_IRQHandler+0x2b2>
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	681b      	ldr	r3, [r3, #0]
 80040b2:	3314      	adds	r3, #20
 80040b4:	677b      	str	r3, [r7, #116]	@ 0x74
 80040b6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80040b8:	e853 3f00 	ldrex	r3, [r3]
 80040bc:	673b      	str	r3, [r7, #112]	@ 0x70
 80040be:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80040c0:	f023 0301 	bic.w	r3, r3, #1
 80040c4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	681b      	ldr	r3, [r3, #0]
 80040cc:	3314      	adds	r3, #20
 80040ce:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80040d2:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80040d6:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80040d8:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80040da:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80040de:	e841 2300 	strex	r3, r2, [r1]
 80040e2:	67bb      	str	r3, [r7, #120]	@ 0x78
 80040e4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80040e6:	2b00      	cmp	r3, #0
 80040e8:	d1e1      	bne.n	80040ae <HAL_UART_IRQHandler+0x2fe>
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	681b      	ldr	r3, [r3, #0]
 80040ee:	3314      	adds	r3, #20
 80040f0:	663b      	str	r3, [r7, #96]	@ 0x60
 80040f2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80040f4:	e853 3f00 	ldrex	r3, [r3]
 80040f8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80040fa:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80040fc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004100:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	3314      	adds	r3, #20
 800410a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 800410e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004110:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004112:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8004114:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8004116:	e841 2300 	strex	r3, r2, [r1]
 800411a:	667b      	str	r3, [r7, #100]	@ 0x64
 800411c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800411e:	2b00      	cmp	r3, #0
 8004120:	d1e3      	bne.n	80040ea <HAL_UART_IRQHandler+0x33a>
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	2220      	movs	r2, #32
 8004126:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	2200      	movs	r2, #0
 800412e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	330c      	adds	r3, #12
 8004136:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004138:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800413a:	e853 3f00 	ldrex	r3, [r3]
 800413e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004140:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004142:	f023 0310 	bic.w	r3, r3, #16
 8004146:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	330c      	adds	r3, #12
 8004150:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8004154:	65ba      	str	r2, [r7, #88]	@ 0x58
 8004156:	657b      	str	r3, [r7, #84]	@ 0x54
 8004158:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800415a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800415c:	e841 2300 	strex	r3, r2, [r1]
 8004160:	653b      	str	r3, [r7, #80]	@ 0x50
 8004162:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004164:	2b00      	cmp	r3, #0
 8004166:	d1e3      	bne.n	8004130 <HAL_UART_IRQHandler+0x380>
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800416c:	4618      	mov	r0, r3
 800416e:	f7fe f8ca 	bl	8002306 <HAL_DMA_Abort>
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	2202      	movs	r2, #2
 8004176:	635a      	str	r2, [r3, #52]	@ 0x34
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800417c:	687b      	ldr	r3, [r7, #4]
 800417e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004180:	b29b      	uxth	r3, r3
 8004182:	1ad3      	subs	r3, r2, r3
 8004184:	b29b      	uxth	r3, r3
 8004186:	4619      	mov	r1, r3
 8004188:	6878      	ldr	r0, [r7, #4]
 800418a:	f000 f8b7 	bl	80042fc <HAL_UARTEx_RxEventCallback>
 800418e:	e09b      	b.n	80042c8 <HAL_UART_IRQHandler+0x518>
 8004190:	08004501 	.word	0x08004501
 8004194:	687b      	ldr	r3, [r7, #4]
 8004196:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800419c:	b29b      	uxth	r3, r3
 800419e:	1ad3      	subs	r3, r2, r3
 80041a0:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80041a8:	b29b      	uxth	r3, r3
 80041aa:	2b00      	cmp	r3, #0
 80041ac:	f000 808e 	beq.w	80042cc <HAL_UART_IRQHandler+0x51c>
 80041b0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80041b4:	2b00      	cmp	r3, #0
 80041b6:	f000 8089 	beq.w	80042cc <HAL_UART_IRQHandler+0x51c>
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	330c      	adds	r3, #12
 80041c0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80041c2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80041c4:	e853 3f00 	ldrex	r3, [r3]
 80041c8:	637b      	str	r3, [r7, #52]	@ 0x34
 80041ca:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80041cc:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80041d0:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	681b      	ldr	r3, [r3, #0]
 80041d8:	330c      	adds	r3, #12
 80041da:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80041de:	647a      	str	r2, [r7, #68]	@ 0x44
 80041e0:	643b      	str	r3, [r7, #64]	@ 0x40
 80041e2:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80041e4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80041e6:	e841 2300 	strex	r3, r2, [r1]
 80041ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80041ec:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80041ee:	2b00      	cmp	r3, #0
 80041f0:	d1e3      	bne.n	80041ba <HAL_UART_IRQHandler+0x40a>
 80041f2:	687b      	ldr	r3, [r7, #4]
 80041f4:	681b      	ldr	r3, [r3, #0]
 80041f6:	3314      	adds	r3, #20
 80041f8:	627b      	str	r3, [r7, #36]	@ 0x24
 80041fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80041fc:	e853 3f00 	ldrex	r3, [r3]
 8004200:	623b      	str	r3, [r7, #32]
 8004202:	6a3b      	ldr	r3, [r7, #32]
 8004204:	f023 0301 	bic.w	r3, r3, #1
 8004208:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	3314      	adds	r3, #20
 8004212:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8004216:	633a      	str	r2, [r7, #48]	@ 0x30
 8004218:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800421a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800421c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800421e:	e841 2300 	strex	r3, r2, [r1]
 8004222:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004224:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004226:	2b00      	cmp	r3, #0
 8004228:	d1e3      	bne.n	80041f2 <HAL_UART_IRQHandler+0x442>
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	2220      	movs	r2, #32
 800422e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	2200      	movs	r2, #0
 8004236:	631a      	str	r2, [r3, #48]	@ 0x30
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	681b      	ldr	r3, [r3, #0]
 800423c:	330c      	adds	r3, #12
 800423e:	613b      	str	r3, [r7, #16]
 8004240:	693b      	ldr	r3, [r7, #16]
 8004242:	e853 3f00 	ldrex	r3, [r3]
 8004246:	60fb      	str	r3, [r7, #12]
 8004248:	68fb      	ldr	r3, [r7, #12]
 800424a:	f023 0310 	bic.w	r3, r3, #16
 800424e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	681b      	ldr	r3, [r3, #0]
 8004256:	330c      	adds	r3, #12
 8004258:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 800425c:	61fa      	str	r2, [r7, #28]
 800425e:	61bb      	str	r3, [r7, #24]
 8004260:	69b9      	ldr	r1, [r7, #24]
 8004262:	69fa      	ldr	r2, [r7, #28]
 8004264:	e841 2300 	strex	r3, r2, [r1]
 8004268:	617b      	str	r3, [r7, #20]
 800426a:	697b      	ldr	r3, [r7, #20]
 800426c:	2b00      	cmp	r3, #0
 800426e:	d1e3      	bne.n	8004238 <HAL_UART_IRQHandler+0x488>
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	2202      	movs	r2, #2
 8004274:	635a      	str	r2, [r3, #52]	@ 0x34
 8004276:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800427a:	4619      	mov	r1, r3
 800427c:	6878      	ldr	r0, [r7, #4]
 800427e:	f000 f83d 	bl	80042fc <HAL_UARTEx_RxEventCallback>
 8004282:	e023      	b.n	80042cc <HAL_UART_IRQHandler+0x51c>
 8004284:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004288:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800428c:	2b00      	cmp	r3, #0
 800428e:	d009      	beq.n	80042a4 <HAL_UART_IRQHandler+0x4f4>
 8004290:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004294:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004298:	2b00      	cmp	r3, #0
 800429a:	d003      	beq.n	80042a4 <HAL_UART_IRQHandler+0x4f4>
 800429c:	6878      	ldr	r0, [r7, #4]
 800429e:	f000 f943 	bl	8004528 <UART_Transmit_IT>
 80042a2:	e014      	b.n	80042ce <HAL_UART_IRQHandler+0x51e>
 80042a4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80042a8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80042ac:	2b00      	cmp	r3, #0
 80042ae:	d00e      	beq.n	80042ce <HAL_UART_IRQHandler+0x51e>
 80042b0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80042b4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80042b8:	2b00      	cmp	r3, #0
 80042ba:	d008      	beq.n	80042ce <HAL_UART_IRQHandler+0x51e>
 80042bc:	6878      	ldr	r0, [r7, #4]
 80042be:	f000 f983 	bl	80045c8 <UART_EndTransmit_IT>
 80042c2:	e004      	b.n	80042ce <HAL_UART_IRQHandler+0x51e>
 80042c4:	bf00      	nop
 80042c6:	e002      	b.n	80042ce <HAL_UART_IRQHandler+0x51e>
 80042c8:	bf00      	nop
 80042ca:	e000      	b.n	80042ce <HAL_UART_IRQHandler+0x51e>
 80042cc:	bf00      	nop
 80042ce:	37e8      	adds	r7, #232	@ 0xe8
 80042d0:	46bd      	mov	sp, r7
 80042d2:	bd80      	pop	{r7, pc}

080042d4 <HAL_UART_TxCpltCallback>:
 80042d4:	b480      	push	{r7}
 80042d6:	b083      	sub	sp, #12
 80042d8:	af00      	add	r7, sp, #0
 80042da:	6078      	str	r0, [r7, #4]
 80042dc:	bf00      	nop
 80042de:	370c      	adds	r7, #12
 80042e0:	46bd      	mov	sp, r7
 80042e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042e6:	4770      	bx	lr

080042e8 <HAL_UART_ErrorCallback>:
 80042e8:	b480      	push	{r7}
 80042ea:	b083      	sub	sp, #12
 80042ec:	af00      	add	r7, sp, #0
 80042ee:	6078      	str	r0, [r7, #4]
 80042f0:	bf00      	nop
 80042f2:	370c      	adds	r7, #12
 80042f4:	46bd      	mov	sp, r7
 80042f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042fa:	4770      	bx	lr

080042fc <HAL_UARTEx_RxEventCallback>:
 80042fc:	b480      	push	{r7}
 80042fe:	b083      	sub	sp, #12
 8004300:	af00      	add	r7, sp, #0
 8004302:	6078      	str	r0, [r7, #4]
 8004304:	460b      	mov	r3, r1
 8004306:	807b      	strh	r3, [r7, #2]
 8004308:	bf00      	nop
 800430a:	370c      	adds	r7, #12
 800430c:	46bd      	mov	sp, r7
 800430e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004312:	4770      	bx	lr

08004314 <UART_WaitOnFlagUntilTimeout>:
 8004314:	b580      	push	{r7, lr}
 8004316:	b086      	sub	sp, #24
 8004318:	af00      	add	r7, sp, #0
 800431a:	60f8      	str	r0, [r7, #12]
 800431c:	60b9      	str	r1, [r7, #8]
 800431e:	603b      	str	r3, [r7, #0]
 8004320:	4613      	mov	r3, r2
 8004322:	71fb      	strb	r3, [r7, #7]
 8004324:	e03b      	b.n	800439e <UART_WaitOnFlagUntilTimeout+0x8a>
 8004326:	6a3b      	ldr	r3, [r7, #32]
 8004328:	f1b3 3fff 	cmp.w	r3, #4294967295
 800432c:	d037      	beq.n	800439e <UART_WaitOnFlagUntilTimeout+0x8a>
 800432e:	f7fd fab7 	bl	80018a0 <HAL_GetTick>
 8004332:	4602      	mov	r2, r0
 8004334:	683b      	ldr	r3, [r7, #0]
 8004336:	1ad3      	subs	r3, r2, r3
 8004338:	6a3a      	ldr	r2, [r7, #32]
 800433a:	429a      	cmp	r2, r3
 800433c:	d302      	bcc.n	8004344 <UART_WaitOnFlagUntilTimeout+0x30>
 800433e:	6a3b      	ldr	r3, [r7, #32]
 8004340:	2b00      	cmp	r3, #0
 8004342:	d101      	bne.n	8004348 <UART_WaitOnFlagUntilTimeout+0x34>
 8004344:	2303      	movs	r3, #3
 8004346:	e03a      	b.n	80043be <UART_WaitOnFlagUntilTimeout+0xaa>
 8004348:	68fb      	ldr	r3, [r7, #12]
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	68db      	ldr	r3, [r3, #12]
 800434e:	f003 0304 	and.w	r3, r3, #4
 8004352:	2b00      	cmp	r3, #0
 8004354:	d023      	beq.n	800439e <UART_WaitOnFlagUntilTimeout+0x8a>
 8004356:	68bb      	ldr	r3, [r7, #8]
 8004358:	2b80      	cmp	r3, #128	@ 0x80
 800435a:	d020      	beq.n	800439e <UART_WaitOnFlagUntilTimeout+0x8a>
 800435c:	68bb      	ldr	r3, [r7, #8]
 800435e:	2b40      	cmp	r3, #64	@ 0x40
 8004360:	d01d      	beq.n	800439e <UART_WaitOnFlagUntilTimeout+0x8a>
 8004362:	68fb      	ldr	r3, [r7, #12]
 8004364:	681b      	ldr	r3, [r3, #0]
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	f003 0308 	and.w	r3, r3, #8
 800436c:	2b08      	cmp	r3, #8
 800436e:	d116      	bne.n	800439e <UART_WaitOnFlagUntilTimeout+0x8a>
 8004370:	2300      	movs	r3, #0
 8004372:	617b      	str	r3, [r7, #20]
 8004374:	68fb      	ldr	r3, [r7, #12]
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	681b      	ldr	r3, [r3, #0]
 800437a:	617b      	str	r3, [r7, #20]
 800437c:	68fb      	ldr	r3, [r7, #12]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	685b      	ldr	r3, [r3, #4]
 8004382:	617b      	str	r3, [r7, #20]
 8004384:	697b      	ldr	r3, [r7, #20]
 8004386:	68f8      	ldr	r0, [r7, #12]
 8004388:	f000 f857 	bl	800443a <UART_EndRxTransfer>
 800438c:	68fb      	ldr	r3, [r7, #12]
 800438e:	2208      	movs	r2, #8
 8004390:	645a      	str	r2, [r3, #68]	@ 0x44
 8004392:	68fb      	ldr	r3, [r7, #12]
 8004394:	2200      	movs	r2, #0
 8004396:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800439a:	2301      	movs	r3, #1
 800439c:	e00f      	b.n	80043be <UART_WaitOnFlagUntilTimeout+0xaa>
 800439e:	68fb      	ldr	r3, [r7, #12]
 80043a0:	681b      	ldr	r3, [r3, #0]
 80043a2:	681a      	ldr	r2, [r3, #0]
 80043a4:	68bb      	ldr	r3, [r7, #8]
 80043a6:	4013      	ands	r3, r2
 80043a8:	68ba      	ldr	r2, [r7, #8]
 80043aa:	429a      	cmp	r2, r3
 80043ac:	bf0c      	ite	eq
 80043ae:	2301      	moveq	r3, #1
 80043b0:	2300      	movne	r3, #0
 80043b2:	b2db      	uxtb	r3, r3
 80043b4:	461a      	mov	r2, r3
 80043b6:	79fb      	ldrb	r3, [r7, #7]
 80043b8:	429a      	cmp	r2, r3
 80043ba:	d0b4      	beq.n	8004326 <UART_WaitOnFlagUntilTimeout+0x12>
 80043bc:	2300      	movs	r3, #0
 80043be:	4618      	mov	r0, r3
 80043c0:	3718      	adds	r7, #24
 80043c2:	46bd      	mov	sp, r7
 80043c4:	bd80      	pop	{r7, pc}

080043c6 <UART_Start_Receive_IT>:
 80043c6:	b480      	push	{r7}
 80043c8:	b085      	sub	sp, #20
 80043ca:	af00      	add	r7, sp, #0
 80043cc:	60f8      	str	r0, [r7, #12]
 80043ce:	60b9      	str	r1, [r7, #8]
 80043d0:	4613      	mov	r3, r2
 80043d2:	80fb      	strh	r3, [r7, #6]
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	68ba      	ldr	r2, [r7, #8]
 80043d8:	629a      	str	r2, [r3, #40]	@ 0x28
 80043da:	68fb      	ldr	r3, [r7, #12]
 80043dc:	88fa      	ldrh	r2, [r7, #6]
 80043de:	859a      	strh	r2, [r3, #44]	@ 0x2c
 80043e0:	68fb      	ldr	r3, [r7, #12]
 80043e2:	88fa      	ldrh	r2, [r7, #6]
 80043e4:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80043e6:	68fb      	ldr	r3, [r7, #12]
 80043e8:	2200      	movs	r2, #0
 80043ea:	645a      	str	r2, [r3, #68]	@ 0x44
 80043ec:	68fb      	ldr	r3, [r7, #12]
 80043ee:	2222      	movs	r2, #34	@ 0x22
 80043f0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80043f4:	68fb      	ldr	r3, [r7, #12]
 80043f6:	691b      	ldr	r3, [r3, #16]
 80043f8:	2b00      	cmp	r3, #0
 80043fa:	d007      	beq.n	800440c <UART_Start_Receive_IT+0x46>
 80043fc:	68fb      	ldr	r3, [r7, #12]
 80043fe:	681b      	ldr	r3, [r3, #0]
 8004400:	68da      	ldr	r2, [r3, #12]
 8004402:	68fb      	ldr	r3, [r7, #12]
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800440a:	60da      	str	r2, [r3, #12]
 800440c:	68fb      	ldr	r3, [r7, #12]
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	695a      	ldr	r2, [r3, #20]
 8004412:	68fb      	ldr	r3, [r7, #12]
 8004414:	681b      	ldr	r3, [r3, #0]
 8004416:	f042 0201 	orr.w	r2, r2, #1
 800441a:	615a      	str	r2, [r3, #20]
 800441c:	68fb      	ldr	r3, [r7, #12]
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	68da      	ldr	r2, [r3, #12]
 8004422:	68fb      	ldr	r3, [r7, #12]
 8004424:	681b      	ldr	r3, [r3, #0]
 8004426:	f042 0220 	orr.w	r2, r2, #32
 800442a:	60da      	str	r2, [r3, #12]
 800442c:	2300      	movs	r3, #0
 800442e:	4618      	mov	r0, r3
 8004430:	3714      	adds	r7, #20
 8004432:	46bd      	mov	sp, r7
 8004434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004438:	4770      	bx	lr

0800443a <UART_EndRxTransfer>:
 800443a:	b480      	push	{r7}
 800443c:	b095      	sub	sp, #84	@ 0x54
 800443e:	af00      	add	r7, sp, #0
 8004440:	6078      	str	r0, [r7, #4]
 8004442:	687b      	ldr	r3, [r7, #4]
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	330c      	adds	r3, #12
 8004448:	637b      	str	r3, [r7, #52]	@ 0x34
 800444a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800444c:	e853 3f00 	ldrex	r3, [r3]
 8004450:	633b      	str	r3, [r7, #48]	@ 0x30
 8004452:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004454:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004458:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	681b      	ldr	r3, [r3, #0]
 800445e:	330c      	adds	r3, #12
 8004460:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8004462:	643a      	str	r2, [r7, #64]	@ 0x40
 8004464:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004466:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004468:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800446a:	e841 2300 	strex	r3, r2, [r1]
 800446e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004470:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004472:	2b00      	cmp	r3, #0
 8004474:	d1e5      	bne.n	8004442 <UART_EndRxTransfer+0x8>
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	681b      	ldr	r3, [r3, #0]
 800447a:	3314      	adds	r3, #20
 800447c:	623b      	str	r3, [r7, #32]
 800447e:	6a3b      	ldr	r3, [r7, #32]
 8004480:	e853 3f00 	ldrex	r3, [r3]
 8004484:	61fb      	str	r3, [r7, #28]
 8004486:	69fb      	ldr	r3, [r7, #28]
 8004488:	f023 0301 	bic.w	r3, r3, #1
 800448c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	3314      	adds	r3, #20
 8004494:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004496:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004498:	62bb      	str	r3, [r7, #40]	@ 0x28
 800449a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800449c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800449e:	e841 2300 	strex	r3, r2, [r1]
 80044a2:	627b      	str	r3, [r7, #36]	@ 0x24
 80044a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80044a6:	2b00      	cmp	r3, #0
 80044a8:	d1e5      	bne.n	8004476 <UART_EndRxTransfer+0x3c>
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044ae:	2b01      	cmp	r3, #1
 80044b0:	d119      	bne.n	80044e6 <UART_EndRxTransfer+0xac>
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	330c      	adds	r3, #12
 80044b8:	60fb      	str	r3, [r7, #12]
 80044ba:	68fb      	ldr	r3, [r7, #12]
 80044bc:	e853 3f00 	ldrex	r3, [r3]
 80044c0:	60bb      	str	r3, [r7, #8]
 80044c2:	68bb      	ldr	r3, [r7, #8]
 80044c4:	f023 0310 	bic.w	r3, r3, #16
 80044c8:	647b      	str	r3, [r7, #68]	@ 0x44
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	330c      	adds	r3, #12
 80044d0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80044d2:	61ba      	str	r2, [r7, #24]
 80044d4:	617b      	str	r3, [r7, #20]
 80044d6:	6979      	ldr	r1, [r7, #20]
 80044d8:	69ba      	ldr	r2, [r7, #24]
 80044da:	e841 2300 	strex	r3, r2, [r1]
 80044de:	613b      	str	r3, [r7, #16]
 80044e0:	693b      	ldr	r3, [r7, #16]
 80044e2:	2b00      	cmp	r3, #0
 80044e4:	d1e5      	bne.n	80044b2 <UART_EndRxTransfer+0x78>
 80044e6:	687b      	ldr	r3, [r7, #4]
 80044e8:	2220      	movs	r2, #32
 80044ea:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	2200      	movs	r2, #0
 80044f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80044f4:	bf00      	nop
 80044f6:	3754      	adds	r7, #84	@ 0x54
 80044f8:	46bd      	mov	sp, r7
 80044fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044fe:	4770      	bx	lr

08004500 <UART_DMAAbortOnError>:
 8004500:	b580      	push	{r7, lr}
 8004502:	b084      	sub	sp, #16
 8004504:	af00      	add	r7, sp, #0
 8004506:	6078      	str	r0, [r7, #4]
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800450c:	60fb      	str	r3, [r7, #12]
 800450e:	68fb      	ldr	r3, [r7, #12]
 8004510:	2200      	movs	r2, #0
 8004512:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004514:	68fb      	ldr	r3, [r7, #12]
 8004516:	2200      	movs	r2, #0
 8004518:	84da      	strh	r2, [r3, #38]	@ 0x26
 800451a:	68f8      	ldr	r0, [r7, #12]
 800451c:	f7ff fee4 	bl	80042e8 <HAL_UART_ErrorCallback>
 8004520:	bf00      	nop
 8004522:	3710      	adds	r7, #16
 8004524:	46bd      	mov	sp, r7
 8004526:	bd80      	pop	{r7, pc}

08004528 <UART_Transmit_IT>:
 8004528:	b480      	push	{r7}
 800452a:	b085      	sub	sp, #20
 800452c:	af00      	add	r7, sp, #0
 800452e:	6078      	str	r0, [r7, #4]
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004536:	b2db      	uxtb	r3, r3
 8004538:	2b21      	cmp	r3, #33	@ 0x21
 800453a:	d13e      	bne.n	80045ba <UART_Transmit_IT+0x92>
 800453c:	687b      	ldr	r3, [r7, #4]
 800453e:	689b      	ldr	r3, [r3, #8]
 8004540:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004544:	d114      	bne.n	8004570 <UART_Transmit_IT+0x48>
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	691b      	ldr	r3, [r3, #16]
 800454a:	2b00      	cmp	r3, #0
 800454c:	d110      	bne.n	8004570 <UART_Transmit_IT+0x48>
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	6a1b      	ldr	r3, [r3, #32]
 8004552:	60fb      	str	r3, [r7, #12]
 8004554:	68fb      	ldr	r3, [r7, #12]
 8004556:	881b      	ldrh	r3, [r3, #0]
 8004558:	461a      	mov	r2, r3
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004562:	605a      	str	r2, [r3, #4]
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	6a1b      	ldr	r3, [r3, #32]
 8004568:	1c9a      	adds	r2, r3, #2
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	621a      	str	r2, [r3, #32]
 800456e:	e008      	b.n	8004582 <UART_Transmit_IT+0x5a>
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	6a1b      	ldr	r3, [r3, #32]
 8004574:	1c59      	adds	r1, r3, #1
 8004576:	687a      	ldr	r2, [r7, #4]
 8004578:	6211      	str	r1, [r2, #32]
 800457a:	781a      	ldrb	r2, [r3, #0]
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	605a      	str	r2, [r3, #4]
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8004586:	b29b      	uxth	r3, r3
 8004588:	3b01      	subs	r3, #1
 800458a:	b29b      	uxth	r3, r3
 800458c:	687a      	ldr	r2, [r7, #4]
 800458e:	4619      	mov	r1, r3
 8004590:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8004592:	2b00      	cmp	r3, #0
 8004594:	d10f      	bne.n	80045b6 <UART_Transmit_IT+0x8e>
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	68da      	ldr	r2, [r3, #12]
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80045a4:	60da      	str	r2, [r3, #12]
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	681b      	ldr	r3, [r3, #0]
 80045aa:	68da      	ldr	r2, [r3, #12]
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80045b4:	60da      	str	r2, [r3, #12]
 80045b6:	2300      	movs	r3, #0
 80045b8:	e000      	b.n	80045bc <UART_Transmit_IT+0x94>
 80045ba:	2302      	movs	r3, #2
 80045bc:	4618      	mov	r0, r3
 80045be:	3714      	adds	r7, #20
 80045c0:	46bd      	mov	sp, r7
 80045c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045c6:	4770      	bx	lr

080045c8 <UART_EndTransmit_IT>:
 80045c8:	b580      	push	{r7, lr}
 80045ca:	b082      	sub	sp, #8
 80045cc:	af00      	add	r7, sp, #0
 80045ce:	6078      	str	r0, [r7, #4]
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	68da      	ldr	r2, [r3, #12]
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80045de:	60da      	str	r2, [r3, #12]
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	2220      	movs	r2, #32
 80045e4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80045e8:	6878      	ldr	r0, [r7, #4]
 80045ea:	f7ff fe73 	bl	80042d4 <HAL_UART_TxCpltCallback>
 80045ee:	2300      	movs	r3, #0
 80045f0:	4618      	mov	r0, r3
 80045f2:	3708      	adds	r7, #8
 80045f4:	46bd      	mov	sp, r7
 80045f6:	bd80      	pop	{r7, pc}

080045f8 <UART_Receive_IT>:
 80045f8:	b580      	push	{r7, lr}
 80045fa:	b08c      	sub	sp, #48	@ 0x30
 80045fc:	af00      	add	r7, sp, #0
 80045fe:	6078      	str	r0, [r7, #4]
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8004606:	b2db      	uxtb	r3, r3
 8004608:	2b22      	cmp	r3, #34	@ 0x22
 800460a:	f040 80ae 	bne.w	800476a <UART_Receive_IT+0x172>
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	689b      	ldr	r3, [r3, #8]
 8004612:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004616:	d117      	bne.n	8004648 <UART_Receive_IT+0x50>
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	691b      	ldr	r3, [r3, #16]
 800461c:	2b00      	cmp	r3, #0
 800461e:	d113      	bne.n	8004648 <UART_Receive_IT+0x50>
 8004620:	2300      	movs	r3, #0
 8004622:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004628:	62bb      	str	r3, [r7, #40]	@ 0x28
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	685b      	ldr	r3, [r3, #4]
 8004630:	b29b      	uxth	r3, r3
 8004632:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004636:	b29a      	uxth	r2, r3
 8004638:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800463a:	801a      	strh	r2, [r3, #0]
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004640:	1c9a      	adds	r2, r3, #2
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	629a      	str	r2, [r3, #40]	@ 0x28
 8004646:	e026      	b.n	8004696 <UART_Receive_IT+0x9e>
 8004648:	687b      	ldr	r3, [r7, #4]
 800464a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800464c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800464e:	2300      	movs	r3, #0
 8004650:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	689b      	ldr	r3, [r3, #8]
 8004656:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800465a:	d007      	beq.n	800466c <UART_Receive_IT+0x74>
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	689b      	ldr	r3, [r3, #8]
 8004660:	2b00      	cmp	r3, #0
 8004662:	d10a      	bne.n	800467a <UART_Receive_IT+0x82>
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	691b      	ldr	r3, [r3, #16]
 8004668:	2b00      	cmp	r3, #0
 800466a:	d106      	bne.n	800467a <UART_Receive_IT+0x82>
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	681b      	ldr	r3, [r3, #0]
 8004670:	685b      	ldr	r3, [r3, #4]
 8004672:	b2da      	uxtb	r2, r3
 8004674:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004676:	701a      	strb	r2, [r3, #0]
 8004678:	e008      	b.n	800468c <UART_Receive_IT+0x94>
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	685b      	ldr	r3, [r3, #4]
 8004680:	b2db      	uxtb	r3, r3
 8004682:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8004686:	b2da      	uxtb	r2, r3
 8004688:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800468a:	701a      	strb	r2, [r3, #0]
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004690:	1c5a      	adds	r2, r3, #1
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	629a      	str	r2, [r3, #40]	@ 0x28
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800469a:	b29b      	uxth	r3, r3
 800469c:	3b01      	subs	r3, #1
 800469e:	b29b      	uxth	r3, r3
 80046a0:	687a      	ldr	r2, [r7, #4]
 80046a2:	4619      	mov	r1, r3
 80046a4:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 80046a6:	2b00      	cmp	r3, #0
 80046a8:	d15d      	bne.n	8004766 <UART_Receive_IT+0x16e>
 80046aa:	687b      	ldr	r3, [r7, #4]
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	68da      	ldr	r2, [r3, #12]
 80046b0:	687b      	ldr	r3, [r7, #4]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	f022 0220 	bic.w	r2, r2, #32
 80046b8:	60da      	str	r2, [r3, #12]
 80046ba:	687b      	ldr	r3, [r7, #4]
 80046bc:	681b      	ldr	r3, [r3, #0]
 80046be:	68da      	ldr	r2, [r3, #12]
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	681b      	ldr	r3, [r3, #0]
 80046c4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80046c8:	60da      	str	r2, [r3, #12]
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	695a      	ldr	r2, [r3, #20]
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	f022 0201 	bic.w	r2, r2, #1
 80046d8:	615a      	str	r2, [r3, #20]
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	2220      	movs	r2, #32
 80046de:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	2200      	movs	r2, #0
 80046e6:	635a      	str	r2, [r3, #52]	@ 0x34
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80046ec:	2b01      	cmp	r3, #1
 80046ee:	d135      	bne.n	800475c <UART_Receive_IT+0x164>
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	2200      	movs	r2, #0
 80046f4:	631a      	str	r2, [r3, #48]	@ 0x30
 80046f6:	687b      	ldr	r3, [r7, #4]
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	330c      	adds	r3, #12
 80046fc:	617b      	str	r3, [r7, #20]
 80046fe:	697b      	ldr	r3, [r7, #20]
 8004700:	e853 3f00 	ldrex	r3, [r3]
 8004704:	613b      	str	r3, [r7, #16]
 8004706:	693b      	ldr	r3, [r7, #16]
 8004708:	f023 0310 	bic.w	r3, r3, #16
 800470c:	627b      	str	r3, [r7, #36]	@ 0x24
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	681b      	ldr	r3, [r3, #0]
 8004712:	330c      	adds	r3, #12
 8004714:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004716:	623a      	str	r2, [r7, #32]
 8004718:	61fb      	str	r3, [r7, #28]
 800471a:	69f9      	ldr	r1, [r7, #28]
 800471c:	6a3a      	ldr	r2, [r7, #32]
 800471e:	e841 2300 	strex	r3, r2, [r1]
 8004722:	61bb      	str	r3, [r7, #24]
 8004724:	69bb      	ldr	r3, [r7, #24]
 8004726:	2b00      	cmp	r3, #0
 8004728:	d1e5      	bne.n	80046f6 <UART_Receive_IT+0xfe>
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	681b      	ldr	r3, [r3, #0]
 8004730:	f003 0310 	and.w	r3, r3, #16
 8004734:	2b10      	cmp	r3, #16
 8004736:	d10a      	bne.n	800474e <UART_Receive_IT+0x156>
 8004738:	2300      	movs	r3, #0
 800473a:	60fb      	str	r3, [r7, #12]
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	681b      	ldr	r3, [r3, #0]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	60fb      	str	r3, [r7, #12]
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	685b      	ldr	r3, [r3, #4]
 800474a:	60fb      	str	r3, [r7, #12]
 800474c:	68fb      	ldr	r3, [r7, #12]
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004752:	4619      	mov	r1, r3
 8004754:	6878      	ldr	r0, [r7, #4]
 8004756:	f7ff fdd1 	bl	80042fc <HAL_UARTEx_RxEventCallback>
 800475a:	e002      	b.n	8004762 <UART_Receive_IT+0x16a>
 800475c:	6878      	ldr	r0, [r7, #4]
 800475e:	f7fc f897 	bl	8000890 <HAL_UART_RxCpltCallback>
 8004762:	2300      	movs	r3, #0
 8004764:	e002      	b.n	800476c <UART_Receive_IT+0x174>
 8004766:	2300      	movs	r3, #0
 8004768:	e000      	b.n	800476c <UART_Receive_IT+0x174>
 800476a:	2302      	movs	r3, #2
 800476c:	4618      	mov	r0, r3
 800476e:	3730      	adds	r7, #48	@ 0x30
 8004770:	46bd      	mov	sp, r7
 8004772:	bd80      	pop	{r7, pc}

08004774 <UART_SetConfig>:
 8004774:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004778:	b0c0      	sub	sp, #256	@ 0x100
 800477a:	af00      	add	r7, sp, #0
 800477c:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8004780:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	691b      	ldr	r3, [r3, #16]
 8004788:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 800478c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004790:	68d9      	ldr	r1, [r3, #12]
 8004792:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004796:	681a      	ldr	r2, [r3, #0]
 8004798:	ea40 0301 	orr.w	r3, r0, r1
 800479c:	6113      	str	r3, [r2, #16]
 800479e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80047a2:	689a      	ldr	r2, [r3, #8]
 80047a4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80047a8:	691b      	ldr	r3, [r3, #16]
 80047aa:	431a      	orrs	r2, r3
 80047ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80047b0:	695b      	ldr	r3, [r3, #20]
 80047b2:	431a      	orrs	r2, r3
 80047b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80047b8:	69db      	ldr	r3, [r3, #28]
 80047ba:	4313      	orrs	r3, r2
 80047bc:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80047c0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	68db      	ldr	r3, [r3, #12]
 80047c8:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80047cc:	f021 010c 	bic.w	r1, r1, #12
 80047d0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80047d4:	681a      	ldr	r2, [r3, #0]
 80047d6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80047da:	430b      	orrs	r3, r1
 80047dc:	60d3      	str	r3, [r2, #12]
 80047de:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80047e2:	681b      	ldr	r3, [r3, #0]
 80047e4:	695b      	ldr	r3, [r3, #20]
 80047e6:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80047ea:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80047ee:	6999      	ldr	r1, [r3, #24]
 80047f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80047f4:	681a      	ldr	r2, [r3, #0]
 80047f6:	ea40 0301 	orr.w	r3, r0, r1
 80047fa:	6153      	str	r3, [r2, #20]
 80047fc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004800:	681a      	ldr	r2, [r3, #0]
 8004802:	4b8f      	ldr	r3, [pc, #572]	@ (8004a40 <UART_SetConfig+0x2cc>)
 8004804:	429a      	cmp	r2, r3
 8004806:	d005      	beq.n	8004814 <UART_SetConfig+0xa0>
 8004808:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800480c:	681a      	ldr	r2, [r3, #0]
 800480e:	4b8d      	ldr	r3, [pc, #564]	@ (8004a44 <UART_SetConfig+0x2d0>)
 8004810:	429a      	cmp	r2, r3
 8004812:	d104      	bne.n	800481e <UART_SetConfig+0xaa>
 8004814:	f7fe fd88 	bl	8003328 <HAL_RCC_GetPCLK2Freq>
 8004818:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800481c:	e003      	b.n	8004826 <UART_SetConfig+0xb2>
 800481e:	f7fe fd6f 	bl	8003300 <HAL_RCC_GetPCLK1Freq>
 8004822:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8004826:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800482a:	69db      	ldr	r3, [r3, #28]
 800482c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004830:	f040 810c 	bne.w	8004a4c <UART_SetConfig+0x2d8>
 8004834:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004838:	2200      	movs	r2, #0
 800483a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800483e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8004842:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8004846:	4622      	mov	r2, r4
 8004848:	462b      	mov	r3, r5
 800484a:	1891      	adds	r1, r2, r2
 800484c:	65b9      	str	r1, [r7, #88]	@ 0x58
 800484e:	415b      	adcs	r3, r3
 8004850:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004852:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8004856:	4621      	mov	r1, r4
 8004858:	eb12 0801 	adds.w	r8, r2, r1
 800485c:	4629      	mov	r1, r5
 800485e:	eb43 0901 	adc.w	r9, r3, r1
 8004862:	f04f 0200 	mov.w	r2, #0
 8004866:	f04f 0300 	mov.w	r3, #0
 800486a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800486e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004872:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004876:	4690      	mov	r8, r2
 8004878:	4699      	mov	r9, r3
 800487a:	4623      	mov	r3, r4
 800487c:	eb18 0303 	adds.w	r3, r8, r3
 8004880:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8004884:	462b      	mov	r3, r5
 8004886:	eb49 0303 	adc.w	r3, r9, r3
 800488a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800488e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004892:	685b      	ldr	r3, [r3, #4]
 8004894:	2200      	movs	r2, #0
 8004896:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800489a:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 800489e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80048a2:	460b      	mov	r3, r1
 80048a4:	18db      	adds	r3, r3, r3
 80048a6:	653b      	str	r3, [r7, #80]	@ 0x50
 80048a8:	4613      	mov	r3, r2
 80048aa:	eb42 0303 	adc.w	r3, r2, r3
 80048ae:	657b      	str	r3, [r7, #84]	@ 0x54
 80048b0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80048b4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80048b8:	f7fb fcea 	bl	8000290 <__aeabi_uldivmod>
 80048bc:	4602      	mov	r2, r0
 80048be:	460b      	mov	r3, r1
 80048c0:	4b61      	ldr	r3, [pc, #388]	@ (8004a48 <UART_SetConfig+0x2d4>)
 80048c2:	fba3 2302 	umull	r2, r3, r3, r2
 80048c6:	095b      	lsrs	r3, r3, #5
 80048c8:	011c      	lsls	r4, r3, #4
 80048ca:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80048ce:	2200      	movs	r2, #0
 80048d0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80048d4:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80048d8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80048dc:	4642      	mov	r2, r8
 80048de:	464b      	mov	r3, r9
 80048e0:	1891      	adds	r1, r2, r2
 80048e2:	64b9      	str	r1, [r7, #72]	@ 0x48
 80048e4:	415b      	adcs	r3, r3
 80048e6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80048e8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80048ec:	4641      	mov	r1, r8
 80048ee:	eb12 0a01 	adds.w	sl, r2, r1
 80048f2:	4649      	mov	r1, r9
 80048f4:	eb43 0b01 	adc.w	fp, r3, r1
 80048f8:	f04f 0200 	mov.w	r2, #0
 80048fc:	f04f 0300 	mov.w	r3, #0
 8004900:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004904:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8004908:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800490c:	4692      	mov	sl, r2
 800490e:	469b      	mov	fp, r3
 8004910:	4643      	mov	r3, r8
 8004912:	eb1a 0303 	adds.w	r3, sl, r3
 8004916:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800491a:	464b      	mov	r3, r9
 800491c:	eb4b 0303 	adc.w	r3, fp, r3
 8004920:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8004924:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004928:	685b      	ldr	r3, [r3, #4]
 800492a:	2200      	movs	r2, #0
 800492c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004930:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8004934:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8004938:	460b      	mov	r3, r1
 800493a:	18db      	adds	r3, r3, r3
 800493c:	643b      	str	r3, [r7, #64]	@ 0x40
 800493e:	4613      	mov	r3, r2
 8004940:	eb42 0303 	adc.w	r3, r2, r3
 8004944:	647b      	str	r3, [r7, #68]	@ 0x44
 8004946:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800494a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800494e:	f7fb fc9f 	bl	8000290 <__aeabi_uldivmod>
 8004952:	4602      	mov	r2, r0
 8004954:	460b      	mov	r3, r1
 8004956:	4611      	mov	r1, r2
 8004958:	4b3b      	ldr	r3, [pc, #236]	@ (8004a48 <UART_SetConfig+0x2d4>)
 800495a:	fba3 2301 	umull	r2, r3, r3, r1
 800495e:	095b      	lsrs	r3, r3, #5
 8004960:	2264      	movs	r2, #100	@ 0x64
 8004962:	fb02 f303 	mul.w	r3, r2, r3
 8004966:	1acb      	subs	r3, r1, r3
 8004968:	00db      	lsls	r3, r3, #3
 800496a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 800496e:	4b36      	ldr	r3, [pc, #216]	@ (8004a48 <UART_SetConfig+0x2d4>)
 8004970:	fba3 2302 	umull	r2, r3, r3, r2
 8004974:	095b      	lsrs	r3, r3, #5
 8004976:	005b      	lsls	r3, r3, #1
 8004978:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 800497c:	441c      	add	r4, r3
 800497e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004982:	2200      	movs	r2, #0
 8004984:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004988:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 800498c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8004990:	4642      	mov	r2, r8
 8004992:	464b      	mov	r3, r9
 8004994:	1891      	adds	r1, r2, r2
 8004996:	63b9      	str	r1, [r7, #56]	@ 0x38
 8004998:	415b      	adcs	r3, r3
 800499a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800499c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 80049a0:	4641      	mov	r1, r8
 80049a2:	1851      	adds	r1, r2, r1
 80049a4:	6339      	str	r1, [r7, #48]	@ 0x30
 80049a6:	4649      	mov	r1, r9
 80049a8:	414b      	adcs	r3, r1
 80049aa:	637b      	str	r3, [r7, #52]	@ 0x34
 80049ac:	f04f 0200 	mov.w	r2, #0
 80049b0:	f04f 0300 	mov.w	r3, #0
 80049b4:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80049b8:	4659      	mov	r1, fp
 80049ba:	00cb      	lsls	r3, r1, #3
 80049bc:	4651      	mov	r1, sl
 80049be:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80049c2:	4651      	mov	r1, sl
 80049c4:	00ca      	lsls	r2, r1, #3
 80049c6:	4610      	mov	r0, r2
 80049c8:	4619      	mov	r1, r3
 80049ca:	4603      	mov	r3, r0
 80049cc:	4642      	mov	r2, r8
 80049ce:	189b      	adds	r3, r3, r2
 80049d0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80049d4:	464b      	mov	r3, r9
 80049d6:	460a      	mov	r2, r1
 80049d8:	eb42 0303 	adc.w	r3, r2, r3
 80049dc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80049e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80049e4:	685b      	ldr	r3, [r3, #4]
 80049e6:	2200      	movs	r2, #0
 80049e8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80049ec:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80049f0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80049f4:	460b      	mov	r3, r1
 80049f6:	18db      	adds	r3, r3, r3
 80049f8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80049fa:	4613      	mov	r3, r2
 80049fc:	eb42 0303 	adc.w	r3, r2, r3
 8004a00:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004a02:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8004a06:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8004a0a:	f7fb fc41 	bl	8000290 <__aeabi_uldivmod>
 8004a0e:	4602      	mov	r2, r0
 8004a10:	460b      	mov	r3, r1
 8004a12:	4b0d      	ldr	r3, [pc, #52]	@ (8004a48 <UART_SetConfig+0x2d4>)
 8004a14:	fba3 1302 	umull	r1, r3, r3, r2
 8004a18:	095b      	lsrs	r3, r3, #5
 8004a1a:	2164      	movs	r1, #100	@ 0x64
 8004a1c:	fb01 f303 	mul.w	r3, r1, r3
 8004a20:	1ad3      	subs	r3, r2, r3
 8004a22:	00db      	lsls	r3, r3, #3
 8004a24:	3332      	adds	r3, #50	@ 0x32
 8004a26:	4a08      	ldr	r2, [pc, #32]	@ (8004a48 <UART_SetConfig+0x2d4>)
 8004a28:	fba2 2303 	umull	r2, r3, r2, r3
 8004a2c:	095b      	lsrs	r3, r3, #5
 8004a2e:	f003 0207 	and.w	r2, r3, #7
 8004a32:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004a36:	681b      	ldr	r3, [r3, #0]
 8004a38:	4422      	add	r2, r4
 8004a3a:	609a      	str	r2, [r3, #8]
 8004a3c:	e106      	b.n	8004c4c <UART_SetConfig+0x4d8>
 8004a3e:	bf00      	nop
 8004a40:	40011000 	.word	0x40011000
 8004a44:	40011400 	.word	0x40011400
 8004a48:	51eb851f 	.word	0x51eb851f
 8004a4c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004a50:	2200      	movs	r2, #0
 8004a52:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8004a56:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8004a5a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8004a5e:	4642      	mov	r2, r8
 8004a60:	464b      	mov	r3, r9
 8004a62:	1891      	adds	r1, r2, r2
 8004a64:	6239      	str	r1, [r7, #32]
 8004a66:	415b      	adcs	r3, r3
 8004a68:	627b      	str	r3, [r7, #36]	@ 0x24
 8004a6a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004a6e:	4641      	mov	r1, r8
 8004a70:	1854      	adds	r4, r2, r1
 8004a72:	4649      	mov	r1, r9
 8004a74:	eb43 0501 	adc.w	r5, r3, r1
 8004a78:	f04f 0200 	mov.w	r2, #0
 8004a7c:	f04f 0300 	mov.w	r3, #0
 8004a80:	00eb      	lsls	r3, r5, #3
 8004a82:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004a86:	00e2      	lsls	r2, r4, #3
 8004a88:	4614      	mov	r4, r2
 8004a8a:	461d      	mov	r5, r3
 8004a8c:	4643      	mov	r3, r8
 8004a8e:	18e3      	adds	r3, r4, r3
 8004a90:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8004a94:	464b      	mov	r3, r9
 8004a96:	eb45 0303 	adc.w	r3, r5, r3
 8004a9a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8004a9e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004aa2:	685b      	ldr	r3, [r3, #4]
 8004aa4:	2200      	movs	r2, #0
 8004aa6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004aaa:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8004aae:	f04f 0200 	mov.w	r2, #0
 8004ab2:	f04f 0300 	mov.w	r3, #0
 8004ab6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8004aba:	4629      	mov	r1, r5
 8004abc:	008b      	lsls	r3, r1, #2
 8004abe:	4621      	mov	r1, r4
 8004ac0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004ac4:	4621      	mov	r1, r4
 8004ac6:	008a      	lsls	r2, r1, #2
 8004ac8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8004acc:	f7fb fbe0 	bl	8000290 <__aeabi_uldivmod>
 8004ad0:	4602      	mov	r2, r0
 8004ad2:	460b      	mov	r3, r1
 8004ad4:	4b60      	ldr	r3, [pc, #384]	@ (8004c58 <UART_SetConfig+0x4e4>)
 8004ad6:	fba3 2302 	umull	r2, r3, r3, r2
 8004ada:	095b      	lsrs	r3, r3, #5
 8004adc:	011c      	lsls	r4, r3, #4
 8004ade:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004ae2:	2200      	movs	r2, #0
 8004ae4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004ae8:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8004aec:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8004af0:	4642      	mov	r2, r8
 8004af2:	464b      	mov	r3, r9
 8004af4:	1891      	adds	r1, r2, r2
 8004af6:	61b9      	str	r1, [r7, #24]
 8004af8:	415b      	adcs	r3, r3
 8004afa:	61fb      	str	r3, [r7, #28]
 8004afc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004b00:	4641      	mov	r1, r8
 8004b02:	1851      	adds	r1, r2, r1
 8004b04:	6139      	str	r1, [r7, #16]
 8004b06:	4649      	mov	r1, r9
 8004b08:	414b      	adcs	r3, r1
 8004b0a:	617b      	str	r3, [r7, #20]
 8004b0c:	f04f 0200 	mov.w	r2, #0
 8004b10:	f04f 0300 	mov.w	r3, #0
 8004b14:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004b18:	4659      	mov	r1, fp
 8004b1a:	00cb      	lsls	r3, r1, #3
 8004b1c:	4651      	mov	r1, sl
 8004b1e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004b22:	4651      	mov	r1, sl
 8004b24:	00ca      	lsls	r2, r1, #3
 8004b26:	4610      	mov	r0, r2
 8004b28:	4619      	mov	r1, r3
 8004b2a:	4603      	mov	r3, r0
 8004b2c:	4642      	mov	r2, r8
 8004b2e:	189b      	adds	r3, r3, r2
 8004b30:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004b34:	464b      	mov	r3, r9
 8004b36:	460a      	mov	r2, r1
 8004b38:	eb42 0303 	adc.w	r3, r2, r3
 8004b3c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004b40:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004b44:	685b      	ldr	r3, [r3, #4]
 8004b46:	2200      	movs	r2, #0
 8004b48:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004b4a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8004b4c:	f04f 0200 	mov.w	r2, #0
 8004b50:	f04f 0300 	mov.w	r3, #0
 8004b54:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8004b58:	4649      	mov	r1, r9
 8004b5a:	008b      	lsls	r3, r1, #2
 8004b5c:	4641      	mov	r1, r8
 8004b5e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004b62:	4641      	mov	r1, r8
 8004b64:	008a      	lsls	r2, r1, #2
 8004b66:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8004b6a:	f7fb fb91 	bl	8000290 <__aeabi_uldivmod>
 8004b6e:	4602      	mov	r2, r0
 8004b70:	460b      	mov	r3, r1
 8004b72:	4611      	mov	r1, r2
 8004b74:	4b38      	ldr	r3, [pc, #224]	@ (8004c58 <UART_SetConfig+0x4e4>)
 8004b76:	fba3 2301 	umull	r2, r3, r3, r1
 8004b7a:	095b      	lsrs	r3, r3, #5
 8004b7c:	2264      	movs	r2, #100	@ 0x64
 8004b7e:	fb02 f303 	mul.w	r3, r2, r3
 8004b82:	1acb      	subs	r3, r1, r3
 8004b84:	011b      	lsls	r3, r3, #4
 8004b86:	3332      	adds	r3, #50	@ 0x32
 8004b88:	4a33      	ldr	r2, [pc, #204]	@ (8004c58 <UART_SetConfig+0x4e4>)
 8004b8a:	fba2 2303 	umull	r2, r3, r2, r3
 8004b8e:	095b      	lsrs	r3, r3, #5
 8004b90:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8004b94:	441c      	add	r4, r3
 8004b96:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004b9a:	2200      	movs	r2, #0
 8004b9c:	673b      	str	r3, [r7, #112]	@ 0x70
 8004b9e:	677a      	str	r2, [r7, #116]	@ 0x74
 8004ba0:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8004ba4:	4642      	mov	r2, r8
 8004ba6:	464b      	mov	r3, r9
 8004ba8:	1891      	adds	r1, r2, r2
 8004baa:	60b9      	str	r1, [r7, #8]
 8004bac:	415b      	adcs	r3, r3
 8004bae:	60fb      	str	r3, [r7, #12]
 8004bb0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004bb4:	4641      	mov	r1, r8
 8004bb6:	1851      	adds	r1, r2, r1
 8004bb8:	6039      	str	r1, [r7, #0]
 8004bba:	4649      	mov	r1, r9
 8004bbc:	414b      	adcs	r3, r1
 8004bbe:	607b      	str	r3, [r7, #4]
 8004bc0:	f04f 0200 	mov.w	r2, #0
 8004bc4:	f04f 0300 	mov.w	r3, #0
 8004bc8:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8004bcc:	4659      	mov	r1, fp
 8004bce:	00cb      	lsls	r3, r1, #3
 8004bd0:	4651      	mov	r1, sl
 8004bd2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004bd6:	4651      	mov	r1, sl
 8004bd8:	00ca      	lsls	r2, r1, #3
 8004bda:	4610      	mov	r0, r2
 8004bdc:	4619      	mov	r1, r3
 8004bde:	4603      	mov	r3, r0
 8004be0:	4642      	mov	r2, r8
 8004be2:	189b      	adds	r3, r3, r2
 8004be4:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004be6:	464b      	mov	r3, r9
 8004be8:	460a      	mov	r2, r1
 8004bea:	eb42 0303 	adc.w	r3, r2, r3
 8004bee:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004bf0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004bf4:	685b      	ldr	r3, [r3, #4]
 8004bf6:	2200      	movs	r2, #0
 8004bf8:	663b      	str	r3, [r7, #96]	@ 0x60
 8004bfa:	667a      	str	r2, [r7, #100]	@ 0x64
 8004bfc:	f04f 0200 	mov.w	r2, #0
 8004c00:	f04f 0300 	mov.w	r3, #0
 8004c04:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8004c08:	4649      	mov	r1, r9
 8004c0a:	008b      	lsls	r3, r1, #2
 8004c0c:	4641      	mov	r1, r8
 8004c0e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004c12:	4641      	mov	r1, r8
 8004c14:	008a      	lsls	r2, r1, #2
 8004c16:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8004c1a:	f7fb fb39 	bl	8000290 <__aeabi_uldivmod>
 8004c1e:	4602      	mov	r2, r0
 8004c20:	460b      	mov	r3, r1
 8004c22:	4b0d      	ldr	r3, [pc, #52]	@ (8004c58 <UART_SetConfig+0x4e4>)
 8004c24:	fba3 1302 	umull	r1, r3, r3, r2
 8004c28:	095b      	lsrs	r3, r3, #5
 8004c2a:	2164      	movs	r1, #100	@ 0x64
 8004c2c:	fb01 f303 	mul.w	r3, r1, r3
 8004c30:	1ad3      	subs	r3, r2, r3
 8004c32:	011b      	lsls	r3, r3, #4
 8004c34:	3332      	adds	r3, #50	@ 0x32
 8004c36:	4a08      	ldr	r2, [pc, #32]	@ (8004c58 <UART_SetConfig+0x4e4>)
 8004c38:	fba2 2303 	umull	r2, r3, r2, r3
 8004c3c:	095b      	lsrs	r3, r3, #5
 8004c3e:	f003 020f 	and.w	r2, r3, #15
 8004c42:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	4422      	add	r2, r4
 8004c4a:	609a      	str	r2, [r3, #8]
 8004c4c:	bf00      	nop
 8004c4e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8004c52:	46bd      	mov	sp, r7
 8004c54:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004c58:	51eb851f 	.word	0x51eb851f

08004c5c <std>:
 8004c5c:	2300      	movs	r3, #0
 8004c5e:	b510      	push	{r4, lr}
 8004c60:	4604      	mov	r4, r0
 8004c62:	e9c0 3300 	strd	r3, r3, [r0]
 8004c66:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004c6a:	6083      	str	r3, [r0, #8]
 8004c6c:	8181      	strh	r1, [r0, #12]
 8004c6e:	6643      	str	r3, [r0, #100]	@ 0x64
 8004c70:	81c2      	strh	r2, [r0, #14]
 8004c72:	6183      	str	r3, [r0, #24]
 8004c74:	4619      	mov	r1, r3
 8004c76:	2208      	movs	r2, #8
 8004c78:	305c      	adds	r0, #92	@ 0x5c
 8004c7a:	f000 fa4d 	bl	8005118 <memset>
 8004c7e:	4b0d      	ldr	r3, [pc, #52]	@ (8004cb4 <std+0x58>)
 8004c80:	6263      	str	r3, [r4, #36]	@ 0x24
 8004c82:	4b0d      	ldr	r3, [pc, #52]	@ (8004cb8 <std+0x5c>)
 8004c84:	62a3      	str	r3, [r4, #40]	@ 0x28
 8004c86:	4b0d      	ldr	r3, [pc, #52]	@ (8004cbc <std+0x60>)
 8004c88:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8004c8a:	4b0d      	ldr	r3, [pc, #52]	@ (8004cc0 <std+0x64>)
 8004c8c:	6323      	str	r3, [r4, #48]	@ 0x30
 8004c8e:	4b0d      	ldr	r3, [pc, #52]	@ (8004cc4 <std+0x68>)
 8004c90:	6224      	str	r4, [r4, #32]
 8004c92:	429c      	cmp	r4, r3
 8004c94:	d006      	beq.n	8004ca4 <std+0x48>
 8004c96:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8004c9a:	4294      	cmp	r4, r2
 8004c9c:	d002      	beq.n	8004ca4 <std+0x48>
 8004c9e:	33d0      	adds	r3, #208	@ 0xd0
 8004ca0:	429c      	cmp	r4, r3
 8004ca2:	d105      	bne.n	8004cb0 <std+0x54>
 8004ca4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8004ca8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004cac:	f000 bae0 	b.w	8005270 <__retarget_lock_init_recursive>
 8004cb0:	bd10      	pop	{r4, pc}
 8004cb2:	bf00      	nop
 8004cb4:	08004f69 	.word	0x08004f69
 8004cb8:	08004f8b 	.word	0x08004f8b
 8004cbc:	08004fc3 	.word	0x08004fc3
 8004cc0:	08004fe7 	.word	0x08004fe7
 8004cc4:	200007ac 	.word	0x200007ac

08004cc8 <stdio_exit_handler>:
 8004cc8:	4a02      	ldr	r2, [pc, #8]	@ (8004cd4 <stdio_exit_handler+0xc>)
 8004cca:	4903      	ldr	r1, [pc, #12]	@ (8004cd8 <stdio_exit_handler+0x10>)
 8004ccc:	4803      	ldr	r0, [pc, #12]	@ (8004cdc <stdio_exit_handler+0x14>)
 8004cce:	f000 b869 	b.w	8004da4 <_fwalk_sglue>
 8004cd2:	bf00      	nop
 8004cd4:	2000000c 	.word	0x2000000c
 8004cd8:	08005ded 	.word	0x08005ded
 8004cdc:	2000001c 	.word	0x2000001c

08004ce0 <cleanup_stdio>:
 8004ce0:	6841      	ldr	r1, [r0, #4]
 8004ce2:	4b0c      	ldr	r3, [pc, #48]	@ (8004d14 <cleanup_stdio+0x34>)
 8004ce4:	4299      	cmp	r1, r3
 8004ce6:	b510      	push	{r4, lr}
 8004ce8:	4604      	mov	r4, r0
 8004cea:	d001      	beq.n	8004cf0 <cleanup_stdio+0x10>
 8004cec:	f001 f87e 	bl	8005dec <_fflush_r>
 8004cf0:	68a1      	ldr	r1, [r4, #8]
 8004cf2:	4b09      	ldr	r3, [pc, #36]	@ (8004d18 <cleanup_stdio+0x38>)
 8004cf4:	4299      	cmp	r1, r3
 8004cf6:	d002      	beq.n	8004cfe <cleanup_stdio+0x1e>
 8004cf8:	4620      	mov	r0, r4
 8004cfa:	f001 f877 	bl	8005dec <_fflush_r>
 8004cfe:	68e1      	ldr	r1, [r4, #12]
 8004d00:	4b06      	ldr	r3, [pc, #24]	@ (8004d1c <cleanup_stdio+0x3c>)
 8004d02:	4299      	cmp	r1, r3
 8004d04:	d004      	beq.n	8004d10 <cleanup_stdio+0x30>
 8004d06:	4620      	mov	r0, r4
 8004d08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004d0c:	f001 b86e 	b.w	8005dec <_fflush_r>
 8004d10:	bd10      	pop	{r4, pc}
 8004d12:	bf00      	nop
 8004d14:	200007ac 	.word	0x200007ac
 8004d18:	20000814 	.word	0x20000814
 8004d1c:	2000087c 	.word	0x2000087c

08004d20 <global_stdio_init.part.0>:
 8004d20:	b510      	push	{r4, lr}
 8004d22:	4b0b      	ldr	r3, [pc, #44]	@ (8004d50 <global_stdio_init.part.0+0x30>)
 8004d24:	4c0b      	ldr	r4, [pc, #44]	@ (8004d54 <global_stdio_init.part.0+0x34>)
 8004d26:	4a0c      	ldr	r2, [pc, #48]	@ (8004d58 <global_stdio_init.part.0+0x38>)
 8004d28:	601a      	str	r2, [r3, #0]
 8004d2a:	4620      	mov	r0, r4
 8004d2c:	2200      	movs	r2, #0
 8004d2e:	2104      	movs	r1, #4
 8004d30:	f7ff ff94 	bl	8004c5c <std>
 8004d34:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8004d38:	2201      	movs	r2, #1
 8004d3a:	2109      	movs	r1, #9
 8004d3c:	f7ff ff8e 	bl	8004c5c <std>
 8004d40:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8004d44:	2202      	movs	r2, #2
 8004d46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004d4a:	2112      	movs	r1, #18
 8004d4c:	f7ff bf86 	b.w	8004c5c <std>
 8004d50:	200008e4 	.word	0x200008e4
 8004d54:	200007ac 	.word	0x200007ac
 8004d58:	08004cc9 	.word	0x08004cc9

08004d5c <__sfp_lock_acquire>:
 8004d5c:	4801      	ldr	r0, [pc, #4]	@ (8004d64 <__sfp_lock_acquire+0x8>)
 8004d5e:	f000 ba88 	b.w	8005272 <__retarget_lock_acquire_recursive>
 8004d62:	bf00      	nop
 8004d64:	200008ed 	.word	0x200008ed

08004d68 <__sfp_lock_release>:
 8004d68:	4801      	ldr	r0, [pc, #4]	@ (8004d70 <__sfp_lock_release+0x8>)
 8004d6a:	f000 ba83 	b.w	8005274 <__retarget_lock_release_recursive>
 8004d6e:	bf00      	nop
 8004d70:	200008ed 	.word	0x200008ed

08004d74 <__sinit>:
 8004d74:	b510      	push	{r4, lr}
 8004d76:	4604      	mov	r4, r0
 8004d78:	f7ff fff0 	bl	8004d5c <__sfp_lock_acquire>
 8004d7c:	6a23      	ldr	r3, [r4, #32]
 8004d7e:	b11b      	cbz	r3, 8004d88 <__sinit+0x14>
 8004d80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004d84:	f7ff bff0 	b.w	8004d68 <__sfp_lock_release>
 8004d88:	4b04      	ldr	r3, [pc, #16]	@ (8004d9c <__sinit+0x28>)
 8004d8a:	6223      	str	r3, [r4, #32]
 8004d8c:	4b04      	ldr	r3, [pc, #16]	@ (8004da0 <__sinit+0x2c>)
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	2b00      	cmp	r3, #0
 8004d92:	d1f5      	bne.n	8004d80 <__sinit+0xc>
 8004d94:	f7ff ffc4 	bl	8004d20 <global_stdio_init.part.0>
 8004d98:	e7f2      	b.n	8004d80 <__sinit+0xc>
 8004d9a:	bf00      	nop
 8004d9c:	08004ce1 	.word	0x08004ce1
 8004da0:	200008e4 	.word	0x200008e4

08004da4 <_fwalk_sglue>:
 8004da4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004da8:	4607      	mov	r7, r0
 8004daa:	4688      	mov	r8, r1
 8004dac:	4614      	mov	r4, r2
 8004dae:	2600      	movs	r6, #0
 8004db0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004db4:	f1b9 0901 	subs.w	r9, r9, #1
 8004db8:	d505      	bpl.n	8004dc6 <_fwalk_sglue+0x22>
 8004dba:	6824      	ldr	r4, [r4, #0]
 8004dbc:	2c00      	cmp	r4, #0
 8004dbe:	d1f7      	bne.n	8004db0 <_fwalk_sglue+0xc>
 8004dc0:	4630      	mov	r0, r6
 8004dc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004dc6:	89ab      	ldrh	r3, [r5, #12]
 8004dc8:	2b01      	cmp	r3, #1
 8004dca:	d907      	bls.n	8004ddc <_fwalk_sglue+0x38>
 8004dcc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004dd0:	3301      	adds	r3, #1
 8004dd2:	d003      	beq.n	8004ddc <_fwalk_sglue+0x38>
 8004dd4:	4629      	mov	r1, r5
 8004dd6:	4638      	mov	r0, r7
 8004dd8:	47c0      	blx	r8
 8004dda:	4306      	orrs	r6, r0
 8004ddc:	3568      	adds	r5, #104	@ 0x68
 8004dde:	e7e9      	b.n	8004db4 <_fwalk_sglue+0x10>

08004de0 <iprintf>:
 8004de0:	b40f      	push	{r0, r1, r2, r3}
 8004de2:	b507      	push	{r0, r1, r2, lr}
 8004de4:	4906      	ldr	r1, [pc, #24]	@ (8004e00 <iprintf+0x20>)
 8004de6:	ab04      	add	r3, sp, #16
 8004de8:	6808      	ldr	r0, [r1, #0]
 8004dea:	f853 2b04 	ldr.w	r2, [r3], #4
 8004dee:	6881      	ldr	r1, [r0, #8]
 8004df0:	9301      	str	r3, [sp, #4]
 8004df2:	f000 fcd1 	bl	8005798 <_vfiprintf_r>
 8004df6:	b003      	add	sp, #12
 8004df8:	f85d eb04 	ldr.w	lr, [sp], #4
 8004dfc:	b004      	add	sp, #16
 8004dfe:	4770      	bx	lr
 8004e00:	20000018 	.word	0x20000018

08004e04 <_puts_r>:
 8004e04:	6a03      	ldr	r3, [r0, #32]
 8004e06:	b570      	push	{r4, r5, r6, lr}
 8004e08:	6884      	ldr	r4, [r0, #8]
 8004e0a:	4605      	mov	r5, r0
 8004e0c:	460e      	mov	r6, r1
 8004e0e:	b90b      	cbnz	r3, 8004e14 <_puts_r+0x10>
 8004e10:	f7ff ffb0 	bl	8004d74 <__sinit>
 8004e14:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004e16:	07db      	lsls	r3, r3, #31
 8004e18:	d405      	bmi.n	8004e26 <_puts_r+0x22>
 8004e1a:	89a3      	ldrh	r3, [r4, #12]
 8004e1c:	0598      	lsls	r0, r3, #22
 8004e1e:	d402      	bmi.n	8004e26 <_puts_r+0x22>
 8004e20:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004e22:	f000 fa26 	bl	8005272 <__retarget_lock_acquire_recursive>
 8004e26:	89a3      	ldrh	r3, [r4, #12]
 8004e28:	0719      	lsls	r1, r3, #28
 8004e2a:	d502      	bpl.n	8004e32 <_puts_r+0x2e>
 8004e2c:	6923      	ldr	r3, [r4, #16]
 8004e2e:	2b00      	cmp	r3, #0
 8004e30:	d135      	bne.n	8004e9e <_puts_r+0x9a>
 8004e32:	4621      	mov	r1, r4
 8004e34:	4628      	mov	r0, r5
 8004e36:	f000 f919 	bl	800506c <__swsetup_r>
 8004e3a:	b380      	cbz	r0, 8004e9e <_puts_r+0x9a>
 8004e3c:	f04f 35ff 	mov.w	r5, #4294967295
 8004e40:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004e42:	07da      	lsls	r2, r3, #31
 8004e44:	d405      	bmi.n	8004e52 <_puts_r+0x4e>
 8004e46:	89a3      	ldrh	r3, [r4, #12]
 8004e48:	059b      	lsls	r3, r3, #22
 8004e4a:	d402      	bmi.n	8004e52 <_puts_r+0x4e>
 8004e4c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004e4e:	f000 fa11 	bl	8005274 <__retarget_lock_release_recursive>
 8004e52:	4628      	mov	r0, r5
 8004e54:	bd70      	pop	{r4, r5, r6, pc}
 8004e56:	2b00      	cmp	r3, #0
 8004e58:	da04      	bge.n	8004e64 <_puts_r+0x60>
 8004e5a:	69a2      	ldr	r2, [r4, #24]
 8004e5c:	429a      	cmp	r2, r3
 8004e5e:	dc17      	bgt.n	8004e90 <_puts_r+0x8c>
 8004e60:	290a      	cmp	r1, #10
 8004e62:	d015      	beq.n	8004e90 <_puts_r+0x8c>
 8004e64:	6823      	ldr	r3, [r4, #0]
 8004e66:	1c5a      	adds	r2, r3, #1
 8004e68:	6022      	str	r2, [r4, #0]
 8004e6a:	7019      	strb	r1, [r3, #0]
 8004e6c:	68a3      	ldr	r3, [r4, #8]
 8004e6e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8004e72:	3b01      	subs	r3, #1
 8004e74:	60a3      	str	r3, [r4, #8]
 8004e76:	2900      	cmp	r1, #0
 8004e78:	d1ed      	bne.n	8004e56 <_puts_r+0x52>
 8004e7a:	2b00      	cmp	r3, #0
 8004e7c:	da11      	bge.n	8004ea2 <_puts_r+0x9e>
 8004e7e:	4622      	mov	r2, r4
 8004e80:	210a      	movs	r1, #10
 8004e82:	4628      	mov	r0, r5
 8004e84:	f000 f8b3 	bl	8004fee <__swbuf_r>
 8004e88:	3001      	adds	r0, #1
 8004e8a:	d0d7      	beq.n	8004e3c <_puts_r+0x38>
 8004e8c:	250a      	movs	r5, #10
 8004e8e:	e7d7      	b.n	8004e40 <_puts_r+0x3c>
 8004e90:	4622      	mov	r2, r4
 8004e92:	4628      	mov	r0, r5
 8004e94:	f000 f8ab 	bl	8004fee <__swbuf_r>
 8004e98:	3001      	adds	r0, #1
 8004e9a:	d1e7      	bne.n	8004e6c <_puts_r+0x68>
 8004e9c:	e7ce      	b.n	8004e3c <_puts_r+0x38>
 8004e9e:	3e01      	subs	r6, #1
 8004ea0:	e7e4      	b.n	8004e6c <_puts_r+0x68>
 8004ea2:	6823      	ldr	r3, [r4, #0]
 8004ea4:	1c5a      	adds	r2, r3, #1
 8004ea6:	6022      	str	r2, [r4, #0]
 8004ea8:	220a      	movs	r2, #10
 8004eaa:	701a      	strb	r2, [r3, #0]
 8004eac:	e7ee      	b.n	8004e8c <_puts_r+0x88>
	...

08004eb0 <puts>:
 8004eb0:	4b02      	ldr	r3, [pc, #8]	@ (8004ebc <puts+0xc>)
 8004eb2:	4601      	mov	r1, r0
 8004eb4:	6818      	ldr	r0, [r3, #0]
 8004eb6:	f7ff bfa5 	b.w	8004e04 <_puts_r>
 8004eba:	bf00      	nop
 8004ebc:	20000018 	.word	0x20000018

08004ec0 <sniprintf>:
 8004ec0:	b40c      	push	{r2, r3}
 8004ec2:	b530      	push	{r4, r5, lr}
 8004ec4:	4b17      	ldr	r3, [pc, #92]	@ (8004f24 <sniprintf+0x64>)
 8004ec6:	1e0c      	subs	r4, r1, #0
 8004ec8:	681d      	ldr	r5, [r3, #0]
 8004eca:	b09d      	sub	sp, #116	@ 0x74
 8004ecc:	da08      	bge.n	8004ee0 <sniprintf+0x20>
 8004ece:	238b      	movs	r3, #139	@ 0x8b
 8004ed0:	602b      	str	r3, [r5, #0]
 8004ed2:	f04f 30ff 	mov.w	r0, #4294967295
 8004ed6:	b01d      	add	sp, #116	@ 0x74
 8004ed8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004edc:	b002      	add	sp, #8
 8004ede:	4770      	bx	lr
 8004ee0:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8004ee4:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004ee8:	bf14      	ite	ne
 8004eea:	f104 33ff 	addne.w	r3, r4, #4294967295
 8004eee:	4623      	moveq	r3, r4
 8004ef0:	9304      	str	r3, [sp, #16]
 8004ef2:	9307      	str	r3, [sp, #28]
 8004ef4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8004ef8:	9002      	str	r0, [sp, #8]
 8004efa:	9006      	str	r0, [sp, #24]
 8004efc:	f8ad 3016 	strh.w	r3, [sp, #22]
 8004f00:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8004f02:	ab21      	add	r3, sp, #132	@ 0x84
 8004f04:	a902      	add	r1, sp, #8
 8004f06:	4628      	mov	r0, r5
 8004f08:	9301      	str	r3, [sp, #4]
 8004f0a:	f000 fb1f 	bl	800554c <_svfiprintf_r>
 8004f0e:	1c43      	adds	r3, r0, #1
 8004f10:	bfbc      	itt	lt
 8004f12:	238b      	movlt	r3, #139	@ 0x8b
 8004f14:	602b      	strlt	r3, [r5, #0]
 8004f16:	2c00      	cmp	r4, #0
 8004f18:	d0dd      	beq.n	8004ed6 <sniprintf+0x16>
 8004f1a:	9b02      	ldr	r3, [sp, #8]
 8004f1c:	2200      	movs	r2, #0
 8004f1e:	701a      	strb	r2, [r3, #0]
 8004f20:	e7d9      	b.n	8004ed6 <sniprintf+0x16>
 8004f22:	bf00      	nop
 8004f24:	20000018 	.word	0x20000018

08004f28 <siprintf>:
 8004f28:	b40e      	push	{r1, r2, r3}
 8004f2a:	b500      	push	{lr}
 8004f2c:	b09c      	sub	sp, #112	@ 0x70
 8004f2e:	ab1d      	add	r3, sp, #116	@ 0x74
 8004f30:	9002      	str	r0, [sp, #8]
 8004f32:	9006      	str	r0, [sp, #24]
 8004f34:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8004f38:	4809      	ldr	r0, [pc, #36]	@ (8004f60 <siprintf+0x38>)
 8004f3a:	9107      	str	r1, [sp, #28]
 8004f3c:	9104      	str	r1, [sp, #16]
 8004f3e:	4909      	ldr	r1, [pc, #36]	@ (8004f64 <siprintf+0x3c>)
 8004f40:	f853 2b04 	ldr.w	r2, [r3], #4
 8004f44:	9105      	str	r1, [sp, #20]
 8004f46:	6800      	ldr	r0, [r0, #0]
 8004f48:	9301      	str	r3, [sp, #4]
 8004f4a:	a902      	add	r1, sp, #8
 8004f4c:	f000 fafe 	bl	800554c <_svfiprintf_r>
 8004f50:	9b02      	ldr	r3, [sp, #8]
 8004f52:	2200      	movs	r2, #0
 8004f54:	701a      	strb	r2, [r3, #0]
 8004f56:	b01c      	add	sp, #112	@ 0x70
 8004f58:	f85d eb04 	ldr.w	lr, [sp], #4
 8004f5c:	b003      	add	sp, #12
 8004f5e:	4770      	bx	lr
 8004f60:	20000018 	.word	0x20000018
 8004f64:	ffff0208 	.word	0xffff0208

08004f68 <__sread>:
 8004f68:	b510      	push	{r4, lr}
 8004f6a:	460c      	mov	r4, r1
 8004f6c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004f70:	f000 f930 	bl	80051d4 <_read_r>
 8004f74:	2800      	cmp	r0, #0
 8004f76:	bfab      	itete	ge
 8004f78:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8004f7a:	89a3      	ldrhlt	r3, [r4, #12]
 8004f7c:	181b      	addge	r3, r3, r0
 8004f7e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8004f82:	bfac      	ite	ge
 8004f84:	6563      	strge	r3, [r4, #84]	@ 0x54
 8004f86:	81a3      	strhlt	r3, [r4, #12]
 8004f88:	bd10      	pop	{r4, pc}

08004f8a <__swrite>:
 8004f8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004f8e:	461f      	mov	r7, r3
 8004f90:	898b      	ldrh	r3, [r1, #12]
 8004f92:	05db      	lsls	r3, r3, #23
 8004f94:	4605      	mov	r5, r0
 8004f96:	460c      	mov	r4, r1
 8004f98:	4616      	mov	r6, r2
 8004f9a:	d505      	bpl.n	8004fa8 <__swrite+0x1e>
 8004f9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004fa0:	2302      	movs	r3, #2
 8004fa2:	2200      	movs	r2, #0
 8004fa4:	f000 f904 	bl	80051b0 <_lseek_r>
 8004fa8:	89a3      	ldrh	r3, [r4, #12]
 8004faa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004fae:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004fb2:	81a3      	strh	r3, [r4, #12]
 8004fb4:	4632      	mov	r2, r6
 8004fb6:	463b      	mov	r3, r7
 8004fb8:	4628      	mov	r0, r5
 8004fba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004fbe:	f000 b91b 	b.w	80051f8 <_write_r>

08004fc2 <__sseek>:
 8004fc2:	b510      	push	{r4, lr}
 8004fc4:	460c      	mov	r4, r1
 8004fc6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004fca:	f000 f8f1 	bl	80051b0 <_lseek_r>
 8004fce:	1c43      	adds	r3, r0, #1
 8004fd0:	89a3      	ldrh	r3, [r4, #12]
 8004fd2:	bf15      	itete	ne
 8004fd4:	6560      	strne	r0, [r4, #84]	@ 0x54
 8004fd6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8004fda:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8004fde:	81a3      	strheq	r3, [r4, #12]
 8004fe0:	bf18      	it	ne
 8004fe2:	81a3      	strhne	r3, [r4, #12]
 8004fe4:	bd10      	pop	{r4, pc}

08004fe6 <__sclose>:
 8004fe6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004fea:	f000 b8d1 	b.w	8005190 <_close_r>

08004fee <__swbuf_r>:
 8004fee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004ff0:	460e      	mov	r6, r1
 8004ff2:	4614      	mov	r4, r2
 8004ff4:	4605      	mov	r5, r0
 8004ff6:	b118      	cbz	r0, 8005000 <__swbuf_r+0x12>
 8004ff8:	6a03      	ldr	r3, [r0, #32]
 8004ffa:	b90b      	cbnz	r3, 8005000 <__swbuf_r+0x12>
 8004ffc:	f7ff feba 	bl	8004d74 <__sinit>
 8005000:	69a3      	ldr	r3, [r4, #24]
 8005002:	60a3      	str	r3, [r4, #8]
 8005004:	89a3      	ldrh	r3, [r4, #12]
 8005006:	071a      	lsls	r2, r3, #28
 8005008:	d501      	bpl.n	800500e <__swbuf_r+0x20>
 800500a:	6923      	ldr	r3, [r4, #16]
 800500c:	b943      	cbnz	r3, 8005020 <__swbuf_r+0x32>
 800500e:	4621      	mov	r1, r4
 8005010:	4628      	mov	r0, r5
 8005012:	f000 f82b 	bl	800506c <__swsetup_r>
 8005016:	b118      	cbz	r0, 8005020 <__swbuf_r+0x32>
 8005018:	f04f 37ff 	mov.w	r7, #4294967295
 800501c:	4638      	mov	r0, r7
 800501e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005020:	6823      	ldr	r3, [r4, #0]
 8005022:	6922      	ldr	r2, [r4, #16]
 8005024:	1a98      	subs	r0, r3, r2
 8005026:	6963      	ldr	r3, [r4, #20]
 8005028:	b2f6      	uxtb	r6, r6
 800502a:	4283      	cmp	r3, r0
 800502c:	4637      	mov	r7, r6
 800502e:	dc05      	bgt.n	800503c <__swbuf_r+0x4e>
 8005030:	4621      	mov	r1, r4
 8005032:	4628      	mov	r0, r5
 8005034:	f000 feda 	bl	8005dec <_fflush_r>
 8005038:	2800      	cmp	r0, #0
 800503a:	d1ed      	bne.n	8005018 <__swbuf_r+0x2a>
 800503c:	68a3      	ldr	r3, [r4, #8]
 800503e:	3b01      	subs	r3, #1
 8005040:	60a3      	str	r3, [r4, #8]
 8005042:	6823      	ldr	r3, [r4, #0]
 8005044:	1c5a      	adds	r2, r3, #1
 8005046:	6022      	str	r2, [r4, #0]
 8005048:	701e      	strb	r6, [r3, #0]
 800504a:	6962      	ldr	r2, [r4, #20]
 800504c:	1c43      	adds	r3, r0, #1
 800504e:	429a      	cmp	r2, r3
 8005050:	d004      	beq.n	800505c <__swbuf_r+0x6e>
 8005052:	89a3      	ldrh	r3, [r4, #12]
 8005054:	07db      	lsls	r3, r3, #31
 8005056:	d5e1      	bpl.n	800501c <__swbuf_r+0x2e>
 8005058:	2e0a      	cmp	r6, #10
 800505a:	d1df      	bne.n	800501c <__swbuf_r+0x2e>
 800505c:	4621      	mov	r1, r4
 800505e:	4628      	mov	r0, r5
 8005060:	f000 fec4 	bl	8005dec <_fflush_r>
 8005064:	2800      	cmp	r0, #0
 8005066:	d0d9      	beq.n	800501c <__swbuf_r+0x2e>
 8005068:	e7d6      	b.n	8005018 <__swbuf_r+0x2a>
	...

0800506c <__swsetup_r>:
 800506c:	b538      	push	{r3, r4, r5, lr}
 800506e:	4b29      	ldr	r3, [pc, #164]	@ (8005114 <__swsetup_r+0xa8>)
 8005070:	4605      	mov	r5, r0
 8005072:	6818      	ldr	r0, [r3, #0]
 8005074:	460c      	mov	r4, r1
 8005076:	b118      	cbz	r0, 8005080 <__swsetup_r+0x14>
 8005078:	6a03      	ldr	r3, [r0, #32]
 800507a:	b90b      	cbnz	r3, 8005080 <__swsetup_r+0x14>
 800507c:	f7ff fe7a 	bl	8004d74 <__sinit>
 8005080:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005084:	0719      	lsls	r1, r3, #28
 8005086:	d422      	bmi.n	80050ce <__swsetup_r+0x62>
 8005088:	06da      	lsls	r2, r3, #27
 800508a:	d407      	bmi.n	800509c <__swsetup_r+0x30>
 800508c:	2209      	movs	r2, #9
 800508e:	602a      	str	r2, [r5, #0]
 8005090:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005094:	81a3      	strh	r3, [r4, #12]
 8005096:	f04f 30ff 	mov.w	r0, #4294967295
 800509a:	e033      	b.n	8005104 <__swsetup_r+0x98>
 800509c:	0758      	lsls	r0, r3, #29
 800509e:	d512      	bpl.n	80050c6 <__swsetup_r+0x5a>
 80050a0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80050a2:	b141      	cbz	r1, 80050b6 <__swsetup_r+0x4a>
 80050a4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80050a8:	4299      	cmp	r1, r3
 80050aa:	d002      	beq.n	80050b2 <__swsetup_r+0x46>
 80050ac:	4628      	mov	r0, r5
 80050ae:	f000 f8f9 	bl	80052a4 <_free_r>
 80050b2:	2300      	movs	r3, #0
 80050b4:	6363      	str	r3, [r4, #52]	@ 0x34
 80050b6:	89a3      	ldrh	r3, [r4, #12]
 80050b8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80050bc:	81a3      	strh	r3, [r4, #12]
 80050be:	2300      	movs	r3, #0
 80050c0:	6063      	str	r3, [r4, #4]
 80050c2:	6923      	ldr	r3, [r4, #16]
 80050c4:	6023      	str	r3, [r4, #0]
 80050c6:	89a3      	ldrh	r3, [r4, #12]
 80050c8:	f043 0308 	orr.w	r3, r3, #8
 80050cc:	81a3      	strh	r3, [r4, #12]
 80050ce:	6923      	ldr	r3, [r4, #16]
 80050d0:	b94b      	cbnz	r3, 80050e6 <__swsetup_r+0x7a>
 80050d2:	89a3      	ldrh	r3, [r4, #12]
 80050d4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80050d8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80050dc:	d003      	beq.n	80050e6 <__swsetup_r+0x7a>
 80050de:	4621      	mov	r1, r4
 80050e0:	4628      	mov	r0, r5
 80050e2:	f000 fed1 	bl	8005e88 <__smakebuf_r>
 80050e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80050ea:	f013 0201 	ands.w	r2, r3, #1
 80050ee:	d00a      	beq.n	8005106 <__swsetup_r+0x9a>
 80050f0:	2200      	movs	r2, #0
 80050f2:	60a2      	str	r2, [r4, #8]
 80050f4:	6962      	ldr	r2, [r4, #20]
 80050f6:	4252      	negs	r2, r2
 80050f8:	61a2      	str	r2, [r4, #24]
 80050fa:	6922      	ldr	r2, [r4, #16]
 80050fc:	b942      	cbnz	r2, 8005110 <__swsetup_r+0xa4>
 80050fe:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8005102:	d1c5      	bne.n	8005090 <__swsetup_r+0x24>
 8005104:	bd38      	pop	{r3, r4, r5, pc}
 8005106:	0799      	lsls	r1, r3, #30
 8005108:	bf58      	it	pl
 800510a:	6962      	ldrpl	r2, [r4, #20]
 800510c:	60a2      	str	r2, [r4, #8]
 800510e:	e7f4      	b.n	80050fa <__swsetup_r+0x8e>
 8005110:	2000      	movs	r0, #0
 8005112:	e7f7      	b.n	8005104 <__swsetup_r+0x98>
 8005114:	20000018 	.word	0x20000018

08005118 <memset>:
 8005118:	4402      	add	r2, r0
 800511a:	4603      	mov	r3, r0
 800511c:	4293      	cmp	r3, r2
 800511e:	d100      	bne.n	8005122 <memset+0xa>
 8005120:	4770      	bx	lr
 8005122:	f803 1b01 	strb.w	r1, [r3], #1
 8005126:	e7f9      	b.n	800511c <memset+0x4>

08005128 <strchr>:
 8005128:	b2c9      	uxtb	r1, r1
 800512a:	4603      	mov	r3, r0
 800512c:	4618      	mov	r0, r3
 800512e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005132:	b112      	cbz	r2, 800513a <strchr+0x12>
 8005134:	428a      	cmp	r2, r1
 8005136:	d1f9      	bne.n	800512c <strchr+0x4>
 8005138:	4770      	bx	lr
 800513a:	2900      	cmp	r1, #0
 800513c:	bf18      	it	ne
 800513e:	2000      	movne	r0, #0
 8005140:	4770      	bx	lr

08005142 <strcspn>:
 8005142:	b570      	push	{r4, r5, r6, lr}
 8005144:	4603      	mov	r3, r0
 8005146:	461e      	mov	r6, r3
 8005148:	f813 4b01 	ldrb.w	r4, [r3], #1
 800514c:	b144      	cbz	r4, 8005160 <strcspn+0x1e>
 800514e:	1e4a      	subs	r2, r1, #1
 8005150:	e001      	b.n	8005156 <strcspn+0x14>
 8005152:	42a5      	cmp	r5, r4
 8005154:	d004      	beq.n	8005160 <strcspn+0x1e>
 8005156:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800515a:	2d00      	cmp	r5, #0
 800515c:	d1f9      	bne.n	8005152 <strcspn+0x10>
 800515e:	e7f2      	b.n	8005146 <strcspn+0x4>
 8005160:	1a30      	subs	r0, r6, r0
 8005162:	bd70      	pop	{r4, r5, r6, pc}

08005164 <strstr>:
 8005164:	780a      	ldrb	r2, [r1, #0]
 8005166:	b570      	push	{r4, r5, r6, lr}
 8005168:	b96a      	cbnz	r2, 8005186 <strstr+0x22>
 800516a:	bd70      	pop	{r4, r5, r6, pc}
 800516c:	429a      	cmp	r2, r3
 800516e:	d109      	bne.n	8005184 <strstr+0x20>
 8005170:	460c      	mov	r4, r1
 8005172:	4605      	mov	r5, r0
 8005174:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8005178:	2b00      	cmp	r3, #0
 800517a:	d0f6      	beq.n	800516a <strstr+0x6>
 800517c:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8005180:	429e      	cmp	r6, r3
 8005182:	d0f7      	beq.n	8005174 <strstr+0x10>
 8005184:	3001      	adds	r0, #1
 8005186:	7803      	ldrb	r3, [r0, #0]
 8005188:	2b00      	cmp	r3, #0
 800518a:	d1ef      	bne.n	800516c <strstr+0x8>
 800518c:	4618      	mov	r0, r3
 800518e:	e7ec      	b.n	800516a <strstr+0x6>

08005190 <_close_r>:
 8005190:	b538      	push	{r3, r4, r5, lr}
 8005192:	4d06      	ldr	r5, [pc, #24]	@ (80051ac <_close_r+0x1c>)
 8005194:	2300      	movs	r3, #0
 8005196:	4604      	mov	r4, r0
 8005198:	4608      	mov	r0, r1
 800519a:	602b      	str	r3, [r5, #0]
 800519c:	f7fc fa37 	bl	800160e <_close>
 80051a0:	1c43      	adds	r3, r0, #1
 80051a2:	d102      	bne.n	80051aa <_close_r+0x1a>
 80051a4:	682b      	ldr	r3, [r5, #0]
 80051a6:	b103      	cbz	r3, 80051aa <_close_r+0x1a>
 80051a8:	6023      	str	r3, [r4, #0]
 80051aa:	bd38      	pop	{r3, r4, r5, pc}
 80051ac:	200008e8 	.word	0x200008e8

080051b0 <_lseek_r>:
 80051b0:	b538      	push	{r3, r4, r5, lr}
 80051b2:	4d07      	ldr	r5, [pc, #28]	@ (80051d0 <_lseek_r+0x20>)
 80051b4:	4604      	mov	r4, r0
 80051b6:	4608      	mov	r0, r1
 80051b8:	4611      	mov	r1, r2
 80051ba:	2200      	movs	r2, #0
 80051bc:	602a      	str	r2, [r5, #0]
 80051be:	461a      	mov	r2, r3
 80051c0:	f7fc fa4c 	bl	800165c <_lseek>
 80051c4:	1c43      	adds	r3, r0, #1
 80051c6:	d102      	bne.n	80051ce <_lseek_r+0x1e>
 80051c8:	682b      	ldr	r3, [r5, #0]
 80051ca:	b103      	cbz	r3, 80051ce <_lseek_r+0x1e>
 80051cc:	6023      	str	r3, [r4, #0]
 80051ce:	bd38      	pop	{r3, r4, r5, pc}
 80051d0:	200008e8 	.word	0x200008e8

080051d4 <_read_r>:
 80051d4:	b538      	push	{r3, r4, r5, lr}
 80051d6:	4d07      	ldr	r5, [pc, #28]	@ (80051f4 <_read_r+0x20>)
 80051d8:	4604      	mov	r4, r0
 80051da:	4608      	mov	r0, r1
 80051dc:	4611      	mov	r1, r2
 80051de:	2200      	movs	r2, #0
 80051e0:	602a      	str	r2, [r5, #0]
 80051e2:	461a      	mov	r2, r3
 80051e4:	f7fc f9da 	bl	800159c <_read>
 80051e8:	1c43      	adds	r3, r0, #1
 80051ea:	d102      	bne.n	80051f2 <_read_r+0x1e>
 80051ec:	682b      	ldr	r3, [r5, #0]
 80051ee:	b103      	cbz	r3, 80051f2 <_read_r+0x1e>
 80051f0:	6023      	str	r3, [r4, #0]
 80051f2:	bd38      	pop	{r3, r4, r5, pc}
 80051f4:	200008e8 	.word	0x200008e8

080051f8 <_write_r>:
 80051f8:	b538      	push	{r3, r4, r5, lr}
 80051fa:	4d07      	ldr	r5, [pc, #28]	@ (8005218 <_write_r+0x20>)
 80051fc:	4604      	mov	r4, r0
 80051fe:	4608      	mov	r0, r1
 8005200:	4611      	mov	r1, r2
 8005202:	2200      	movs	r2, #0
 8005204:	602a      	str	r2, [r5, #0]
 8005206:	461a      	mov	r2, r3
 8005208:	f7fc f9e5 	bl	80015d6 <_write>
 800520c:	1c43      	adds	r3, r0, #1
 800520e:	d102      	bne.n	8005216 <_write_r+0x1e>
 8005210:	682b      	ldr	r3, [r5, #0]
 8005212:	b103      	cbz	r3, 8005216 <_write_r+0x1e>
 8005214:	6023      	str	r3, [r4, #0]
 8005216:	bd38      	pop	{r3, r4, r5, pc}
 8005218:	200008e8 	.word	0x200008e8

0800521c <__errno>:
 800521c:	4b01      	ldr	r3, [pc, #4]	@ (8005224 <__errno+0x8>)
 800521e:	6818      	ldr	r0, [r3, #0]
 8005220:	4770      	bx	lr
 8005222:	bf00      	nop
 8005224:	20000018 	.word	0x20000018

08005228 <__libc_init_array>:
 8005228:	b570      	push	{r4, r5, r6, lr}
 800522a:	4d0d      	ldr	r5, [pc, #52]	@ (8005260 <__libc_init_array+0x38>)
 800522c:	4c0d      	ldr	r4, [pc, #52]	@ (8005264 <__libc_init_array+0x3c>)
 800522e:	1b64      	subs	r4, r4, r5
 8005230:	10a4      	asrs	r4, r4, #2
 8005232:	2600      	movs	r6, #0
 8005234:	42a6      	cmp	r6, r4
 8005236:	d109      	bne.n	800524c <__libc_init_array+0x24>
 8005238:	4d0b      	ldr	r5, [pc, #44]	@ (8005268 <__libc_init_array+0x40>)
 800523a:	4c0c      	ldr	r4, [pc, #48]	@ (800526c <__libc_init_array+0x44>)
 800523c:	f000 fee2 	bl	8006004 <_init>
 8005240:	1b64      	subs	r4, r4, r5
 8005242:	10a4      	asrs	r4, r4, #2
 8005244:	2600      	movs	r6, #0
 8005246:	42a6      	cmp	r6, r4
 8005248:	d105      	bne.n	8005256 <__libc_init_array+0x2e>
 800524a:	bd70      	pop	{r4, r5, r6, pc}
 800524c:	f855 3b04 	ldr.w	r3, [r5], #4
 8005250:	4798      	blx	r3
 8005252:	3601      	adds	r6, #1
 8005254:	e7ee      	b.n	8005234 <__libc_init_array+0xc>
 8005256:	f855 3b04 	ldr.w	r3, [r5], #4
 800525a:	4798      	blx	r3
 800525c:	3601      	adds	r6, #1
 800525e:	e7f2      	b.n	8005246 <__libc_init_array+0x1e>
 8005260:	080061b4 	.word	0x080061b4
 8005264:	080061b4 	.word	0x080061b4
 8005268:	080061b4 	.word	0x080061b4
 800526c:	080061b8 	.word	0x080061b8

08005270 <__retarget_lock_init_recursive>:
 8005270:	4770      	bx	lr

08005272 <__retarget_lock_acquire_recursive>:
 8005272:	4770      	bx	lr

08005274 <__retarget_lock_release_recursive>:
 8005274:	4770      	bx	lr

08005276 <strcpy>:
 8005276:	4603      	mov	r3, r0
 8005278:	f811 2b01 	ldrb.w	r2, [r1], #1
 800527c:	f803 2b01 	strb.w	r2, [r3], #1
 8005280:	2a00      	cmp	r2, #0
 8005282:	d1f9      	bne.n	8005278 <strcpy+0x2>
 8005284:	4770      	bx	lr

08005286 <memcpy>:
 8005286:	440a      	add	r2, r1
 8005288:	4291      	cmp	r1, r2
 800528a:	f100 33ff 	add.w	r3, r0, #4294967295
 800528e:	d100      	bne.n	8005292 <memcpy+0xc>
 8005290:	4770      	bx	lr
 8005292:	b510      	push	{r4, lr}
 8005294:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005298:	f803 4f01 	strb.w	r4, [r3, #1]!
 800529c:	4291      	cmp	r1, r2
 800529e:	d1f9      	bne.n	8005294 <memcpy+0xe>
 80052a0:	bd10      	pop	{r4, pc}
	...

080052a4 <_free_r>:
 80052a4:	b538      	push	{r3, r4, r5, lr}
 80052a6:	4605      	mov	r5, r0
 80052a8:	2900      	cmp	r1, #0
 80052aa:	d041      	beq.n	8005330 <_free_r+0x8c>
 80052ac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80052b0:	1f0c      	subs	r4, r1, #4
 80052b2:	2b00      	cmp	r3, #0
 80052b4:	bfb8      	it	lt
 80052b6:	18e4      	addlt	r4, r4, r3
 80052b8:	f000 f8e0 	bl	800547c <__malloc_lock>
 80052bc:	4a1d      	ldr	r2, [pc, #116]	@ (8005334 <_free_r+0x90>)
 80052be:	6813      	ldr	r3, [r2, #0]
 80052c0:	b933      	cbnz	r3, 80052d0 <_free_r+0x2c>
 80052c2:	6063      	str	r3, [r4, #4]
 80052c4:	6014      	str	r4, [r2, #0]
 80052c6:	4628      	mov	r0, r5
 80052c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80052cc:	f000 b8dc 	b.w	8005488 <__malloc_unlock>
 80052d0:	42a3      	cmp	r3, r4
 80052d2:	d908      	bls.n	80052e6 <_free_r+0x42>
 80052d4:	6820      	ldr	r0, [r4, #0]
 80052d6:	1821      	adds	r1, r4, r0
 80052d8:	428b      	cmp	r3, r1
 80052da:	bf01      	itttt	eq
 80052dc:	6819      	ldreq	r1, [r3, #0]
 80052de:	685b      	ldreq	r3, [r3, #4]
 80052e0:	1809      	addeq	r1, r1, r0
 80052e2:	6021      	streq	r1, [r4, #0]
 80052e4:	e7ed      	b.n	80052c2 <_free_r+0x1e>
 80052e6:	461a      	mov	r2, r3
 80052e8:	685b      	ldr	r3, [r3, #4]
 80052ea:	b10b      	cbz	r3, 80052f0 <_free_r+0x4c>
 80052ec:	42a3      	cmp	r3, r4
 80052ee:	d9fa      	bls.n	80052e6 <_free_r+0x42>
 80052f0:	6811      	ldr	r1, [r2, #0]
 80052f2:	1850      	adds	r0, r2, r1
 80052f4:	42a0      	cmp	r0, r4
 80052f6:	d10b      	bne.n	8005310 <_free_r+0x6c>
 80052f8:	6820      	ldr	r0, [r4, #0]
 80052fa:	4401      	add	r1, r0
 80052fc:	1850      	adds	r0, r2, r1
 80052fe:	4283      	cmp	r3, r0
 8005300:	6011      	str	r1, [r2, #0]
 8005302:	d1e0      	bne.n	80052c6 <_free_r+0x22>
 8005304:	6818      	ldr	r0, [r3, #0]
 8005306:	685b      	ldr	r3, [r3, #4]
 8005308:	6053      	str	r3, [r2, #4]
 800530a:	4408      	add	r0, r1
 800530c:	6010      	str	r0, [r2, #0]
 800530e:	e7da      	b.n	80052c6 <_free_r+0x22>
 8005310:	d902      	bls.n	8005318 <_free_r+0x74>
 8005312:	230c      	movs	r3, #12
 8005314:	602b      	str	r3, [r5, #0]
 8005316:	e7d6      	b.n	80052c6 <_free_r+0x22>
 8005318:	6820      	ldr	r0, [r4, #0]
 800531a:	1821      	adds	r1, r4, r0
 800531c:	428b      	cmp	r3, r1
 800531e:	bf04      	itt	eq
 8005320:	6819      	ldreq	r1, [r3, #0]
 8005322:	685b      	ldreq	r3, [r3, #4]
 8005324:	6063      	str	r3, [r4, #4]
 8005326:	bf04      	itt	eq
 8005328:	1809      	addeq	r1, r1, r0
 800532a:	6021      	streq	r1, [r4, #0]
 800532c:	6054      	str	r4, [r2, #4]
 800532e:	e7ca      	b.n	80052c6 <_free_r+0x22>
 8005330:	bd38      	pop	{r3, r4, r5, pc}
 8005332:	bf00      	nop
 8005334:	200008f4 	.word	0x200008f4

08005338 <sbrk_aligned>:
 8005338:	b570      	push	{r4, r5, r6, lr}
 800533a:	4e0f      	ldr	r6, [pc, #60]	@ (8005378 <sbrk_aligned+0x40>)
 800533c:	460c      	mov	r4, r1
 800533e:	6831      	ldr	r1, [r6, #0]
 8005340:	4605      	mov	r5, r0
 8005342:	b911      	cbnz	r1, 800534a <sbrk_aligned+0x12>
 8005344:	f000 fe18 	bl	8005f78 <_sbrk_r>
 8005348:	6030      	str	r0, [r6, #0]
 800534a:	4621      	mov	r1, r4
 800534c:	4628      	mov	r0, r5
 800534e:	f000 fe13 	bl	8005f78 <_sbrk_r>
 8005352:	1c43      	adds	r3, r0, #1
 8005354:	d103      	bne.n	800535e <sbrk_aligned+0x26>
 8005356:	f04f 34ff 	mov.w	r4, #4294967295
 800535a:	4620      	mov	r0, r4
 800535c:	bd70      	pop	{r4, r5, r6, pc}
 800535e:	1cc4      	adds	r4, r0, #3
 8005360:	f024 0403 	bic.w	r4, r4, #3
 8005364:	42a0      	cmp	r0, r4
 8005366:	d0f8      	beq.n	800535a <sbrk_aligned+0x22>
 8005368:	1a21      	subs	r1, r4, r0
 800536a:	4628      	mov	r0, r5
 800536c:	f000 fe04 	bl	8005f78 <_sbrk_r>
 8005370:	3001      	adds	r0, #1
 8005372:	d1f2      	bne.n	800535a <sbrk_aligned+0x22>
 8005374:	e7ef      	b.n	8005356 <sbrk_aligned+0x1e>
 8005376:	bf00      	nop
 8005378:	200008f0 	.word	0x200008f0

0800537c <_malloc_r>:
 800537c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005380:	1ccd      	adds	r5, r1, #3
 8005382:	f025 0503 	bic.w	r5, r5, #3
 8005386:	3508      	adds	r5, #8
 8005388:	2d0c      	cmp	r5, #12
 800538a:	bf38      	it	cc
 800538c:	250c      	movcc	r5, #12
 800538e:	2d00      	cmp	r5, #0
 8005390:	4606      	mov	r6, r0
 8005392:	db01      	blt.n	8005398 <_malloc_r+0x1c>
 8005394:	42a9      	cmp	r1, r5
 8005396:	d904      	bls.n	80053a2 <_malloc_r+0x26>
 8005398:	230c      	movs	r3, #12
 800539a:	6033      	str	r3, [r6, #0]
 800539c:	2000      	movs	r0, #0
 800539e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80053a2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005478 <_malloc_r+0xfc>
 80053a6:	f000 f869 	bl	800547c <__malloc_lock>
 80053aa:	f8d8 3000 	ldr.w	r3, [r8]
 80053ae:	461c      	mov	r4, r3
 80053b0:	bb44      	cbnz	r4, 8005404 <_malloc_r+0x88>
 80053b2:	4629      	mov	r1, r5
 80053b4:	4630      	mov	r0, r6
 80053b6:	f7ff ffbf 	bl	8005338 <sbrk_aligned>
 80053ba:	1c43      	adds	r3, r0, #1
 80053bc:	4604      	mov	r4, r0
 80053be:	d158      	bne.n	8005472 <_malloc_r+0xf6>
 80053c0:	f8d8 4000 	ldr.w	r4, [r8]
 80053c4:	4627      	mov	r7, r4
 80053c6:	2f00      	cmp	r7, #0
 80053c8:	d143      	bne.n	8005452 <_malloc_r+0xd6>
 80053ca:	2c00      	cmp	r4, #0
 80053cc:	d04b      	beq.n	8005466 <_malloc_r+0xea>
 80053ce:	6823      	ldr	r3, [r4, #0]
 80053d0:	4639      	mov	r1, r7
 80053d2:	4630      	mov	r0, r6
 80053d4:	eb04 0903 	add.w	r9, r4, r3
 80053d8:	f000 fdce 	bl	8005f78 <_sbrk_r>
 80053dc:	4581      	cmp	r9, r0
 80053de:	d142      	bne.n	8005466 <_malloc_r+0xea>
 80053e0:	6821      	ldr	r1, [r4, #0]
 80053e2:	1a6d      	subs	r5, r5, r1
 80053e4:	4629      	mov	r1, r5
 80053e6:	4630      	mov	r0, r6
 80053e8:	f7ff ffa6 	bl	8005338 <sbrk_aligned>
 80053ec:	3001      	adds	r0, #1
 80053ee:	d03a      	beq.n	8005466 <_malloc_r+0xea>
 80053f0:	6823      	ldr	r3, [r4, #0]
 80053f2:	442b      	add	r3, r5
 80053f4:	6023      	str	r3, [r4, #0]
 80053f6:	f8d8 3000 	ldr.w	r3, [r8]
 80053fa:	685a      	ldr	r2, [r3, #4]
 80053fc:	bb62      	cbnz	r2, 8005458 <_malloc_r+0xdc>
 80053fe:	f8c8 7000 	str.w	r7, [r8]
 8005402:	e00f      	b.n	8005424 <_malloc_r+0xa8>
 8005404:	6822      	ldr	r2, [r4, #0]
 8005406:	1b52      	subs	r2, r2, r5
 8005408:	d420      	bmi.n	800544c <_malloc_r+0xd0>
 800540a:	2a0b      	cmp	r2, #11
 800540c:	d917      	bls.n	800543e <_malloc_r+0xc2>
 800540e:	1961      	adds	r1, r4, r5
 8005410:	42a3      	cmp	r3, r4
 8005412:	6025      	str	r5, [r4, #0]
 8005414:	bf18      	it	ne
 8005416:	6059      	strne	r1, [r3, #4]
 8005418:	6863      	ldr	r3, [r4, #4]
 800541a:	bf08      	it	eq
 800541c:	f8c8 1000 	streq.w	r1, [r8]
 8005420:	5162      	str	r2, [r4, r5]
 8005422:	604b      	str	r3, [r1, #4]
 8005424:	4630      	mov	r0, r6
 8005426:	f000 f82f 	bl	8005488 <__malloc_unlock>
 800542a:	f104 000b 	add.w	r0, r4, #11
 800542e:	1d23      	adds	r3, r4, #4
 8005430:	f020 0007 	bic.w	r0, r0, #7
 8005434:	1ac2      	subs	r2, r0, r3
 8005436:	bf1c      	itt	ne
 8005438:	1a1b      	subne	r3, r3, r0
 800543a:	50a3      	strne	r3, [r4, r2]
 800543c:	e7af      	b.n	800539e <_malloc_r+0x22>
 800543e:	6862      	ldr	r2, [r4, #4]
 8005440:	42a3      	cmp	r3, r4
 8005442:	bf0c      	ite	eq
 8005444:	f8c8 2000 	streq.w	r2, [r8]
 8005448:	605a      	strne	r2, [r3, #4]
 800544a:	e7eb      	b.n	8005424 <_malloc_r+0xa8>
 800544c:	4623      	mov	r3, r4
 800544e:	6864      	ldr	r4, [r4, #4]
 8005450:	e7ae      	b.n	80053b0 <_malloc_r+0x34>
 8005452:	463c      	mov	r4, r7
 8005454:	687f      	ldr	r7, [r7, #4]
 8005456:	e7b6      	b.n	80053c6 <_malloc_r+0x4a>
 8005458:	461a      	mov	r2, r3
 800545a:	685b      	ldr	r3, [r3, #4]
 800545c:	42a3      	cmp	r3, r4
 800545e:	d1fb      	bne.n	8005458 <_malloc_r+0xdc>
 8005460:	2300      	movs	r3, #0
 8005462:	6053      	str	r3, [r2, #4]
 8005464:	e7de      	b.n	8005424 <_malloc_r+0xa8>
 8005466:	230c      	movs	r3, #12
 8005468:	6033      	str	r3, [r6, #0]
 800546a:	4630      	mov	r0, r6
 800546c:	f000 f80c 	bl	8005488 <__malloc_unlock>
 8005470:	e794      	b.n	800539c <_malloc_r+0x20>
 8005472:	6005      	str	r5, [r0, #0]
 8005474:	e7d6      	b.n	8005424 <_malloc_r+0xa8>
 8005476:	bf00      	nop
 8005478:	200008f4 	.word	0x200008f4

0800547c <__malloc_lock>:
 800547c:	4801      	ldr	r0, [pc, #4]	@ (8005484 <__malloc_lock+0x8>)
 800547e:	f7ff bef8 	b.w	8005272 <__retarget_lock_acquire_recursive>
 8005482:	bf00      	nop
 8005484:	200008ec 	.word	0x200008ec

08005488 <__malloc_unlock>:
 8005488:	4801      	ldr	r0, [pc, #4]	@ (8005490 <__malloc_unlock+0x8>)
 800548a:	f7ff bef3 	b.w	8005274 <__retarget_lock_release_recursive>
 800548e:	bf00      	nop
 8005490:	200008ec 	.word	0x200008ec

08005494 <__ssputs_r>:
 8005494:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005498:	688e      	ldr	r6, [r1, #8]
 800549a:	461f      	mov	r7, r3
 800549c:	42be      	cmp	r6, r7
 800549e:	680b      	ldr	r3, [r1, #0]
 80054a0:	4682      	mov	sl, r0
 80054a2:	460c      	mov	r4, r1
 80054a4:	4690      	mov	r8, r2
 80054a6:	d82d      	bhi.n	8005504 <__ssputs_r+0x70>
 80054a8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80054ac:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80054b0:	d026      	beq.n	8005500 <__ssputs_r+0x6c>
 80054b2:	6965      	ldr	r5, [r4, #20]
 80054b4:	6909      	ldr	r1, [r1, #16]
 80054b6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80054ba:	eba3 0901 	sub.w	r9, r3, r1
 80054be:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80054c2:	1c7b      	adds	r3, r7, #1
 80054c4:	444b      	add	r3, r9
 80054c6:	106d      	asrs	r5, r5, #1
 80054c8:	429d      	cmp	r5, r3
 80054ca:	bf38      	it	cc
 80054cc:	461d      	movcc	r5, r3
 80054ce:	0553      	lsls	r3, r2, #21
 80054d0:	d527      	bpl.n	8005522 <__ssputs_r+0x8e>
 80054d2:	4629      	mov	r1, r5
 80054d4:	f7ff ff52 	bl	800537c <_malloc_r>
 80054d8:	4606      	mov	r6, r0
 80054da:	b360      	cbz	r0, 8005536 <__ssputs_r+0xa2>
 80054dc:	6921      	ldr	r1, [r4, #16]
 80054de:	464a      	mov	r2, r9
 80054e0:	f7ff fed1 	bl	8005286 <memcpy>
 80054e4:	89a3      	ldrh	r3, [r4, #12]
 80054e6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80054ea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80054ee:	81a3      	strh	r3, [r4, #12]
 80054f0:	6126      	str	r6, [r4, #16]
 80054f2:	6165      	str	r5, [r4, #20]
 80054f4:	444e      	add	r6, r9
 80054f6:	eba5 0509 	sub.w	r5, r5, r9
 80054fa:	6026      	str	r6, [r4, #0]
 80054fc:	60a5      	str	r5, [r4, #8]
 80054fe:	463e      	mov	r6, r7
 8005500:	42be      	cmp	r6, r7
 8005502:	d900      	bls.n	8005506 <__ssputs_r+0x72>
 8005504:	463e      	mov	r6, r7
 8005506:	6820      	ldr	r0, [r4, #0]
 8005508:	4632      	mov	r2, r6
 800550a:	4641      	mov	r1, r8
 800550c:	f000 fcf8 	bl	8005f00 <memmove>
 8005510:	68a3      	ldr	r3, [r4, #8]
 8005512:	1b9b      	subs	r3, r3, r6
 8005514:	60a3      	str	r3, [r4, #8]
 8005516:	6823      	ldr	r3, [r4, #0]
 8005518:	4433      	add	r3, r6
 800551a:	6023      	str	r3, [r4, #0]
 800551c:	2000      	movs	r0, #0
 800551e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005522:	462a      	mov	r2, r5
 8005524:	f000 fd38 	bl	8005f98 <_realloc_r>
 8005528:	4606      	mov	r6, r0
 800552a:	2800      	cmp	r0, #0
 800552c:	d1e0      	bne.n	80054f0 <__ssputs_r+0x5c>
 800552e:	6921      	ldr	r1, [r4, #16]
 8005530:	4650      	mov	r0, sl
 8005532:	f7ff feb7 	bl	80052a4 <_free_r>
 8005536:	230c      	movs	r3, #12
 8005538:	f8ca 3000 	str.w	r3, [sl]
 800553c:	89a3      	ldrh	r3, [r4, #12]
 800553e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005542:	81a3      	strh	r3, [r4, #12]
 8005544:	f04f 30ff 	mov.w	r0, #4294967295
 8005548:	e7e9      	b.n	800551e <__ssputs_r+0x8a>
	...

0800554c <_svfiprintf_r>:
 800554c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005550:	4698      	mov	r8, r3
 8005552:	898b      	ldrh	r3, [r1, #12]
 8005554:	061b      	lsls	r3, r3, #24
 8005556:	b09d      	sub	sp, #116	@ 0x74
 8005558:	4607      	mov	r7, r0
 800555a:	460d      	mov	r5, r1
 800555c:	4614      	mov	r4, r2
 800555e:	d510      	bpl.n	8005582 <_svfiprintf_r+0x36>
 8005560:	690b      	ldr	r3, [r1, #16]
 8005562:	b973      	cbnz	r3, 8005582 <_svfiprintf_r+0x36>
 8005564:	2140      	movs	r1, #64	@ 0x40
 8005566:	f7ff ff09 	bl	800537c <_malloc_r>
 800556a:	6028      	str	r0, [r5, #0]
 800556c:	6128      	str	r0, [r5, #16]
 800556e:	b930      	cbnz	r0, 800557e <_svfiprintf_r+0x32>
 8005570:	230c      	movs	r3, #12
 8005572:	603b      	str	r3, [r7, #0]
 8005574:	f04f 30ff 	mov.w	r0, #4294967295
 8005578:	b01d      	add	sp, #116	@ 0x74
 800557a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800557e:	2340      	movs	r3, #64	@ 0x40
 8005580:	616b      	str	r3, [r5, #20]
 8005582:	2300      	movs	r3, #0
 8005584:	9309      	str	r3, [sp, #36]	@ 0x24
 8005586:	2320      	movs	r3, #32
 8005588:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800558c:	f8cd 800c 	str.w	r8, [sp, #12]
 8005590:	2330      	movs	r3, #48	@ 0x30
 8005592:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005730 <_svfiprintf_r+0x1e4>
 8005596:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800559a:	f04f 0901 	mov.w	r9, #1
 800559e:	4623      	mov	r3, r4
 80055a0:	469a      	mov	sl, r3
 80055a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80055a6:	b10a      	cbz	r2, 80055ac <_svfiprintf_r+0x60>
 80055a8:	2a25      	cmp	r2, #37	@ 0x25
 80055aa:	d1f9      	bne.n	80055a0 <_svfiprintf_r+0x54>
 80055ac:	ebba 0b04 	subs.w	fp, sl, r4
 80055b0:	d00b      	beq.n	80055ca <_svfiprintf_r+0x7e>
 80055b2:	465b      	mov	r3, fp
 80055b4:	4622      	mov	r2, r4
 80055b6:	4629      	mov	r1, r5
 80055b8:	4638      	mov	r0, r7
 80055ba:	f7ff ff6b 	bl	8005494 <__ssputs_r>
 80055be:	3001      	adds	r0, #1
 80055c0:	f000 80a7 	beq.w	8005712 <_svfiprintf_r+0x1c6>
 80055c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80055c6:	445a      	add	r2, fp
 80055c8:	9209      	str	r2, [sp, #36]	@ 0x24
 80055ca:	f89a 3000 	ldrb.w	r3, [sl]
 80055ce:	2b00      	cmp	r3, #0
 80055d0:	f000 809f 	beq.w	8005712 <_svfiprintf_r+0x1c6>
 80055d4:	2300      	movs	r3, #0
 80055d6:	f04f 32ff 	mov.w	r2, #4294967295
 80055da:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80055de:	f10a 0a01 	add.w	sl, sl, #1
 80055e2:	9304      	str	r3, [sp, #16]
 80055e4:	9307      	str	r3, [sp, #28]
 80055e6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80055ea:	931a      	str	r3, [sp, #104]	@ 0x68
 80055ec:	4654      	mov	r4, sl
 80055ee:	2205      	movs	r2, #5
 80055f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80055f4:	484e      	ldr	r0, [pc, #312]	@ (8005730 <_svfiprintf_r+0x1e4>)
 80055f6:	f7fa fdfb 	bl	80001f0 <memchr>
 80055fa:	9a04      	ldr	r2, [sp, #16]
 80055fc:	b9d8      	cbnz	r0, 8005636 <_svfiprintf_r+0xea>
 80055fe:	06d0      	lsls	r0, r2, #27
 8005600:	bf44      	itt	mi
 8005602:	2320      	movmi	r3, #32
 8005604:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005608:	0711      	lsls	r1, r2, #28
 800560a:	bf44      	itt	mi
 800560c:	232b      	movmi	r3, #43	@ 0x2b
 800560e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005612:	f89a 3000 	ldrb.w	r3, [sl]
 8005616:	2b2a      	cmp	r3, #42	@ 0x2a
 8005618:	d015      	beq.n	8005646 <_svfiprintf_r+0xfa>
 800561a:	9a07      	ldr	r2, [sp, #28]
 800561c:	4654      	mov	r4, sl
 800561e:	2000      	movs	r0, #0
 8005620:	f04f 0c0a 	mov.w	ip, #10
 8005624:	4621      	mov	r1, r4
 8005626:	f811 3b01 	ldrb.w	r3, [r1], #1
 800562a:	3b30      	subs	r3, #48	@ 0x30
 800562c:	2b09      	cmp	r3, #9
 800562e:	d94b      	bls.n	80056c8 <_svfiprintf_r+0x17c>
 8005630:	b1b0      	cbz	r0, 8005660 <_svfiprintf_r+0x114>
 8005632:	9207      	str	r2, [sp, #28]
 8005634:	e014      	b.n	8005660 <_svfiprintf_r+0x114>
 8005636:	eba0 0308 	sub.w	r3, r0, r8
 800563a:	fa09 f303 	lsl.w	r3, r9, r3
 800563e:	4313      	orrs	r3, r2
 8005640:	9304      	str	r3, [sp, #16]
 8005642:	46a2      	mov	sl, r4
 8005644:	e7d2      	b.n	80055ec <_svfiprintf_r+0xa0>
 8005646:	9b03      	ldr	r3, [sp, #12]
 8005648:	1d19      	adds	r1, r3, #4
 800564a:	681b      	ldr	r3, [r3, #0]
 800564c:	9103      	str	r1, [sp, #12]
 800564e:	2b00      	cmp	r3, #0
 8005650:	bfbb      	ittet	lt
 8005652:	425b      	neglt	r3, r3
 8005654:	f042 0202 	orrlt.w	r2, r2, #2
 8005658:	9307      	strge	r3, [sp, #28]
 800565a:	9307      	strlt	r3, [sp, #28]
 800565c:	bfb8      	it	lt
 800565e:	9204      	strlt	r2, [sp, #16]
 8005660:	7823      	ldrb	r3, [r4, #0]
 8005662:	2b2e      	cmp	r3, #46	@ 0x2e
 8005664:	d10a      	bne.n	800567c <_svfiprintf_r+0x130>
 8005666:	7863      	ldrb	r3, [r4, #1]
 8005668:	2b2a      	cmp	r3, #42	@ 0x2a
 800566a:	d132      	bne.n	80056d2 <_svfiprintf_r+0x186>
 800566c:	9b03      	ldr	r3, [sp, #12]
 800566e:	1d1a      	adds	r2, r3, #4
 8005670:	681b      	ldr	r3, [r3, #0]
 8005672:	9203      	str	r2, [sp, #12]
 8005674:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005678:	3402      	adds	r4, #2
 800567a:	9305      	str	r3, [sp, #20]
 800567c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005740 <_svfiprintf_r+0x1f4>
 8005680:	7821      	ldrb	r1, [r4, #0]
 8005682:	2203      	movs	r2, #3
 8005684:	4650      	mov	r0, sl
 8005686:	f7fa fdb3 	bl	80001f0 <memchr>
 800568a:	b138      	cbz	r0, 800569c <_svfiprintf_r+0x150>
 800568c:	9b04      	ldr	r3, [sp, #16]
 800568e:	eba0 000a 	sub.w	r0, r0, sl
 8005692:	2240      	movs	r2, #64	@ 0x40
 8005694:	4082      	lsls	r2, r0
 8005696:	4313      	orrs	r3, r2
 8005698:	3401      	adds	r4, #1
 800569a:	9304      	str	r3, [sp, #16]
 800569c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80056a0:	4824      	ldr	r0, [pc, #144]	@ (8005734 <_svfiprintf_r+0x1e8>)
 80056a2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80056a6:	2206      	movs	r2, #6
 80056a8:	f7fa fda2 	bl	80001f0 <memchr>
 80056ac:	2800      	cmp	r0, #0
 80056ae:	d036      	beq.n	800571e <_svfiprintf_r+0x1d2>
 80056b0:	4b21      	ldr	r3, [pc, #132]	@ (8005738 <_svfiprintf_r+0x1ec>)
 80056b2:	bb1b      	cbnz	r3, 80056fc <_svfiprintf_r+0x1b0>
 80056b4:	9b03      	ldr	r3, [sp, #12]
 80056b6:	3307      	adds	r3, #7
 80056b8:	f023 0307 	bic.w	r3, r3, #7
 80056bc:	3308      	adds	r3, #8
 80056be:	9303      	str	r3, [sp, #12]
 80056c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80056c2:	4433      	add	r3, r6
 80056c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80056c6:	e76a      	b.n	800559e <_svfiprintf_r+0x52>
 80056c8:	fb0c 3202 	mla	r2, ip, r2, r3
 80056cc:	460c      	mov	r4, r1
 80056ce:	2001      	movs	r0, #1
 80056d0:	e7a8      	b.n	8005624 <_svfiprintf_r+0xd8>
 80056d2:	2300      	movs	r3, #0
 80056d4:	3401      	adds	r4, #1
 80056d6:	9305      	str	r3, [sp, #20]
 80056d8:	4619      	mov	r1, r3
 80056da:	f04f 0c0a 	mov.w	ip, #10
 80056de:	4620      	mov	r0, r4
 80056e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80056e4:	3a30      	subs	r2, #48	@ 0x30
 80056e6:	2a09      	cmp	r2, #9
 80056e8:	d903      	bls.n	80056f2 <_svfiprintf_r+0x1a6>
 80056ea:	2b00      	cmp	r3, #0
 80056ec:	d0c6      	beq.n	800567c <_svfiprintf_r+0x130>
 80056ee:	9105      	str	r1, [sp, #20]
 80056f0:	e7c4      	b.n	800567c <_svfiprintf_r+0x130>
 80056f2:	fb0c 2101 	mla	r1, ip, r1, r2
 80056f6:	4604      	mov	r4, r0
 80056f8:	2301      	movs	r3, #1
 80056fa:	e7f0      	b.n	80056de <_svfiprintf_r+0x192>
 80056fc:	ab03      	add	r3, sp, #12
 80056fe:	9300      	str	r3, [sp, #0]
 8005700:	462a      	mov	r2, r5
 8005702:	4b0e      	ldr	r3, [pc, #56]	@ (800573c <_svfiprintf_r+0x1f0>)
 8005704:	a904      	add	r1, sp, #16
 8005706:	4638      	mov	r0, r7
 8005708:	f3af 8000 	nop.w
 800570c:	1c42      	adds	r2, r0, #1
 800570e:	4606      	mov	r6, r0
 8005710:	d1d6      	bne.n	80056c0 <_svfiprintf_r+0x174>
 8005712:	89ab      	ldrh	r3, [r5, #12]
 8005714:	065b      	lsls	r3, r3, #25
 8005716:	f53f af2d 	bmi.w	8005574 <_svfiprintf_r+0x28>
 800571a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800571c:	e72c      	b.n	8005578 <_svfiprintf_r+0x2c>
 800571e:	ab03      	add	r3, sp, #12
 8005720:	9300      	str	r3, [sp, #0]
 8005722:	462a      	mov	r2, r5
 8005724:	4b05      	ldr	r3, [pc, #20]	@ (800573c <_svfiprintf_r+0x1f0>)
 8005726:	a904      	add	r1, sp, #16
 8005728:	4638      	mov	r0, r7
 800572a:	f000 f9bb 	bl	8005aa4 <_printf_i>
 800572e:	e7ed      	b.n	800570c <_svfiprintf_r+0x1c0>
 8005730:	08006178 	.word	0x08006178
 8005734:	08006182 	.word	0x08006182
 8005738:	00000000 	.word	0x00000000
 800573c:	08005495 	.word	0x08005495
 8005740:	0800617e 	.word	0x0800617e

08005744 <__sfputc_r>:
 8005744:	6893      	ldr	r3, [r2, #8]
 8005746:	3b01      	subs	r3, #1
 8005748:	2b00      	cmp	r3, #0
 800574a:	b410      	push	{r4}
 800574c:	6093      	str	r3, [r2, #8]
 800574e:	da08      	bge.n	8005762 <__sfputc_r+0x1e>
 8005750:	6994      	ldr	r4, [r2, #24]
 8005752:	42a3      	cmp	r3, r4
 8005754:	db01      	blt.n	800575a <__sfputc_r+0x16>
 8005756:	290a      	cmp	r1, #10
 8005758:	d103      	bne.n	8005762 <__sfputc_r+0x1e>
 800575a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800575e:	f7ff bc46 	b.w	8004fee <__swbuf_r>
 8005762:	6813      	ldr	r3, [r2, #0]
 8005764:	1c58      	adds	r0, r3, #1
 8005766:	6010      	str	r0, [r2, #0]
 8005768:	7019      	strb	r1, [r3, #0]
 800576a:	4608      	mov	r0, r1
 800576c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005770:	4770      	bx	lr

08005772 <__sfputs_r>:
 8005772:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005774:	4606      	mov	r6, r0
 8005776:	460f      	mov	r7, r1
 8005778:	4614      	mov	r4, r2
 800577a:	18d5      	adds	r5, r2, r3
 800577c:	42ac      	cmp	r4, r5
 800577e:	d101      	bne.n	8005784 <__sfputs_r+0x12>
 8005780:	2000      	movs	r0, #0
 8005782:	e007      	b.n	8005794 <__sfputs_r+0x22>
 8005784:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005788:	463a      	mov	r2, r7
 800578a:	4630      	mov	r0, r6
 800578c:	f7ff ffda 	bl	8005744 <__sfputc_r>
 8005790:	1c43      	adds	r3, r0, #1
 8005792:	d1f3      	bne.n	800577c <__sfputs_r+0xa>
 8005794:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005798 <_vfiprintf_r>:
 8005798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800579c:	460d      	mov	r5, r1
 800579e:	b09d      	sub	sp, #116	@ 0x74
 80057a0:	4614      	mov	r4, r2
 80057a2:	4698      	mov	r8, r3
 80057a4:	4606      	mov	r6, r0
 80057a6:	b118      	cbz	r0, 80057b0 <_vfiprintf_r+0x18>
 80057a8:	6a03      	ldr	r3, [r0, #32]
 80057aa:	b90b      	cbnz	r3, 80057b0 <_vfiprintf_r+0x18>
 80057ac:	f7ff fae2 	bl	8004d74 <__sinit>
 80057b0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80057b2:	07d9      	lsls	r1, r3, #31
 80057b4:	d405      	bmi.n	80057c2 <_vfiprintf_r+0x2a>
 80057b6:	89ab      	ldrh	r3, [r5, #12]
 80057b8:	059a      	lsls	r2, r3, #22
 80057ba:	d402      	bmi.n	80057c2 <_vfiprintf_r+0x2a>
 80057bc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80057be:	f7ff fd58 	bl	8005272 <__retarget_lock_acquire_recursive>
 80057c2:	89ab      	ldrh	r3, [r5, #12]
 80057c4:	071b      	lsls	r3, r3, #28
 80057c6:	d501      	bpl.n	80057cc <_vfiprintf_r+0x34>
 80057c8:	692b      	ldr	r3, [r5, #16]
 80057ca:	b99b      	cbnz	r3, 80057f4 <_vfiprintf_r+0x5c>
 80057cc:	4629      	mov	r1, r5
 80057ce:	4630      	mov	r0, r6
 80057d0:	f7ff fc4c 	bl	800506c <__swsetup_r>
 80057d4:	b170      	cbz	r0, 80057f4 <_vfiprintf_r+0x5c>
 80057d6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80057d8:	07dc      	lsls	r4, r3, #31
 80057da:	d504      	bpl.n	80057e6 <_vfiprintf_r+0x4e>
 80057dc:	f04f 30ff 	mov.w	r0, #4294967295
 80057e0:	b01d      	add	sp, #116	@ 0x74
 80057e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80057e6:	89ab      	ldrh	r3, [r5, #12]
 80057e8:	0598      	lsls	r0, r3, #22
 80057ea:	d4f7      	bmi.n	80057dc <_vfiprintf_r+0x44>
 80057ec:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80057ee:	f7ff fd41 	bl	8005274 <__retarget_lock_release_recursive>
 80057f2:	e7f3      	b.n	80057dc <_vfiprintf_r+0x44>
 80057f4:	2300      	movs	r3, #0
 80057f6:	9309      	str	r3, [sp, #36]	@ 0x24
 80057f8:	2320      	movs	r3, #32
 80057fa:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80057fe:	f8cd 800c 	str.w	r8, [sp, #12]
 8005802:	2330      	movs	r3, #48	@ 0x30
 8005804:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80059b4 <_vfiprintf_r+0x21c>
 8005808:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800580c:	f04f 0901 	mov.w	r9, #1
 8005810:	4623      	mov	r3, r4
 8005812:	469a      	mov	sl, r3
 8005814:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005818:	b10a      	cbz	r2, 800581e <_vfiprintf_r+0x86>
 800581a:	2a25      	cmp	r2, #37	@ 0x25
 800581c:	d1f9      	bne.n	8005812 <_vfiprintf_r+0x7a>
 800581e:	ebba 0b04 	subs.w	fp, sl, r4
 8005822:	d00b      	beq.n	800583c <_vfiprintf_r+0xa4>
 8005824:	465b      	mov	r3, fp
 8005826:	4622      	mov	r2, r4
 8005828:	4629      	mov	r1, r5
 800582a:	4630      	mov	r0, r6
 800582c:	f7ff ffa1 	bl	8005772 <__sfputs_r>
 8005830:	3001      	adds	r0, #1
 8005832:	f000 80a7 	beq.w	8005984 <_vfiprintf_r+0x1ec>
 8005836:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005838:	445a      	add	r2, fp
 800583a:	9209      	str	r2, [sp, #36]	@ 0x24
 800583c:	f89a 3000 	ldrb.w	r3, [sl]
 8005840:	2b00      	cmp	r3, #0
 8005842:	f000 809f 	beq.w	8005984 <_vfiprintf_r+0x1ec>
 8005846:	2300      	movs	r3, #0
 8005848:	f04f 32ff 	mov.w	r2, #4294967295
 800584c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005850:	f10a 0a01 	add.w	sl, sl, #1
 8005854:	9304      	str	r3, [sp, #16]
 8005856:	9307      	str	r3, [sp, #28]
 8005858:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800585c:	931a      	str	r3, [sp, #104]	@ 0x68
 800585e:	4654      	mov	r4, sl
 8005860:	2205      	movs	r2, #5
 8005862:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005866:	4853      	ldr	r0, [pc, #332]	@ (80059b4 <_vfiprintf_r+0x21c>)
 8005868:	f7fa fcc2 	bl	80001f0 <memchr>
 800586c:	9a04      	ldr	r2, [sp, #16]
 800586e:	b9d8      	cbnz	r0, 80058a8 <_vfiprintf_r+0x110>
 8005870:	06d1      	lsls	r1, r2, #27
 8005872:	bf44      	itt	mi
 8005874:	2320      	movmi	r3, #32
 8005876:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800587a:	0713      	lsls	r3, r2, #28
 800587c:	bf44      	itt	mi
 800587e:	232b      	movmi	r3, #43	@ 0x2b
 8005880:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005884:	f89a 3000 	ldrb.w	r3, [sl]
 8005888:	2b2a      	cmp	r3, #42	@ 0x2a
 800588a:	d015      	beq.n	80058b8 <_vfiprintf_r+0x120>
 800588c:	9a07      	ldr	r2, [sp, #28]
 800588e:	4654      	mov	r4, sl
 8005890:	2000      	movs	r0, #0
 8005892:	f04f 0c0a 	mov.w	ip, #10
 8005896:	4621      	mov	r1, r4
 8005898:	f811 3b01 	ldrb.w	r3, [r1], #1
 800589c:	3b30      	subs	r3, #48	@ 0x30
 800589e:	2b09      	cmp	r3, #9
 80058a0:	d94b      	bls.n	800593a <_vfiprintf_r+0x1a2>
 80058a2:	b1b0      	cbz	r0, 80058d2 <_vfiprintf_r+0x13a>
 80058a4:	9207      	str	r2, [sp, #28]
 80058a6:	e014      	b.n	80058d2 <_vfiprintf_r+0x13a>
 80058a8:	eba0 0308 	sub.w	r3, r0, r8
 80058ac:	fa09 f303 	lsl.w	r3, r9, r3
 80058b0:	4313      	orrs	r3, r2
 80058b2:	9304      	str	r3, [sp, #16]
 80058b4:	46a2      	mov	sl, r4
 80058b6:	e7d2      	b.n	800585e <_vfiprintf_r+0xc6>
 80058b8:	9b03      	ldr	r3, [sp, #12]
 80058ba:	1d19      	adds	r1, r3, #4
 80058bc:	681b      	ldr	r3, [r3, #0]
 80058be:	9103      	str	r1, [sp, #12]
 80058c0:	2b00      	cmp	r3, #0
 80058c2:	bfbb      	ittet	lt
 80058c4:	425b      	neglt	r3, r3
 80058c6:	f042 0202 	orrlt.w	r2, r2, #2
 80058ca:	9307      	strge	r3, [sp, #28]
 80058cc:	9307      	strlt	r3, [sp, #28]
 80058ce:	bfb8      	it	lt
 80058d0:	9204      	strlt	r2, [sp, #16]
 80058d2:	7823      	ldrb	r3, [r4, #0]
 80058d4:	2b2e      	cmp	r3, #46	@ 0x2e
 80058d6:	d10a      	bne.n	80058ee <_vfiprintf_r+0x156>
 80058d8:	7863      	ldrb	r3, [r4, #1]
 80058da:	2b2a      	cmp	r3, #42	@ 0x2a
 80058dc:	d132      	bne.n	8005944 <_vfiprintf_r+0x1ac>
 80058de:	9b03      	ldr	r3, [sp, #12]
 80058e0:	1d1a      	adds	r2, r3, #4
 80058e2:	681b      	ldr	r3, [r3, #0]
 80058e4:	9203      	str	r2, [sp, #12]
 80058e6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80058ea:	3402      	adds	r4, #2
 80058ec:	9305      	str	r3, [sp, #20]
 80058ee:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80059c4 <_vfiprintf_r+0x22c>
 80058f2:	7821      	ldrb	r1, [r4, #0]
 80058f4:	2203      	movs	r2, #3
 80058f6:	4650      	mov	r0, sl
 80058f8:	f7fa fc7a 	bl	80001f0 <memchr>
 80058fc:	b138      	cbz	r0, 800590e <_vfiprintf_r+0x176>
 80058fe:	9b04      	ldr	r3, [sp, #16]
 8005900:	eba0 000a 	sub.w	r0, r0, sl
 8005904:	2240      	movs	r2, #64	@ 0x40
 8005906:	4082      	lsls	r2, r0
 8005908:	4313      	orrs	r3, r2
 800590a:	3401      	adds	r4, #1
 800590c:	9304      	str	r3, [sp, #16]
 800590e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005912:	4829      	ldr	r0, [pc, #164]	@ (80059b8 <_vfiprintf_r+0x220>)
 8005914:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005918:	2206      	movs	r2, #6
 800591a:	f7fa fc69 	bl	80001f0 <memchr>
 800591e:	2800      	cmp	r0, #0
 8005920:	d03f      	beq.n	80059a2 <_vfiprintf_r+0x20a>
 8005922:	4b26      	ldr	r3, [pc, #152]	@ (80059bc <_vfiprintf_r+0x224>)
 8005924:	bb1b      	cbnz	r3, 800596e <_vfiprintf_r+0x1d6>
 8005926:	9b03      	ldr	r3, [sp, #12]
 8005928:	3307      	adds	r3, #7
 800592a:	f023 0307 	bic.w	r3, r3, #7
 800592e:	3308      	adds	r3, #8
 8005930:	9303      	str	r3, [sp, #12]
 8005932:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005934:	443b      	add	r3, r7
 8005936:	9309      	str	r3, [sp, #36]	@ 0x24
 8005938:	e76a      	b.n	8005810 <_vfiprintf_r+0x78>
 800593a:	fb0c 3202 	mla	r2, ip, r2, r3
 800593e:	460c      	mov	r4, r1
 8005940:	2001      	movs	r0, #1
 8005942:	e7a8      	b.n	8005896 <_vfiprintf_r+0xfe>
 8005944:	2300      	movs	r3, #0
 8005946:	3401      	adds	r4, #1
 8005948:	9305      	str	r3, [sp, #20]
 800594a:	4619      	mov	r1, r3
 800594c:	f04f 0c0a 	mov.w	ip, #10
 8005950:	4620      	mov	r0, r4
 8005952:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005956:	3a30      	subs	r2, #48	@ 0x30
 8005958:	2a09      	cmp	r2, #9
 800595a:	d903      	bls.n	8005964 <_vfiprintf_r+0x1cc>
 800595c:	2b00      	cmp	r3, #0
 800595e:	d0c6      	beq.n	80058ee <_vfiprintf_r+0x156>
 8005960:	9105      	str	r1, [sp, #20]
 8005962:	e7c4      	b.n	80058ee <_vfiprintf_r+0x156>
 8005964:	fb0c 2101 	mla	r1, ip, r1, r2
 8005968:	4604      	mov	r4, r0
 800596a:	2301      	movs	r3, #1
 800596c:	e7f0      	b.n	8005950 <_vfiprintf_r+0x1b8>
 800596e:	ab03      	add	r3, sp, #12
 8005970:	9300      	str	r3, [sp, #0]
 8005972:	462a      	mov	r2, r5
 8005974:	4b12      	ldr	r3, [pc, #72]	@ (80059c0 <_vfiprintf_r+0x228>)
 8005976:	a904      	add	r1, sp, #16
 8005978:	4630      	mov	r0, r6
 800597a:	f3af 8000 	nop.w
 800597e:	4607      	mov	r7, r0
 8005980:	1c78      	adds	r0, r7, #1
 8005982:	d1d6      	bne.n	8005932 <_vfiprintf_r+0x19a>
 8005984:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005986:	07d9      	lsls	r1, r3, #31
 8005988:	d405      	bmi.n	8005996 <_vfiprintf_r+0x1fe>
 800598a:	89ab      	ldrh	r3, [r5, #12]
 800598c:	059a      	lsls	r2, r3, #22
 800598e:	d402      	bmi.n	8005996 <_vfiprintf_r+0x1fe>
 8005990:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005992:	f7ff fc6f 	bl	8005274 <__retarget_lock_release_recursive>
 8005996:	89ab      	ldrh	r3, [r5, #12]
 8005998:	065b      	lsls	r3, r3, #25
 800599a:	f53f af1f 	bmi.w	80057dc <_vfiprintf_r+0x44>
 800599e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80059a0:	e71e      	b.n	80057e0 <_vfiprintf_r+0x48>
 80059a2:	ab03      	add	r3, sp, #12
 80059a4:	9300      	str	r3, [sp, #0]
 80059a6:	462a      	mov	r2, r5
 80059a8:	4b05      	ldr	r3, [pc, #20]	@ (80059c0 <_vfiprintf_r+0x228>)
 80059aa:	a904      	add	r1, sp, #16
 80059ac:	4630      	mov	r0, r6
 80059ae:	f000 f879 	bl	8005aa4 <_printf_i>
 80059b2:	e7e4      	b.n	800597e <_vfiprintf_r+0x1e6>
 80059b4:	08006178 	.word	0x08006178
 80059b8:	08006182 	.word	0x08006182
 80059bc:	00000000 	.word	0x00000000
 80059c0:	08005773 	.word	0x08005773
 80059c4:	0800617e 	.word	0x0800617e

080059c8 <_printf_common>:
 80059c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059cc:	4616      	mov	r6, r2
 80059ce:	4698      	mov	r8, r3
 80059d0:	688a      	ldr	r2, [r1, #8]
 80059d2:	690b      	ldr	r3, [r1, #16]
 80059d4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80059d8:	4293      	cmp	r3, r2
 80059da:	bfb8      	it	lt
 80059dc:	4613      	movlt	r3, r2
 80059de:	6033      	str	r3, [r6, #0]
 80059e0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80059e4:	4607      	mov	r7, r0
 80059e6:	460c      	mov	r4, r1
 80059e8:	b10a      	cbz	r2, 80059ee <_printf_common+0x26>
 80059ea:	3301      	adds	r3, #1
 80059ec:	6033      	str	r3, [r6, #0]
 80059ee:	6823      	ldr	r3, [r4, #0]
 80059f0:	0699      	lsls	r1, r3, #26
 80059f2:	bf42      	ittt	mi
 80059f4:	6833      	ldrmi	r3, [r6, #0]
 80059f6:	3302      	addmi	r3, #2
 80059f8:	6033      	strmi	r3, [r6, #0]
 80059fa:	6825      	ldr	r5, [r4, #0]
 80059fc:	f015 0506 	ands.w	r5, r5, #6
 8005a00:	d106      	bne.n	8005a10 <_printf_common+0x48>
 8005a02:	f104 0a19 	add.w	sl, r4, #25
 8005a06:	68e3      	ldr	r3, [r4, #12]
 8005a08:	6832      	ldr	r2, [r6, #0]
 8005a0a:	1a9b      	subs	r3, r3, r2
 8005a0c:	42ab      	cmp	r3, r5
 8005a0e:	dc26      	bgt.n	8005a5e <_printf_common+0x96>
 8005a10:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8005a14:	6822      	ldr	r2, [r4, #0]
 8005a16:	3b00      	subs	r3, #0
 8005a18:	bf18      	it	ne
 8005a1a:	2301      	movne	r3, #1
 8005a1c:	0692      	lsls	r2, r2, #26
 8005a1e:	d42b      	bmi.n	8005a78 <_printf_common+0xb0>
 8005a20:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8005a24:	4641      	mov	r1, r8
 8005a26:	4638      	mov	r0, r7
 8005a28:	47c8      	blx	r9
 8005a2a:	3001      	adds	r0, #1
 8005a2c:	d01e      	beq.n	8005a6c <_printf_common+0xa4>
 8005a2e:	6823      	ldr	r3, [r4, #0]
 8005a30:	6922      	ldr	r2, [r4, #16]
 8005a32:	f003 0306 	and.w	r3, r3, #6
 8005a36:	2b04      	cmp	r3, #4
 8005a38:	bf02      	ittt	eq
 8005a3a:	68e5      	ldreq	r5, [r4, #12]
 8005a3c:	6833      	ldreq	r3, [r6, #0]
 8005a3e:	1aed      	subeq	r5, r5, r3
 8005a40:	68a3      	ldr	r3, [r4, #8]
 8005a42:	bf0c      	ite	eq
 8005a44:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005a48:	2500      	movne	r5, #0
 8005a4a:	4293      	cmp	r3, r2
 8005a4c:	bfc4      	itt	gt
 8005a4e:	1a9b      	subgt	r3, r3, r2
 8005a50:	18ed      	addgt	r5, r5, r3
 8005a52:	2600      	movs	r6, #0
 8005a54:	341a      	adds	r4, #26
 8005a56:	42b5      	cmp	r5, r6
 8005a58:	d11a      	bne.n	8005a90 <_printf_common+0xc8>
 8005a5a:	2000      	movs	r0, #0
 8005a5c:	e008      	b.n	8005a70 <_printf_common+0xa8>
 8005a5e:	2301      	movs	r3, #1
 8005a60:	4652      	mov	r2, sl
 8005a62:	4641      	mov	r1, r8
 8005a64:	4638      	mov	r0, r7
 8005a66:	47c8      	blx	r9
 8005a68:	3001      	adds	r0, #1
 8005a6a:	d103      	bne.n	8005a74 <_printf_common+0xac>
 8005a6c:	f04f 30ff 	mov.w	r0, #4294967295
 8005a70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a74:	3501      	adds	r5, #1
 8005a76:	e7c6      	b.n	8005a06 <_printf_common+0x3e>
 8005a78:	18e1      	adds	r1, r4, r3
 8005a7a:	1c5a      	adds	r2, r3, #1
 8005a7c:	2030      	movs	r0, #48	@ 0x30
 8005a7e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8005a82:	4422      	add	r2, r4
 8005a84:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005a88:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005a8c:	3302      	adds	r3, #2
 8005a8e:	e7c7      	b.n	8005a20 <_printf_common+0x58>
 8005a90:	2301      	movs	r3, #1
 8005a92:	4622      	mov	r2, r4
 8005a94:	4641      	mov	r1, r8
 8005a96:	4638      	mov	r0, r7
 8005a98:	47c8      	blx	r9
 8005a9a:	3001      	adds	r0, #1
 8005a9c:	d0e6      	beq.n	8005a6c <_printf_common+0xa4>
 8005a9e:	3601      	adds	r6, #1
 8005aa0:	e7d9      	b.n	8005a56 <_printf_common+0x8e>
	...

08005aa4 <_printf_i>:
 8005aa4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005aa8:	7e0f      	ldrb	r7, [r1, #24]
 8005aaa:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005aac:	2f78      	cmp	r7, #120	@ 0x78
 8005aae:	4691      	mov	r9, r2
 8005ab0:	4680      	mov	r8, r0
 8005ab2:	460c      	mov	r4, r1
 8005ab4:	469a      	mov	sl, r3
 8005ab6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8005aba:	d807      	bhi.n	8005acc <_printf_i+0x28>
 8005abc:	2f62      	cmp	r7, #98	@ 0x62
 8005abe:	d80a      	bhi.n	8005ad6 <_printf_i+0x32>
 8005ac0:	2f00      	cmp	r7, #0
 8005ac2:	f000 80d2 	beq.w	8005c6a <_printf_i+0x1c6>
 8005ac6:	2f58      	cmp	r7, #88	@ 0x58
 8005ac8:	f000 80b9 	beq.w	8005c3e <_printf_i+0x19a>
 8005acc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005ad0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8005ad4:	e03a      	b.n	8005b4c <_printf_i+0xa8>
 8005ad6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8005ada:	2b15      	cmp	r3, #21
 8005adc:	d8f6      	bhi.n	8005acc <_printf_i+0x28>
 8005ade:	a101      	add	r1, pc, #4	@ (adr r1, 8005ae4 <_printf_i+0x40>)
 8005ae0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005ae4:	08005b3d 	.word	0x08005b3d
 8005ae8:	08005b51 	.word	0x08005b51
 8005aec:	08005acd 	.word	0x08005acd
 8005af0:	08005acd 	.word	0x08005acd
 8005af4:	08005acd 	.word	0x08005acd
 8005af8:	08005acd 	.word	0x08005acd
 8005afc:	08005b51 	.word	0x08005b51
 8005b00:	08005acd 	.word	0x08005acd
 8005b04:	08005acd 	.word	0x08005acd
 8005b08:	08005acd 	.word	0x08005acd
 8005b0c:	08005acd 	.word	0x08005acd
 8005b10:	08005c51 	.word	0x08005c51
 8005b14:	08005b7b 	.word	0x08005b7b
 8005b18:	08005c0b 	.word	0x08005c0b
 8005b1c:	08005acd 	.word	0x08005acd
 8005b20:	08005acd 	.word	0x08005acd
 8005b24:	08005c73 	.word	0x08005c73
 8005b28:	08005acd 	.word	0x08005acd
 8005b2c:	08005b7b 	.word	0x08005b7b
 8005b30:	08005acd 	.word	0x08005acd
 8005b34:	08005acd 	.word	0x08005acd
 8005b38:	08005c13 	.word	0x08005c13
 8005b3c:	6833      	ldr	r3, [r6, #0]
 8005b3e:	1d1a      	adds	r2, r3, #4
 8005b40:	681b      	ldr	r3, [r3, #0]
 8005b42:	6032      	str	r2, [r6, #0]
 8005b44:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005b48:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005b4c:	2301      	movs	r3, #1
 8005b4e:	e09d      	b.n	8005c8c <_printf_i+0x1e8>
 8005b50:	6833      	ldr	r3, [r6, #0]
 8005b52:	6820      	ldr	r0, [r4, #0]
 8005b54:	1d19      	adds	r1, r3, #4
 8005b56:	6031      	str	r1, [r6, #0]
 8005b58:	0606      	lsls	r6, r0, #24
 8005b5a:	d501      	bpl.n	8005b60 <_printf_i+0xbc>
 8005b5c:	681d      	ldr	r5, [r3, #0]
 8005b5e:	e003      	b.n	8005b68 <_printf_i+0xc4>
 8005b60:	0645      	lsls	r5, r0, #25
 8005b62:	d5fb      	bpl.n	8005b5c <_printf_i+0xb8>
 8005b64:	f9b3 5000 	ldrsh.w	r5, [r3]
 8005b68:	2d00      	cmp	r5, #0
 8005b6a:	da03      	bge.n	8005b74 <_printf_i+0xd0>
 8005b6c:	232d      	movs	r3, #45	@ 0x2d
 8005b6e:	426d      	negs	r5, r5
 8005b70:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005b74:	4859      	ldr	r0, [pc, #356]	@ (8005cdc <_printf_i+0x238>)
 8005b76:	230a      	movs	r3, #10
 8005b78:	e011      	b.n	8005b9e <_printf_i+0xfa>
 8005b7a:	6821      	ldr	r1, [r4, #0]
 8005b7c:	6833      	ldr	r3, [r6, #0]
 8005b7e:	0608      	lsls	r0, r1, #24
 8005b80:	f853 5b04 	ldr.w	r5, [r3], #4
 8005b84:	d402      	bmi.n	8005b8c <_printf_i+0xe8>
 8005b86:	0649      	lsls	r1, r1, #25
 8005b88:	bf48      	it	mi
 8005b8a:	b2ad      	uxthmi	r5, r5
 8005b8c:	2f6f      	cmp	r7, #111	@ 0x6f
 8005b8e:	4853      	ldr	r0, [pc, #332]	@ (8005cdc <_printf_i+0x238>)
 8005b90:	6033      	str	r3, [r6, #0]
 8005b92:	bf14      	ite	ne
 8005b94:	230a      	movne	r3, #10
 8005b96:	2308      	moveq	r3, #8
 8005b98:	2100      	movs	r1, #0
 8005b9a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8005b9e:	6866      	ldr	r6, [r4, #4]
 8005ba0:	60a6      	str	r6, [r4, #8]
 8005ba2:	2e00      	cmp	r6, #0
 8005ba4:	bfa2      	ittt	ge
 8005ba6:	6821      	ldrge	r1, [r4, #0]
 8005ba8:	f021 0104 	bicge.w	r1, r1, #4
 8005bac:	6021      	strge	r1, [r4, #0]
 8005bae:	b90d      	cbnz	r5, 8005bb4 <_printf_i+0x110>
 8005bb0:	2e00      	cmp	r6, #0
 8005bb2:	d04b      	beq.n	8005c4c <_printf_i+0x1a8>
 8005bb4:	4616      	mov	r6, r2
 8005bb6:	fbb5 f1f3 	udiv	r1, r5, r3
 8005bba:	fb03 5711 	mls	r7, r3, r1, r5
 8005bbe:	5dc7      	ldrb	r7, [r0, r7]
 8005bc0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005bc4:	462f      	mov	r7, r5
 8005bc6:	42bb      	cmp	r3, r7
 8005bc8:	460d      	mov	r5, r1
 8005bca:	d9f4      	bls.n	8005bb6 <_printf_i+0x112>
 8005bcc:	2b08      	cmp	r3, #8
 8005bce:	d10b      	bne.n	8005be8 <_printf_i+0x144>
 8005bd0:	6823      	ldr	r3, [r4, #0]
 8005bd2:	07df      	lsls	r7, r3, #31
 8005bd4:	d508      	bpl.n	8005be8 <_printf_i+0x144>
 8005bd6:	6923      	ldr	r3, [r4, #16]
 8005bd8:	6861      	ldr	r1, [r4, #4]
 8005bda:	4299      	cmp	r1, r3
 8005bdc:	bfde      	ittt	le
 8005bde:	2330      	movle	r3, #48	@ 0x30
 8005be0:	f806 3c01 	strble.w	r3, [r6, #-1]
 8005be4:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005be8:	1b92      	subs	r2, r2, r6
 8005bea:	6122      	str	r2, [r4, #16]
 8005bec:	f8cd a000 	str.w	sl, [sp]
 8005bf0:	464b      	mov	r3, r9
 8005bf2:	aa03      	add	r2, sp, #12
 8005bf4:	4621      	mov	r1, r4
 8005bf6:	4640      	mov	r0, r8
 8005bf8:	f7ff fee6 	bl	80059c8 <_printf_common>
 8005bfc:	3001      	adds	r0, #1
 8005bfe:	d14a      	bne.n	8005c96 <_printf_i+0x1f2>
 8005c00:	f04f 30ff 	mov.w	r0, #4294967295
 8005c04:	b004      	add	sp, #16
 8005c06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c0a:	6823      	ldr	r3, [r4, #0]
 8005c0c:	f043 0320 	orr.w	r3, r3, #32
 8005c10:	6023      	str	r3, [r4, #0]
 8005c12:	4833      	ldr	r0, [pc, #204]	@ (8005ce0 <_printf_i+0x23c>)
 8005c14:	2778      	movs	r7, #120	@ 0x78
 8005c16:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005c1a:	6823      	ldr	r3, [r4, #0]
 8005c1c:	6831      	ldr	r1, [r6, #0]
 8005c1e:	061f      	lsls	r7, r3, #24
 8005c20:	f851 5b04 	ldr.w	r5, [r1], #4
 8005c24:	d402      	bmi.n	8005c2c <_printf_i+0x188>
 8005c26:	065f      	lsls	r7, r3, #25
 8005c28:	bf48      	it	mi
 8005c2a:	b2ad      	uxthmi	r5, r5
 8005c2c:	6031      	str	r1, [r6, #0]
 8005c2e:	07d9      	lsls	r1, r3, #31
 8005c30:	bf44      	itt	mi
 8005c32:	f043 0320 	orrmi.w	r3, r3, #32
 8005c36:	6023      	strmi	r3, [r4, #0]
 8005c38:	b11d      	cbz	r5, 8005c42 <_printf_i+0x19e>
 8005c3a:	2310      	movs	r3, #16
 8005c3c:	e7ac      	b.n	8005b98 <_printf_i+0xf4>
 8005c3e:	4827      	ldr	r0, [pc, #156]	@ (8005cdc <_printf_i+0x238>)
 8005c40:	e7e9      	b.n	8005c16 <_printf_i+0x172>
 8005c42:	6823      	ldr	r3, [r4, #0]
 8005c44:	f023 0320 	bic.w	r3, r3, #32
 8005c48:	6023      	str	r3, [r4, #0]
 8005c4a:	e7f6      	b.n	8005c3a <_printf_i+0x196>
 8005c4c:	4616      	mov	r6, r2
 8005c4e:	e7bd      	b.n	8005bcc <_printf_i+0x128>
 8005c50:	6833      	ldr	r3, [r6, #0]
 8005c52:	6825      	ldr	r5, [r4, #0]
 8005c54:	6961      	ldr	r1, [r4, #20]
 8005c56:	1d18      	adds	r0, r3, #4
 8005c58:	6030      	str	r0, [r6, #0]
 8005c5a:	062e      	lsls	r6, r5, #24
 8005c5c:	681b      	ldr	r3, [r3, #0]
 8005c5e:	d501      	bpl.n	8005c64 <_printf_i+0x1c0>
 8005c60:	6019      	str	r1, [r3, #0]
 8005c62:	e002      	b.n	8005c6a <_printf_i+0x1c6>
 8005c64:	0668      	lsls	r0, r5, #25
 8005c66:	d5fb      	bpl.n	8005c60 <_printf_i+0x1bc>
 8005c68:	8019      	strh	r1, [r3, #0]
 8005c6a:	2300      	movs	r3, #0
 8005c6c:	6123      	str	r3, [r4, #16]
 8005c6e:	4616      	mov	r6, r2
 8005c70:	e7bc      	b.n	8005bec <_printf_i+0x148>
 8005c72:	6833      	ldr	r3, [r6, #0]
 8005c74:	1d1a      	adds	r2, r3, #4
 8005c76:	6032      	str	r2, [r6, #0]
 8005c78:	681e      	ldr	r6, [r3, #0]
 8005c7a:	6862      	ldr	r2, [r4, #4]
 8005c7c:	2100      	movs	r1, #0
 8005c7e:	4630      	mov	r0, r6
 8005c80:	f7fa fab6 	bl	80001f0 <memchr>
 8005c84:	b108      	cbz	r0, 8005c8a <_printf_i+0x1e6>
 8005c86:	1b80      	subs	r0, r0, r6
 8005c88:	6060      	str	r0, [r4, #4]
 8005c8a:	6863      	ldr	r3, [r4, #4]
 8005c8c:	6123      	str	r3, [r4, #16]
 8005c8e:	2300      	movs	r3, #0
 8005c90:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005c94:	e7aa      	b.n	8005bec <_printf_i+0x148>
 8005c96:	6923      	ldr	r3, [r4, #16]
 8005c98:	4632      	mov	r2, r6
 8005c9a:	4649      	mov	r1, r9
 8005c9c:	4640      	mov	r0, r8
 8005c9e:	47d0      	blx	sl
 8005ca0:	3001      	adds	r0, #1
 8005ca2:	d0ad      	beq.n	8005c00 <_printf_i+0x15c>
 8005ca4:	6823      	ldr	r3, [r4, #0]
 8005ca6:	079b      	lsls	r3, r3, #30
 8005ca8:	d413      	bmi.n	8005cd2 <_printf_i+0x22e>
 8005caa:	68e0      	ldr	r0, [r4, #12]
 8005cac:	9b03      	ldr	r3, [sp, #12]
 8005cae:	4298      	cmp	r0, r3
 8005cb0:	bfb8      	it	lt
 8005cb2:	4618      	movlt	r0, r3
 8005cb4:	e7a6      	b.n	8005c04 <_printf_i+0x160>
 8005cb6:	2301      	movs	r3, #1
 8005cb8:	4632      	mov	r2, r6
 8005cba:	4649      	mov	r1, r9
 8005cbc:	4640      	mov	r0, r8
 8005cbe:	47d0      	blx	sl
 8005cc0:	3001      	adds	r0, #1
 8005cc2:	d09d      	beq.n	8005c00 <_printf_i+0x15c>
 8005cc4:	3501      	adds	r5, #1
 8005cc6:	68e3      	ldr	r3, [r4, #12]
 8005cc8:	9903      	ldr	r1, [sp, #12]
 8005cca:	1a5b      	subs	r3, r3, r1
 8005ccc:	42ab      	cmp	r3, r5
 8005cce:	dcf2      	bgt.n	8005cb6 <_printf_i+0x212>
 8005cd0:	e7eb      	b.n	8005caa <_printf_i+0x206>
 8005cd2:	2500      	movs	r5, #0
 8005cd4:	f104 0619 	add.w	r6, r4, #25
 8005cd8:	e7f5      	b.n	8005cc6 <_printf_i+0x222>
 8005cda:	bf00      	nop
 8005cdc:	08006189 	.word	0x08006189
 8005ce0:	0800619a 	.word	0x0800619a

08005ce4 <__sflush_r>:
 8005ce4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005cec:	0716      	lsls	r6, r2, #28
 8005cee:	4605      	mov	r5, r0
 8005cf0:	460c      	mov	r4, r1
 8005cf2:	d454      	bmi.n	8005d9e <__sflush_r+0xba>
 8005cf4:	684b      	ldr	r3, [r1, #4]
 8005cf6:	2b00      	cmp	r3, #0
 8005cf8:	dc02      	bgt.n	8005d00 <__sflush_r+0x1c>
 8005cfa:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8005cfc:	2b00      	cmp	r3, #0
 8005cfe:	dd48      	ble.n	8005d92 <__sflush_r+0xae>
 8005d00:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005d02:	2e00      	cmp	r6, #0
 8005d04:	d045      	beq.n	8005d92 <__sflush_r+0xae>
 8005d06:	2300      	movs	r3, #0
 8005d08:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8005d0c:	682f      	ldr	r7, [r5, #0]
 8005d0e:	6a21      	ldr	r1, [r4, #32]
 8005d10:	602b      	str	r3, [r5, #0]
 8005d12:	d030      	beq.n	8005d76 <__sflush_r+0x92>
 8005d14:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005d16:	89a3      	ldrh	r3, [r4, #12]
 8005d18:	0759      	lsls	r1, r3, #29
 8005d1a:	d505      	bpl.n	8005d28 <__sflush_r+0x44>
 8005d1c:	6863      	ldr	r3, [r4, #4]
 8005d1e:	1ad2      	subs	r2, r2, r3
 8005d20:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005d22:	b10b      	cbz	r3, 8005d28 <__sflush_r+0x44>
 8005d24:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005d26:	1ad2      	subs	r2, r2, r3
 8005d28:	2300      	movs	r3, #0
 8005d2a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005d2c:	6a21      	ldr	r1, [r4, #32]
 8005d2e:	4628      	mov	r0, r5
 8005d30:	47b0      	blx	r6
 8005d32:	1c43      	adds	r3, r0, #1
 8005d34:	89a3      	ldrh	r3, [r4, #12]
 8005d36:	d106      	bne.n	8005d46 <__sflush_r+0x62>
 8005d38:	6829      	ldr	r1, [r5, #0]
 8005d3a:	291d      	cmp	r1, #29
 8005d3c:	d82b      	bhi.n	8005d96 <__sflush_r+0xb2>
 8005d3e:	4a2a      	ldr	r2, [pc, #168]	@ (8005de8 <__sflush_r+0x104>)
 8005d40:	410a      	asrs	r2, r1
 8005d42:	07d6      	lsls	r6, r2, #31
 8005d44:	d427      	bmi.n	8005d96 <__sflush_r+0xb2>
 8005d46:	2200      	movs	r2, #0
 8005d48:	6062      	str	r2, [r4, #4]
 8005d4a:	04d9      	lsls	r1, r3, #19
 8005d4c:	6922      	ldr	r2, [r4, #16]
 8005d4e:	6022      	str	r2, [r4, #0]
 8005d50:	d504      	bpl.n	8005d5c <__sflush_r+0x78>
 8005d52:	1c42      	adds	r2, r0, #1
 8005d54:	d101      	bne.n	8005d5a <__sflush_r+0x76>
 8005d56:	682b      	ldr	r3, [r5, #0]
 8005d58:	b903      	cbnz	r3, 8005d5c <__sflush_r+0x78>
 8005d5a:	6560      	str	r0, [r4, #84]	@ 0x54
 8005d5c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005d5e:	602f      	str	r7, [r5, #0]
 8005d60:	b1b9      	cbz	r1, 8005d92 <__sflush_r+0xae>
 8005d62:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005d66:	4299      	cmp	r1, r3
 8005d68:	d002      	beq.n	8005d70 <__sflush_r+0x8c>
 8005d6a:	4628      	mov	r0, r5
 8005d6c:	f7ff fa9a 	bl	80052a4 <_free_r>
 8005d70:	2300      	movs	r3, #0
 8005d72:	6363      	str	r3, [r4, #52]	@ 0x34
 8005d74:	e00d      	b.n	8005d92 <__sflush_r+0xae>
 8005d76:	2301      	movs	r3, #1
 8005d78:	4628      	mov	r0, r5
 8005d7a:	47b0      	blx	r6
 8005d7c:	4602      	mov	r2, r0
 8005d7e:	1c50      	adds	r0, r2, #1
 8005d80:	d1c9      	bne.n	8005d16 <__sflush_r+0x32>
 8005d82:	682b      	ldr	r3, [r5, #0]
 8005d84:	2b00      	cmp	r3, #0
 8005d86:	d0c6      	beq.n	8005d16 <__sflush_r+0x32>
 8005d88:	2b1d      	cmp	r3, #29
 8005d8a:	d001      	beq.n	8005d90 <__sflush_r+0xac>
 8005d8c:	2b16      	cmp	r3, #22
 8005d8e:	d11e      	bne.n	8005dce <__sflush_r+0xea>
 8005d90:	602f      	str	r7, [r5, #0]
 8005d92:	2000      	movs	r0, #0
 8005d94:	e022      	b.n	8005ddc <__sflush_r+0xf8>
 8005d96:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005d9a:	b21b      	sxth	r3, r3
 8005d9c:	e01b      	b.n	8005dd6 <__sflush_r+0xf2>
 8005d9e:	690f      	ldr	r7, [r1, #16]
 8005da0:	2f00      	cmp	r7, #0
 8005da2:	d0f6      	beq.n	8005d92 <__sflush_r+0xae>
 8005da4:	0793      	lsls	r3, r2, #30
 8005da6:	680e      	ldr	r6, [r1, #0]
 8005da8:	bf08      	it	eq
 8005daa:	694b      	ldreq	r3, [r1, #20]
 8005dac:	600f      	str	r7, [r1, #0]
 8005dae:	bf18      	it	ne
 8005db0:	2300      	movne	r3, #0
 8005db2:	eba6 0807 	sub.w	r8, r6, r7
 8005db6:	608b      	str	r3, [r1, #8]
 8005db8:	f1b8 0f00 	cmp.w	r8, #0
 8005dbc:	dde9      	ble.n	8005d92 <__sflush_r+0xae>
 8005dbe:	6a21      	ldr	r1, [r4, #32]
 8005dc0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8005dc2:	4643      	mov	r3, r8
 8005dc4:	463a      	mov	r2, r7
 8005dc6:	4628      	mov	r0, r5
 8005dc8:	47b0      	blx	r6
 8005dca:	2800      	cmp	r0, #0
 8005dcc:	dc08      	bgt.n	8005de0 <__sflush_r+0xfc>
 8005dce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005dd2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005dd6:	81a3      	strh	r3, [r4, #12]
 8005dd8:	f04f 30ff 	mov.w	r0, #4294967295
 8005ddc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005de0:	4407      	add	r7, r0
 8005de2:	eba8 0800 	sub.w	r8, r8, r0
 8005de6:	e7e7      	b.n	8005db8 <__sflush_r+0xd4>
 8005de8:	dfbffffe 	.word	0xdfbffffe

08005dec <_fflush_r>:
 8005dec:	b538      	push	{r3, r4, r5, lr}
 8005dee:	690b      	ldr	r3, [r1, #16]
 8005df0:	4605      	mov	r5, r0
 8005df2:	460c      	mov	r4, r1
 8005df4:	b913      	cbnz	r3, 8005dfc <_fflush_r+0x10>
 8005df6:	2500      	movs	r5, #0
 8005df8:	4628      	mov	r0, r5
 8005dfa:	bd38      	pop	{r3, r4, r5, pc}
 8005dfc:	b118      	cbz	r0, 8005e06 <_fflush_r+0x1a>
 8005dfe:	6a03      	ldr	r3, [r0, #32]
 8005e00:	b90b      	cbnz	r3, 8005e06 <_fflush_r+0x1a>
 8005e02:	f7fe ffb7 	bl	8004d74 <__sinit>
 8005e06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005e0a:	2b00      	cmp	r3, #0
 8005e0c:	d0f3      	beq.n	8005df6 <_fflush_r+0xa>
 8005e0e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005e10:	07d0      	lsls	r0, r2, #31
 8005e12:	d404      	bmi.n	8005e1e <_fflush_r+0x32>
 8005e14:	0599      	lsls	r1, r3, #22
 8005e16:	d402      	bmi.n	8005e1e <_fflush_r+0x32>
 8005e18:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005e1a:	f7ff fa2a 	bl	8005272 <__retarget_lock_acquire_recursive>
 8005e1e:	4628      	mov	r0, r5
 8005e20:	4621      	mov	r1, r4
 8005e22:	f7ff ff5f 	bl	8005ce4 <__sflush_r>
 8005e26:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005e28:	07da      	lsls	r2, r3, #31
 8005e2a:	4605      	mov	r5, r0
 8005e2c:	d4e4      	bmi.n	8005df8 <_fflush_r+0xc>
 8005e2e:	89a3      	ldrh	r3, [r4, #12]
 8005e30:	059b      	lsls	r3, r3, #22
 8005e32:	d4e1      	bmi.n	8005df8 <_fflush_r+0xc>
 8005e34:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005e36:	f7ff fa1d 	bl	8005274 <__retarget_lock_release_recursive>
 8005e3a:	e7dd      	b.n	8005df8 <_fflush_r+0xc>

08005e3c <__swhatbuf_r>:
 8005e3c:	b570      	push	{r4, r5, r6, lr}
 8005e3e:	460c      	mov	r4, r1
 8005e40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005e44:	2900      	cmp	r1, #0
 8005e46:	b096      	sub	sp, #88	@ 0x58
 8005e48:	4615      	mov	r5, r2
 8005e4a:	461e      	mov	r6, r3
 8005e4c:	da0d      	bge.n	8005e6a <__swhatbuf_r+0x2e>
 8005e4e:	89a3      	ldrh	r3, [r4, #12]
 8005e50:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8005e54:	f04f 0100 	mov.w	r1, #0
 8005e58:	bf14      	ite	ne
 8005e5a:	2340      	movne	r3, #64	@ 0x40
 8005e5c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8005e60:	2000      	movs	r0, #0
 8005e62:	6031      	str	r1, [r6, #0]
 8005e64:	602b      	str	r3, [r5, #0]
 8005e66:	b016      	add	sp, #88	@ 0x58
 8005e68:	bd70      	pop	{r4, r5, r6, pc}
 8005e6a:	466a      	mov	r2, sp
 8005e6c:	f000 f862 	bl	8005f34 <_fstat_r>
 8005e70:	2800      	cmp	r0, #0
 8005e72:	dbec      	blt.n	8005e4e <__swhatbuf_r+0x12>
 8005e74:	9901      	ldr	r1, [sp, #4]
 8005e76:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8005e7a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8005e7e:	4259      	negs	r1, r3
 8005e80:	4159      	adcs	r1, r3
 8005e82:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8005e86:	e7eb      	b.n	8005e60 <__swhatbuf_r+0x24>

08005e88 <__smakebuf_r>:
 8005e88:	898b      	ldrh	r3, [r1, #12]
 8005e8a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005e8c:	079d      	lsls	r5, r3, #30
 8005e8e:	4606      	mov	r6, r0
 8005e90:	460c      	mov	r4, r1
 8005e92:	d507      	bpl.n	8005ea4 <__smakebuf_r+0x1c>
 8005e94:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8005e98:	6023      	str	r3, [r4, #0]
 8005e9a:	6123      	str	r3, [r4, #16]
 8005e9c:	2301      	movs	r3, #1
 8005e9e:	6163      	str	r3, [r4, #20]
 8005ea0:	b003      	add	sp, #12
 8005ea2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005ea4:	ab01      	add	r3, sp, #4
 8005ea6:	466a      	mov	r2, sp
 8005ea8:	f7ff ffc8 	bl	8005e3c <__swhatbuf_r>
 8005eac:	9f00      	ldr	r7, [sp, #0]
 8005eae:	4605      	mov	r5, r0
 8005eb0:	4639      	mov	r1, r7
 8005eb2:	4630      	mov	r0, r6
 8005eb4:	f7ff fa62 	bl	800537c <_malloc_r>
 8005eb8:	b948      	cbnz	r0, 8005ece <__smakebuf_r+0x46>
 8005eba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005ebe:	059a      	lsls	r2, r3, #22
 8005ec0:	d4ee      	bmi.n	8005ea0 <__smakebuf_r+0x18>
 8005ec2:	f023 0303 	bic.w	r3, r3, #3
 8005ec6:	f043 0302 	orr.w	r3, r3, #2
 8005eca:	81a3      	strh	r3, [r4, #12]
 8005ecc:	e7e2      	b.n	8005e94 <__smakebuf_r+0xc>
 8005ece:	89a3      	ldrh	r3, [r4, #12]
 8005ed0:	6020      	str	r0, [r4, #0]
 8005ed2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005ed6:	81a3      	strh	r3, [r4, #12]
 8005ed8:	9b01      	ldr	r3, [sp, #4]
 8005eda:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8005ede:	b15b      	cbz	r3, 8005ef8 <__smakebuf_r+0x70>
 8005ee0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005ee4:	4630      	mov	r0, r6
 8005ee6:	f000 f837 	bl	8005f58 <_isatty_r>
 8005eea:	b128      	cbz	r0, 8005ef8 <__smakebuf_r+0x70>
 8005eec:	89a3      	ldrh	r3, [r4, #12]
 8005eee:	f023 0303 	bic.w	r3, r3, #3
 8005ef2:	f043 0301 	orr.w	r3, r3, #1
 8005ef6:	81a3      	strh	r3, [r4, #12]
 8005ef8:	89a3      	ldrh	r3, [r4, #12]
 8005efa:	431d      	orrs	r5, r3
 8005efc:	81a5      	strh	r5, [r4, #12]
 8005efe:	e7cf      	b.n	8005ea0 <__smakebuf_r+0x18>

08005f00 <memmove>:
 8005f00:	4288      	cmp	r0, r1
 8005f02:	b510      	push	{r4, lr}
 8005f04:	eb01 0402 	add.w	r4, r1, r2
 8005f08:	d902      	bls.n	8005f10 <memmove+0x10>
 8005f0a:	4284      	cmp	r4, r0
 8005f0c:	4623      	mov	r3, r4
 8005f0e:	d807      	bhi.n	8005f20 <memmove+0x20>
 8005f10:	1e43      	subs	r3, r0, #1
 8005f12:	42a1      	cmp	r1, r4
 8005f14:	d008      	beq.n	8005f28 <memmove+0x28>
 8005f16:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005f1a:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005f1e:	e7f8      	b.n	8005f12 <memmove+0x12>
 8005f20:	4402      	add	r2, r0
 8005f22:	4601      	mov	r1, r0
 8005f24:	428a      	cmp	r2, r1
 8005f26:	d100      	bne.n	8005f2a <memmove+0x2a>
 8005f28:	bd10      	pop	{r4, pc}
 8005f2a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005f2e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005f32:	e7f7      	b.n	8005f24 <memmove+0x24>

08005f34 <_fstat_r>:
 8005f34:	b538      	push	{r3, r4, r5, lr}
 8005f36:	4d07      	ldr	r5, [pc, #28]	@ (8005f54 <_fstat_r+0x20>)
 8005f38:	2300      	movs	r3, #0
 8005f3a:	4604      	mov	r4, r0
 8005f3c:	4608      	mov	r0, r1
 8005f3e:	4611      	mov	r1, r2
 8005f40:	602b      	str	r3, [r5, #0]
 8005f42:	f7fb fb70 	bl	8001626 <_fstat>
 8005f46:	1c43      	adds	r3, r0, #1
 8005f48:	d102      	bne.n	8005f50 <_fstat_r+0x1c>
 8005f4a:	682b      	ldr	r3, [r5, #0]
 8005f4c:	b103      	cbz	r3, 8005f50 <_fstat_r+0x1c>
 8005f4e:	6023      	str	r3, [r4, #0]
 8005f50:	bd38      	pop	{r3, r4, r5, pc}
 8005f52:	bf00      	nop
 8005f54:	200008e8 	.word	0x200008e8

08005f58 <_isatty_r>:
 8005f58:	b538      	push	{r3, r4, r5, lr}
 8005f5a:	4d06      	ldr	r5, [pc, #24]	@ (8005f74 <_isatty_r+0x1c>)
 8005f5c:	2300      	movs	r3, #0
 8005f5e:	4604      	mov	r4, r0
 8005f60:	4608      	mov	r0, r1
 8005f62:	602b      	str	r3, [r5, #0]
 8005f64:	f7fb fb6f 	bl	8001646 <_isatty>
 8005f68:	1c43      	adds	r3, r0, #1
 8005f6a:	d102      	bne.n	8005f72 <_isatty_r+0x1a>
 8005f6c:	682b      	ldr	r3, [r5, #0]
 8005f6e:	b103      	cbz	r3, 8005f72 <_isatty_r+0x1a>
 8005f70:	6023      	str	r3, [r4, #0]
 8005f72:	bd38      	pop	{r3, r4, r5, pc}
 8005f74:	200008e8 	.word	0x200008e8

08005f78 <_sbrk_r>:
 8005f78:	b538      	push	{r3, r4, r5, lr}
 8005f7a:	4d06      	ldr	r5, [pc, #24]	@ (8005f94 <_sbrk_r+0x1c>)
 8005f7c:	2300      	movs	r3, #0
 8005f7e:	4604      	mov	r4, r0
 8005f80:	4608      	mov	r0, r1
 8005f82:	602b      	str	r3, [r5, #0]
 8005f84:	f7fb fb78 	bl	8001678 <_sbrk>
 8005f88:	1c43      	adds	r3, r0, #1
 8005f8a:	d102      	bne.n	8005f92 <_sbrk_r+0x1a>
 8005f8c:	682b      	ldr	r3, [r5, #0]
 8005f8e:	b103      	cbz	r3, 8005f92 <_sbrk_r+0x1a>
 8005f90:	6023      	str	r3, [r4, #0]
 8005f92:	bd38      	pop	{r3, r4, r5, pc}
 8005f94:	200008e8 	.word	0x200008e8

08005f98 <_realloc_r>:
 8005f98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005f9c:	4680      	mov	r8, r0
 8005f9e:	4615      	mov	r5, r2
 8005fa0:	460c      	mov	r4, r1
 8005fa2:	b921      	cbnz	r1, 8005fae <_realloc_r+0x16>
 8005fa4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005fa8:	4611      	mov	r1, r2
 8005faa:	f7ff b9e7 	b.w	800537c <_malloc_r>
 8005fae:	b92a      	cbnz	r2, 8005fbc <_realloc_r+0x24>
 8005fb0:	f7ff f978 	bl	80052a4 <_free_r>
 8005fb4:	2400      	movs	r4, #0
 8005fb6:	4620      	mov	r0, r4
 8005fb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005fbc:	f000 f81a 	bl	8005ff4 <_malloc_usable_size_r>
 8005fc0:	4285      	cmp	r5, r0
 8005fc2:	4606      	mov	r6, r0
 8005fc4:	d802      	bhi.n	8005fcc <_realloc_r+0x34>
 8005fc6:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8005fca:	d8f4      	bhi.n	8005fb6 <_realloc_r+0x1e>
 8005fcc:	4629      	mov	r1, r5
 8005fce:	4640      	mov	r0, r8
 8005fd0:	f7ff f9d4 	bl	800537c <_malloc_r>
 8005fd4:	4607      	mov	r7, r0
 8005fd6:	2800      	cmp	r0, #0
 8005fd8:	d0ec      	beq.n	8005fb4 <_realloc_r+0x1c>
 8005fda:	42b5      	cmp	r5, r6
 8005fdc:	462a      	mov	r2, r5
 8005fde:	4621      	mov	r1, r4
 8005fe0:	bf28      	it	cs
 8005fe2:	4632      	movcs	r2, r6
 8005fe4:	f7ff f94f 	bl	8005286 <memcpy>
 8005fe8:	4621      	mov	r1, r4
 8005fea:	4640      	mov	r0, r8
 8005fec:	f7ff f95a 	bl	80052a4 <_free_r>
 8005ff0:	463c      	mov	r4, r7
 8005ff2:	e7e0      	b.n	8005fb6 <_realloc_r+0x1e>

08005ff4 <_malloc_usable_size_r>:
 8005ff4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005ff8:	1f18      	subs	r0, r3, #4
 8005ffa:	2b00      	cmp	r3, #0
 8005ffc:	bfbc      	itt	lt
 8005ffe:	580b      	ldrlt	r3, [r1, r0]
 8006000:	18c0      	addlt	r0, r0, r3
 8006002:	4770      	bx	lr

08006004 <_init>:
 8006004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006006:	bf00      	nop
 8006008:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800600a:	bc08      	pop	{r3}
 800600c:	469e      	mov	lr, r3
 800600e:	4770      	bx	lr

08006010 <_fini>:
 8006010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006012:	bf00      	nop
 8006014:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006016:	bc08      	pop	{r3}
 8006018:	469e      	mov	lr, r3
 800601a:	4770      	bx	lr
